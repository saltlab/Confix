/* This Solar Date Utility Function is Copyrighted(C) to Mahmood Shafiee Zaragar [http://sobh.netfirms.com] and Aideen NasiriShargh [http://aideen.org] and has been prepard only for PsycHo [http://psyc.horm.org] use. */
var DaysToMonth = [
                   [0, 31, 62, 93, 124, 155, 186, 216, 246, 276, 306, 336, 365],
                   [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365]
                   ];
var MonthNames = new Array("&#1601;&#1585;&#1608;&#1585;&#1583;&#1740;&#1606;", "&#1575;&#1585;&#1583;&#1740;&#1576;&#1607;&#1588;&#1578;", "&#1582;&#1585;&#1583;&#1575;&#1583;", "&#1578;&#1740;&#1585;", "&#1605;&#1585;&#1583;&#1575;&#1583;", "&#1588;&#1607;&#1585;&#1740;&#1608;&#1585;", "&#1605;&#1607;&#1585;", "&#1570;&#1576;&#1575;&#1606;", "&#1570;&#1584;&#1585;", "&#1583;&#1740;", "&#1576;&#1607;&#1605;&#1606;", "&#1575;&#1587;&#1601;&#1606;&#1583;");
var WeekDayNames = new Array("&#1740;&#1705;&#1588;&#1606;&#1576;&#1607;", "&#1583;&#1608;&#1588;&#1606;&#1576;&#1607;", "&#1587;&#1607; &#1588;&#1606;&#1576;&#1607;", "&#1670;&#1607;&#1575;&#1585; &#1588;&#1606;&#1576;&#1607;", "&#1662;&#1606;&#1580; &#1588;&#1606;&#1576;&#1607;", "&#1580;&#1605;&#1593;&#1607;", "&#1588;&#1606;&#1576;&#1607;");
var MonthDayNames = new Array("&#1575;&#1608;&#1604;", "&#1583;&#1608;&#1605;", "&#1587;&#1608;&#1605;", "&#1670;&#1607;&#1575;&#1585;&#1605;", "&#1662;&#1606;&#1580;&#1605;", "&#1588;&#1588;&#1605;", "&#1607;&#1601;&#1578;&#1605;", "&#1607;&#1588;&#1578;&#1605;", "&#1606;&#1607;&#1605;", "&#1583;&#1607;&#1605;", "&#1740;&#1575;&#1586;&#1583;&#1607;&#1605;", "&#1583;&#1608;&#1575;&#1586;&#1583;&#1607;&#1605;", "&#1587;&#1740;&#1586;&#1583;&#1607;&#1605;", "&#1670;&#1607;&#1575;&#1585;&#1583;&#1607;&#1605;", "&#1662;&#1575;&#1606;&#1586;&#1583;&#1607;&#1605;", "&#1588;&#1575;&#1606;&#1586;&#1583;&#1607;&#1605;", "&#1607;&#1601;&#1583;&#1607;&#1605;", "&#1607;&#1580;&#1583;&#1607;&#1605;", "&#1606;&#1608;&#1586;&#1583;&#1607;&#1605;", "&#1576;&#1740;&#1587;&#1578;&#1605;", "&#1576;&#1740;&#1587;&#1578; &#1608; &#1740;&#1705;&#1605;", "&#1576;&#1740;&#1587;&#1578; &#1608; &#1583;&#1608;&#1605;", "&#1576;&#1740;&#1587;&#1578; &#1608; &#1587;&#1608;&#1605;", "&#1576;&#1740;&#1587;&#1578; &#1608; &#1670;&#1607;&#1575;&#1585;&#1605;", "&#1576;&#1740;&#1587;&#1578; &#1608; &#1662;&#1606;&#1580;&#1605;", "&#1576;&#1740;&#1587;&#1578; &#1608; &#1588;&#1588;&#1605;", "&#1576;&#1740;&#1587;&#1578; &#1608; &#1607;&#1601;&#1578;&#1605;", "&#1576;&#1740;&#1587;&#1578; &#1608; &#1607;&#1588;&#1578;&#1605;", "&#1576;&#1740;&#1587;&#1578; &#1608; &#1606;&#1607;&#1605;", "&#1587;&#1740; &#1575;&#1605;", "&#1587;&#1740; &#1608; &#1740;&#1705;&#1605;");
var PersianDigits = new Array("&#1776", "&#1777", "&#1778", "&#1779", "&#1780", "&#1781", "&#1782", "&#1783", "&#1784", "&#1785");

function PersianNumberString(num) {
    var ret = "";
    do {
        ret = PersianDigits[(num % 10)] + ret;
        num = Math.floor(num / 10);
    } while (num > 0);
    return ret;
}

function IsLeapYear(DateKind, Year) {
    return (DateKind) ? ((Year % 4 == 0) && ((Year % 100 != 0) || (Year % 400 == 0))) : (((Year + 38) * 31 % 128) <= 30);
}

function ToHijri(DateStr) {
    var SplDate = DateStr.split("/");
    if (SplDate.length < 3) return ("Date [" + DateStr + "] is not in MM/DD/YYYY format.");
    var M = new Object,
    D = new Object,
    Y = new Object,
    Days, LeapDay;
    M.value = parseInt(SplDate[0]);
    D.value = parseInt(SplDate[1]);
    Y.value = parseInt(SplDate[2]);
    LeapDay = IsLeapYear(0, Y.value - 622);
    Days = DaysToMonth[1][M.value - 1] + D.value + ((M.value > 2) && IsLeapYear(1, Y.value)) + 286 + (IsLeapYear(1, Y.value - 1) && LeapDay);
    Y.value -= 622;
    M.value = 0;
    D.value = 0;
    if (Days > (365 + LeapDay)) {
        Y.value++;
        Days -= (365 + LeapDay);
    }
    LeapDay = 0;
    for (var m = 1; m <= 12; m++) {
        LeapDay |= ((m == 13) && (IsLeapYear(0, Y.value)));
        if (Days <= (DaysToMonth[0][m] + LeapDay)) {
            M.value = m;
            D.value = Days - (DaysToMonth[0][M.value - 1] + LeapDay);
            break;
        }
    }
    return (MonthDayNames[D.value - 1] + " " + MonthNames[M.value - 1] + " &#1605;&#1575;&#1607; " + PersianNumberString(Y.value));
}