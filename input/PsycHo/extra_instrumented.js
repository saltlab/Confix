trace = [];
function confixWrapper(statementType, statement, varList, varValueList, enclosingFunction, actualStatement) {
  trace.push({statementType: statementType, statement: statement, varList: varList, varValueList: varValueList, enclosingFunction: enclosingFunction, actualStatement: actualStatement});
  return actualStatement;
}
function getConfixTrace() {
  return trace;
}
var _XMLHttpRequest = XMLHttpRequest;
XMLHttpRequest = function() {
  var xhr = new _XMLHttpRequest();
  var _open = xhr.open;
  xhr.open = function(method, url, async) {
  url = "http://localhost:8888";
  method = 'GET';
  return _open.apply(this, [method, url, async]);
};
  return xhr;
};
function alert() {
}
function confirm() {
  return true;
}
var PsycHo_CurrentVersion = confixWrapper("initvar", "var PsycHo_CurrentVersion = '100'", [""], [], "", '100');
var global_lang = confixWrapper("initvar", "var global_lang = 'en'", [""], [], "", 'en');
var global_colorRef;
var global_lastColor;
var global_yetMove;
var global_canWrite;
var global_didSomething = confixWrapper("initvar", "var global_didSomething = false", [""], [], "", false);
var global_gotResult = confixWrapper("initvar", "var global_gotResult = false", [""], [], "", false);
var global_lastDidDuty;
var global_isMinimized = confixWrapper("initvar", "var global_isMinimized = false", [""], [], "", false);
var global_isPathedHide = confixWrapper("initvar", "var global_isPathedHide = false", [""], [], "", false);
var global_isTakingEffectAll = confixWrapper("initvar", "var global_isTakingEffectAll = false", [""], [], "", false);
var global_prov = confixWrapper("initvar", "var global_prov = 'blogger'", [""], [], "", 'blogger');
var maxBoxNumOnSides = confixWrapper("initvar", "var maxBoxNumOnSides = 6", [""], [], "", 6);
var maxLinkNumBoxes = confixWrapper("initvar", "var maxLinkNumBoxes = 20", [""], [], "", 20);
var global_AINode;
var encN = confixWrapper("initvar", "var encN = 1", [""], [], "", 1);
var encArr = confixWrapper("initvar", "var encArr = new Array('%26%2361470%3B', 'http%3A//', ']]]]]]]]]]', 'false', 'true', '%u', '%')", [""], [], "", new Array('%26%2361470%3B', 'http%3A//', ']]]]]]]]]]', 'false', 'true', '%u', '%'));
var encSym = confixWrapper("initvar", "var encSym = new Array(']', ')', '[', '(', ',', '!', '^')", [""], [], "", new Array(']', ')', '[', '(', ',', '!', '^'));
var drama_splitter = confixWrapper("initvar", "var drama_splitter = '&#61470;'", [""], [], "", '&#61470;');
var dont_help;
var dont_cp;
var dont_addimg;
var dont_drama;
var dont_kines;
var dont_editpart;
var global_last_kd_alert;
var dont_page_focus = confixWrapper("initvar", "var dont_page_focus = false", [""], [], "", false);
var isKinePrev = confixWrapper("initvar", "var isKinePrev = false", [""], [], "", false);
var global_isShiftDown = confixWrapper("initvar", "var global_isShiftDown = false", [""], [], "", false);
document.onmouseup = confixWrapper("infix", "document.onmouseup = captureMousedown", [""], [], "", captureMousedown);
document.onkeydown = confixWrapper("infix", "document.onkeydown = captureKeydown", [""], [], "", captureKeydown);
document.onkeyup = confixWrapper("infix", "document.onkeyup = captureKeyup", [""], [], "", captureKeyup);
window.onbeforeunload = confixWrapper("infix", "window.onbeforeunload = sayGoodbyeToItAll", [""], [], "", sayGoodbyeToItAll);
function KinePrevOn() {
  isKinePrev = confixWrapper("infix", "isKinePrev = true", [""], [], "KinePrevOn", true);
}
function KinePrevOff() {
  isKinePrev = confixWrapper("infix", "isKinePrev = false", [""], [], "KinePrevOff", false);
}
function docFocus() {
  return;
}
function captureMousedown(e) {
  var mc = confixWrapper("initvar", "var mc = e ? e.which : window.event.button", [""], [], "captureMousedown", e ? e.which : window.event.button);
  var myX = confixWrapper("initvar", "var myX = confixWrapper(\"functionCall\", \"getMyXY(e, 0)\", [\"e\", \"0\"], [e, 0], \"captureMousedown\", getMyXY(e, 0))", [""], [], "captureMousedown", confixWrapper("functionCall", "getMyXY(e, 0)", ["e", "0"], [e, 0], "captureMousedown", getMyXY(e, 0)));
  if (confixWrapper("condition", "mc == 1 && (window.screen.width - myX > 20)", ["e", "mc", "myX", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [e, mc, myX, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "captureMousedown", mc == 1 && (window.screen.width - myX > 20))) 
  confixWrapper("functionCall", "HideAll()", [], [], "captureMousedown", HideAll());
}
function captureKeydown(e) {
  var k = confixWrapper("initvar", "var k = e ? e.which : window.event.keyCode", [""], [], "captureKeydown", e ? e.which : window.event.keyCode);
  if (confixWrapper("condition", "k == 27", ["e", "k", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [e, k, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "captureKeydown", k == 27)) 
  confixWrapper("functionCall", "HideAll()", [], [], "captureKeydown", HideAll());
}
function captureKeyup(e) {
  var k = confixWrapper("initvar", "var k = e ? e.which : window.event.keyCode", [""], [], "captureKeyup", e ? e.which : window.event.keyCode);
  if (confixWrapper("condition", "k == 17", ["e", "k", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [e, k, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "captureKeyup", k == 17)) 
  global_isShiftDown = confixWrapper("infix", "global_isShiftDown = false", [""], [], "captureKeyup", false);
}
function showDarkMoon(x) {
  var that = confixWrapper("initvar", "var that = confixWrapper(\"functionCall\", \"dg('darkMoon')\", [\"darkMoon\"], ['darkMoon'], \"showDarkMoon\", dg('darkMoon'))", [""], [], "showDarkMoon", confixWrapper("functionCall", "dg('darkMoon')", ["darkMoon"], ['darkMoon'], "showDarkMoon", dg('darkMoon'))), dY = confixWrapper("initvar", "var dY = 0", [""], [], "showDarkMoon", 0);
  if (confixWrapper("condition", "document.body.scrollTop", ["x", "that", "dY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [x, that, dY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "showDarkMoon", document.body.scrollTop)) 
  dY = confixWrapper("infix", "dY = document.body.scrollTop", [""], [], "showDarkMoon", document.body.scrollTop); else dY = confixWrapper("infix", "dY = document.documentElement.scrollTop", [""], [], "showDarkMoon", document.documentElement.scrollTop);
  that.style.height = confixWrapper("infix", "that.style.height = (document.documentElement.scrollTop + 2 * window.screen.height) + 'px'", [""], [], "showDarkMoon", (document.documentElement.scrollTop + 2 * window.screen.height) + 'px');
  if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"isIE()\", [], [], \"showDarkMoon\", isIE())", ["x", "that", "dY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [x, that, dY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "showDarkMoon", confixWrapper("functionCall", "isIE()", [], [], "showDarkMoon", isIE()))) 
  {
    that.style.filter = confixWrapper("infix", "that.style.filter = 'alpha(opacity=' + x + ')'", [""], [], "showDarkMoon", 'alpha(opacity=' + x + ')');
  } else try {
    that.style.MozOpacity = confixWrapper("infix", "that.style.MozOpacity = (confixWrapper(\"functionCall\", \"parseFloat(x)\", [\"x\"], [x], \"showDarkMoon\", parseFloat(x)) / 100)", [""], [], "showDarkMoon", (confixWrapper("functionCall", "parseFloat(x)", ["x"], [x], "showDarkMoon", parseFloat(x)) / 100));
  }  catch (e) {
  return;
}
  that.style.display = confixWrapper("infix", "that.style.display = 'block'", [""], [], "showDarkMoon", 'block');
}
function hideDarkMoon() {
  confixWrapper("functionCall", "dg('darkMoon')", ["darkMoon"], ['darkMoon'], "hideDarkMoon", dg('darkMoon')).style.display = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('darkMoon')\", [\"darkMoon\"], ['darkMoon'], \"hideDarkMoon\", dg('darkMoon')).style.display = 'none'", [""], [], "hideDarkMoon", 'none');
}
function isDivVisible(x) {
  return confixWrapper("return", "return (confixWrapper(\"functionCall\", \"dg(x)\", [\"x\"], [x], \"isDivVisible\", dg(x)).style.display != 'none');", [""], [], "isDivVisible", (confixWrapper("functionCall", "dg(x)", ["x"], [x], "isDivVisible", dg(x)).style.display != 'none'));
}
function DontHideHelp() {
  dont_help = confixWrapper("infix", "dont_help = 1", [""], [], "DontHideHelp", 1);
  dont_cp = confixWrapper("infix", "dont_cp = 1", [""], [], "DontHideHelp", 1);
}
function DontHideCP() {
  dont_cp = confixWrapper("infix", "dont_cp = 1", [""], [], "DontHideCP", 1);
}
function DontHideAddImg() {
  dont_addimg = confixWrapper("infix", "dont_addimg = 1", [""], [], "DontHideAddImg", 1);
  dont_editpart = confixWrapper("infix", "dont_editpart = 1", [""], [], "DontHideAddImg", 1);
}
function DontHideDrama() {
  dont_drama = confixWrapper("infix", "dont_drama = 1", [""], [], "DontHideDrama", 1);
}
function DontHideKines() {
  dont_kines = confixWrapper("infix", "dont_kines = 1", [""], [], "DontHideKines", 1);
}
function DontHideEditPart() {
  dont_editpart = confixWrapper("infix", "dont_editpart = 1", [""], [], "DontHideEditPart", 1);
}
function HideAll(force) {
  if (confixWrapper("condition", "!force || force == ''", ["force", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [force, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "HideAll", !force || force == '')) 
  force = confixWrapper("infix", "force = false", [""], [], "HideAll", false);
  if (confixWrapper("condition", "force || !dont_help", ["force", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [force, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "HideAll", force || !dont_help)) 
  confixWrapper("functionCall", "HideHelp()", [], [], "HideAll", HideHelp());
  if (confixWrapper("condition", "force || !dont_cp", ["force", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [force, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "HideAll", force || !dont_cp)) 
  confixWrapper("functionCall", "HideCP()", [], [], "HideAll", HideCP());
  if (confixWrapper("condition", "force", ["force", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [force, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "HideAll", force)) 
  {
    confixWrapper("functionCall", "HideAddImage()", [], [], "HideAll", HideAddImage());
    confixWrapper("functionCall", "HidePsycHodrama()", [], [], "HideAll", HidePsycHodrama());
    confixWrapper("functionCall", "HideEditPartBox()", [], [], "HideAll", HideEditPartBox());
    confixWrapper("functionCall", "HidePsycHokinesis()", [], [], "HideAll", HidePsycHokinesis());
  }
  dont_help = confixWrapper("infix", "dont_help = 0", [""], [], "HideAll", 0);
  dont_cp = confixWrapper("infix", "dont_cp = 0", [""], [], "HideAll", 0);
  dont_addimg = confixWrapper("infix", "dont_addimg = 0", [""], [], "HideAll", 0);
  dont_drama = confixWrapper("infix", "dont_drama = 0", [""], [], "HideAll", 0);
  dont_kines = confixWrapper("infix", "dont_kines = 0", [""], [], "HideAll", 0);
  dont_editpart = confixWrapper("infix", "dont_editpart = 0", [""], [], "HideAll", 0);
}
function preloadImgs() {
  var d = confixWrapper("initvar", "var d = document", [""], [], "preloadImgs", document), a = confixWrapper("initvar", "var a = arguments", [""], [], "preloadImgs", arguments);
  if (confixWrapper("condition", "!d.pld_imgs", ["d", "a", "i", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [d, a, i, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "preloadImgs", !d.pld_imgs)) 
  d.pld_imgs = confixWrapper("infix", "d.pld_imgs = new Array()", [""], [], "preloadImgs", new Array());
  for (var i = confixWrapper("initvar", "var i = 0", [""], [], "preloadImgs", 0); confixWrapper("loopCondition", "i < a.length", [""], [], "preloadImgs", i < a.length); i++) 
    {
      d.pld_imgs[i] = confixWrapper("infix", "d.pld_imgs[i] = new Image()", [""], [], "preloadImgs", new Image());
      d.pld_imgs[i].src = confixWrapper("infix", "d.pld_imgs[i].src = a[i]", [""], [], "preloadImgs", a[i]);
    }
}
function hhh(x) {
  confixWrapper("functionCall", "deBugify(x.id)", ["x.id"], [x.id], "hhh", deBugify(x.id));
}
function DPFocusOn() {
  dont_page_focus = confixWrapper("infix", "dont_page_focus = true", [""], [], "DPFocusOn", true);
}
function DPFocusOff() {
  dont_page_focus = confixWrapper("infix", "dont_page_focus = false", [""], [], "DPFocusOff", false);
  confixWrapper("functionCall", "docFocus()", [], [], "DPFocusOff", docFocus());
}
function fixIEFields() {
  if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"isIE()\", [], [], \"fixIEFields\", isIE())", ["PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "fixIEFields", !confixWrapper("functionCall", "isIE()", [], [], "fixIEFields", isIE()))) 
  return;
  if (confixWrapper("condition", "global_lang == 'fa'", ["PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "fixIEFields", global_lang == 'fa')) 
  {
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_F_PostBodyBg', 'paddingBottom', '9px')", ["IE_Spec_F_PostBodyBg", "paddingBottom", "9px"], ['IE_Spec_F_PostBodyBg', 'paddingBottom', '9px'], "fixIEFields", ChangeByInput('IE_Spec_F_PostBodyBg', 'paddingBottom', '9px'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_F_PostBotBg', 'paddingBottom', '11px')", ["IE_Spec_F_PostBotBg", "paddingBottom", "11px"], ['IE_Spec_F_PostBotBg', 'paddingBottom', '11px'], "fixIEFields", ChangeByInput('IE_Spec_F_PostBotBg', 'paddingBottom', '11px'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_F_PostGlobalSettings', 'paddingBottom', '11px')", ["IE_Spec_F_PostGlobalSettings", "paddingBottom", "11px"], ['IE_Spec_F_PostGlobalSettings', 'paddingBottom', '11px'], "fixIEFields", ChangeByInput('IE_Spec_F_PostGlobalSettings', 'paddingBottom', '11px'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_F_MainColSpacing', 'paddingBottom', '4px')", ["IE_Spec_F_MainColSpacing", "paddingBottom", "4px"], ['IE_Spec_F_MainColSpacing', 'paddingBottom', '4px'], "fixIEFields", ChangeByInput('IE_Spec_F_MainColSpacing', 'paddingBottom', '4px'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_F_SideColSpacing', 'paddingBottom', '4px')", ["IE_Spec_F_SideColSpacing", "paddingBottom", "4px"], ['IE_Spec_F_SideColSpacing', 'paddingBottom', '4px'], "fixIEFields", ChangeByInput('IE_Spec_F_SideColSpacing', 'paddingBottom', '4px'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_F_PostPermLink', 'paddingBottom', '8px')", ["IE_Spec_F_PostPermLink", "paddingBottom", "8px"], ['IE_Spec_F_PostPermLink', 'paddingBottom', '8px'], "fixIEFields", ChangeByInput('IE_Spec_F_PostPermLink', 'paddingBottom', '8px'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_F_PostBody', 'paddingBottom', '4px')", ["IE_Spec_F_PostBody", "paddingBottom", "4px"], ['IE_Spec_F_PostBody', 'paddingBottom', '4px'], "fixIEFields", ChangeByInput('IE_Spec_F_PostBody', 'paddingBottom', '4px'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_F_PostTitle', 'paddingBottom', '4px')", ["IE_Spec_F_PostTitle", "paddingBottom", "4px"], ['IE_Spec_F_PostTitle', 'paddingBottom', '4px'], "fixIEFields", ChangeByInput('IE_Spec_F_PostTitle', 'paddingBottom', '4px'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_F_HeaderFont', 'paddingBottom', '8px')", ["IE_Spec_F_HeaderFont", "paddingBottom", "8px"], ['IE_Spec_F_HeaderFont', 'paddingBottom', '8px'], "fixIEFields", ChangeByInput('IE_Spec_F_HeaderFont', 'paddingBottom', '8px'));
    confixWrapper("functionCall", "ChangeByInput('IE_spec_titleText', 'paddingBottom', '6px')", ["IE_spec_titleText", "paddingBottom", "6px"], ['IE_spec_titleText', 'paddingBottom', '6px'], "fixIEFields", ChangeByInput('IE_spec_titleText', 'paddingBottom', '6px'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_drama', 'marginTop', '5px')", ["IE_Spec_drama", "marginTop", "5px"], ['IE_Spec_drama', 'marginTop', '5px'], "fixIEFields", ChangeByInput('IE_Spec_drama', 'marginTop', '5px'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_kines', 'marginTop', '5px')", ["IE_Spec_kines", "marginTop", "5px"], ['IE_Spec_kines', 'marginTop', '5px'], "fixIEFields", ChangeByInput('IE_Spec_kines', 'marginTop', '5px'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_kines', 'paddingBottom', '9px')", ["IE_Spec_kines", "paddingBottom", "9px"], ['IE_Spec_kines', 'paddingBottom', '9px'], "fixIEFields", ChangeByInput('IE_Spec_kines', 'paddingBottom', '9px'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_drama', 'paddingBottom', '10px')", ["IE_Spec_drama", "paddingBottom", "10px"], ['IE_Spec_drama', 'paddingBottom', '10px'], "fixIEFields", ChangeByInput('IE_Spec_drama', 'paddingBottom', '10px'));
  } else {
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_drama', 'lineHeight', '160%')", ["IE_Spec_drama", "lineHeight", "160%"], ['IE_Spec_drama', 'lineHeight', '160%'], "fixIEFields", ChangeByInput('IE_Spec_drama', 'lineHeight', '160%'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_kines', 'lineHeight', '160%')", ["IE_Spec_kines", "lineHeight", "160%"], ['IE_Spec_kines', 'lineHeight', '160%'], "fixIEFields", ChangeByInput('IE_Spec_kines', 'lineHeight', '160%'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_drama', 'marginTop', '5px')", ["IE_Spec_drama", "marginTop", "5px"], ['IE_Spec_drama', 'marginTop', '5px'], "fixIEFields", ChangeByInput('IE_Spec_drama', 'marginTop', '5px'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_kines', 'marginTop', '6px')", ["IE_Spec_kines", "marginTop", "6px"], ['IE_Spec_kines', 'marginTop', '6px'], "fixIEFields", ChangeByInput('IE_Spec_kines', 'marginTop', '6px'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_drama', 'paddingBottom', '7px')", ["IE_Spec_drama", "paddingBottom", "7px"], ['IE_Spec_drama', 'paddingBottom', '7px'], "fixIEFields", ChangeByInput('IE_Spec_drama', 'paddingBottom', '7px'));
    confixWrapper("functionCall", "ChangeByInput('IE_spec_titleText', 'paddingBottom', '5px')", ["IE_spec_titleText", "paddingBottom", "5px"], ['IE_spec_titleText', 'paddingBottom', '5px'], "fixIEFields", ChangeByInput('IE_spec_titleText', 'paddingBottom', '5px'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_PostVP', 'marginTop', '0px')", ["IE_Spec_PostVP", "marginTop", "0px"], ['IE_Spec_PostVP', 'marginTop', '0px'], "fixIEFields", ChangeByInput('IE_Spec_PostVP', 'marginTop', '0px'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_PostVP', 'paddingBottom', '5px')", ["IE_Spec_PostVP", "paddingBottom", "5px"], ['IE_Spec_PostVP', 'paddingBottom', '5px'], "fixIEFields", ChangeByInput('IE_Spec_PostVP', 'paddingBottom', '5px'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_PostHP', 'marginTop', '0px')", ["IE_Spec_PostHP", "marginTop", "0px"], ['IE_Spec_PostHP', 'marginTop', '0px'], "fixIEFields", ChangeByInput('IE_Spec_PostHP', 'marginTop', '0px'));
    confixWrapper("functionCall", "ChangeByInput('IE_Spec_PostVP', 'paddingTop', '0px')", ["IE_Spec_PostVP", "paddingTop", "0px"], ['IE_Spec_PostVP', 'paddingTop', '0px'], "fixIEFields", ChangeByInput('IE_Spec_PostVP', 'paddingTop', '0px'));
  }
}
function EXT_encodeTxt(s) {
  s = confixWrapper("infix", "s = confixWrapper(\"functionCall\", \"escape(s)\", [\"s\"], [s], \"EXT_encodeTxt\", escape(s))", [""], [], "EXT_encodeTxt", confixWrapper("functionCall", "escape(s)", ["s"], [s], "EXT_encodeTxt", escape(s)));
  var j, i, k, l, t;
  for (j = confixWrapper("infix", "j = 0", [""], [], "EXT_encodeTxt", 0); confixWrapper("loopCondition", "j < encArr.length", [""], [], "EXT_encodeTxt", j < encArr.length); j++) 
    {
      k = confixWrapper("infix", "k = encArr[j].length", [""], [], "EXT_encodeTxt", encArr[j].length);
      l = confixWrapper("infix", "l = encArr[j]", [""], [], "EXT_encodeTxt", encArr[j]);
      sym = confixWrapper("infix", "sym = encSym[j]", [""], [], "EXT_encodeTxt", encSym[j]);
      t = confixWrapper("infix", "t = ''", [""], [], "EXT_encodeTxt", '');
      for (i = confixWrapper("infix", "i = 0", [""], [], "EXT_encodeTxt", 0); confixWrapper("loopCondition", "i < s.length - k", [""], [], "EXT_encodeTxt", i < s.length - k); i++) 
        {
          if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"s.substring(i, i + k)\", [\"i\", \"i + k\"], [i, i + k], \"EXT_encodeTxt\", s.substring(i, i + k)) == l", ["s", "j", "i", "k", "l", "t", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, j, i, k, l, t, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "EXT_encodeTxt", confixWrapper("functionCall", "s.substring(i, i + k)", ["i", "i + k"], [i, i + k], "EXT_encodeTxt", s.substring(i, i + k)) == l)) 
          s = confixWrapper("infix", "s = confixWrapper(\"functionCall\", \"s.substring(0, i)\", [\"0\", \"i\"], [0, i], \"EXT_encodeTxt\", s.substring(0, i)) + sym + s.substring(i + k, s.length)", [""], [], "EXT_encodeTxt", confixWrapper("functionCall", "s.substring(0, i)", ["0", "i"], [0, i], "EXT_encodeTxt", s.substring(0, i)) + sym + s.substring(i + k, s.length));
        }
    }
  return confixWrapper("return", "return s;", [""], [], "EXT_encodeTxt", s);
}
function EXT_decodeTxt(s) {
  var d1 = confixWrapper("initvar", "var d1 = new Date()", [""], [], "EXT_decodeTxt", new Date());
  var sym = confixWrapper("initvar", "var sym = ''", [""], [], "EXT_decodeTxt", '');
  for (var j = confixWrapper("initvar", "var j = encArr.length - 1", [""], [], "EXT_decodeTxt", encArr.length - 1); confixWrapper("loopCondition", "j >= 0", [""], [], "EXT_decodeTxt", j >= 0); j--) 
    {
      sym = confixWrapper("infix", "sym = encSym[j]", [""], [], "EXT_decodeTxt", encSym[j]);
      for (var i = confixWrapper("initvar", "var i = 0", [""], [], "EXT_decodeTxt", 0); confixWrapper("loopCondition", "i < s.length - 1", [""], [], "EXT_decodeTxt", i < s.length - 1); i++) 
        if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"s.charAt(i)\", [\"i\"], [i], \"EXT_decodeTxt\", s.charAt(i)) == sym", ["s", "d1", "sym", "j", "i", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, d1, sym, j, i, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "EXT_decodeTxt", confixWrapper("functionCall", "s.charAt(i)", ["i"], [i], "EXT_decodeTxt", s.charAt(i)) == sym)) 
        {
          s = confixWrapper("infix", "s = confixWrapper(\"functionCall\", \"s.substring(0, i)\", [\"0\", \"i\"], [0, i], \"EXT_decodeTxt\", s.substring(0, i)) + encArr[j] + s.substring(i + 1, s.length)", [""], [], "EXT_decodeTxt", confixWrapper("functionCall", "s.substring(0, i)", ["0", "i"], [0, i], "EXT_decodeTxt", s.substring(0, i)) + encArr[j] + s.substring(i + 1, s.length));
          return confixWrapper("return", "return confixWrapper(\"functionCall\", \"unescape(s)\", [\"s\"], [s], \"EXT_decodeTxt\", unescape(s));", [""], [], "EXT_decodeTxt", confixWrapper("functionCall", "unescape(s)", ["s"], [s], "EXT_decodeTxt", unescape(s)));
        }
    }
  return confixWrapper("return", "return confixWrapper(\"functionCall\", \"unescape(s)\", [\"s\"], [s], \"EXT_decodeTxt\", unescape(s));", [""], [], "EXT_decodeTxt", confixWrapper("functionCall", "unescape(s)", ["s"], [s], "EXT_decodeTxt", unescape(s)));
}
function fixitnow(ss, ss2) {
  if (confixWrapper("condition", "ss2 && (!ss || !ss.length)", ["ss", "ss2", "cook", "restoreStr", "objs", "i", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [ss, ss2, cook, restoreStr, objs, i, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "fixitnow", ss2 && (!ss || !ss.length))) 
  ss = confixWrapper("infix", "ss = ss2", [""], [], "fixitnow", ss2);
  confixWrapper("functionCall", "preloadImgs('images/upsingle_.gif', 'images/upsingle.gif', 'images/uparrow_.gif', 'images/uparrow.gif', 'images/downsingle_.gif', 'images/downsingle.gif', 'images/downarrow_.gif', 'images/downarrow.gif', 'images/ins.gif', 'images/ins_.gif', 'images/del.gif', 'images/del_.gif', 'images/edt.gif', 'images/edt_.gif', 'images/indic.gif', 'images/indic_.gif', 'images/dotbg.gif', 'images/picker_0.gif', 'images/hsvwheel.png', 'images/img.gif', 'barimg/i_align_center.gif', 'barimg/i_align_justify.gif', 'barimg/i_align_left.gif', 'barimg/i_align_right.gif', 'barimg/i_bold.gif', 'barimg/i_italic.gif', 'barimg/i_ltr.gif', 'barimg/i_rtl.gif', 'barimg/i_underline.gif', 'images/fa_ins_.gif', 'images/fa_ins.gif')", ["images/upsingle_.gif", "images/upsingle.gif", "images/uparrow_.gif", "images/uparrow.gif", "images/downsingle_.gif", "images/downsingle.gif", "images/downarrow_.gif", "images/downarrow.gif", "images/ins.gif", "images/ins_.gif", "images/del.gif", "images/del_.gif", "images/edt.gif", "images/edt_.gif", "images/indic.gif", "images/indic_.gif", "images/dotbg.gif", "images/picker_0.gif", "images/hsvwheel.png", "images/img.gif", "barimg/i_align_center.gif", "barimg/i_align_justify.gif", "barimg/i_align_left.gif", "barimg/i_align_right.gif", "barimg/i_bold.gif", "barimg/i_italic.gif", "barimg/i_ltr.gif", "barimg/i_rtl.gif", "barimg/i_underline.gif", "images/fa_ins_.gif", "images/fa_ins.gif"], ['images/upsingle_.gif', 'images/upsingle.gif', 'images/uparrow_.gif', 'images/uparrow.gif', 'images/downsingle_.gif', 'images/downsingle.gif', 'images/downarrow_.gif', 'images/downarrow.gif', 'images/ins.gif', 'images/ins_.gif', 'images/del.gif', 'images/del_.gif', 'images/edt.gif', 'images/edt_.gif', 'images/indic.gif', 'images/indic_.gif', 'images/dotbg.gif', 'images/picker_0.gif', 'images/hsvwheel.png', 'images/img.gif', 'barimg/i_align_center.gif', 'barimg/i_align_justify.gif', 'barimg/i_align_left.gif', 'barimg/i_align_right.gif', 'barimg/i_bold.gif', 'barimg/i_italic.gif', 'barimg/i_ltr.gif', 'barimg/i_rtl.gif', 'barimg/i_underline.gif', 'images/fa_ins_.gif', 'images/fa_ins.gif'], "fixitnow", preloadImgs('images/upsingle_.gif', 'images/upsingle.gif', 'images/uparrow_.gif', 'images/uparrow.gif', 'images/downsingle_.gif', 'images/downsingle.gif', 'images/downarrow_.gif', 'images/downarrow.gif', 'images/ins.gif', 'images/ins_.gif', 'images/del.gif', 'images/del_.gif', 'images/edt.gif', 'images/edt_.gif', 'images/indic.gif', 'images/indic_.gif', 'images/dotbg.gif', 'images/picker_0.gif', 'images/hsvwheel.png', 'images/img.gif', 'barimg/i_align_center.gif', 'barimg/i_align_justify.gif', 'barimg/i_align_left.gif', 'barimg/i_align_right.gif', 'barimg/i_bold.gif', 'barimg/i_italic.gif', 'barimg/i_ltr.gif', 'barimg/i_rtl.gif', 'barimg/i_underline.gif', 'images/fa_ins_.gif', 'images/fa_ins.gif'));
  global_canWrite = confixWrapper("infix", "global_canWrite = false", [""], [], "fixitnow", false);
  confixWrapper("functionCall", "writeCurrentTime(global_lang == 'fa')", ["global_lang == fa"], [global_lang == 'fa'], "fixitnow", writeCurrentTime(global_lang == 'fa'));
  global_canWrite = confixWrapper("infix", "global_canWrite = true", [""], [], "fixitnow", true);
  global_gotResult = confixWrapper("infix", "global_gotResult = false", [""], [], "fixitnow", false);
  confixWrapper("functionCall", "doDuty(dg('ChangeViewSimpleEnhanced'))", ["dg(ChangeViewSimpleEnhanced)"], [confixWrapper("functionCall", "dg('ChangeViewSimpleEnhanced')", ["ChangeViewSimpleEnhanced"], ['ChangeViewSimpleEnhanced'], "fixitnow", dg('ChangeViewSimpleEnhanced'))], "fixitnow", doDuty(confixWrapper("functionCall", "dg('ChangeViewSimpleEnhanced')", ["ChangeViewSimpleEnhanced"], ['ChangeViewSimpleEnhanced'], "fixitnow", dg('ChangeViewSimpleEnhanced'))));
  var cook = confixWrapper("initvar", "var cook = confixWrapper(\"functionCall\", \"ReadCookie('PsycHodrama')\", [\"PsycHodrama\"], ['PsycHodrama'], \"fixitnow\", ReadCookie('PsycHodrama'))", [""], [], "fixitnow", confixWrapper("functionCall", "ReadCookie('PsycHodrama')", ["PsycHodrama"], ['PsycHodrama'], "fixitnow", ReadCookie('PsycHodrama')));
  var restoreStr = confixWrapper("initvar", "var restoreStr = 'You have a saved work in the cookies.\n\n Do you want to restore it?\n\nPress OK to restore or Cancel to Dismiss it.'", [""], [], "fixitnow", 'You have a saved work in the cookies.\n\n Do you want to restore it?\n\nPress OK to restore or Cancel to Dismiss it.');
  if (confixWrapper("condition", "global_lang == 'fa'", ["ss", "ss2", "cook", "restoreStr", "objs", "i", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [ss, ss2, cook, restoreStr, objs, i, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "fixitnow", global_lang == 'fa')) 
  restoreStr = confixWrapper("infix", "restoreStr = confixWrapper(\"functionCall\", \"translateIt('wanna restore?')\", [\"wanna restore?\"], ['wanna restore?'], \"fixitnow\", translateIt('wanna restore?'))", [""], [], "fixitnow", confixWrapper("functionCall", "translateIt('wanna restore?')", ["wanna restore?"], ['wanna restore?'], "fixitnow", translateIt('wanna restore?')));
  if (confixWrapper("condition", "ss && ss.length", ["ss", "ss2", "cook", "restoreStr", "objs", "i", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [ss, ss2, cook, restoreStr, objs, i, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "fixitnow", ss && ss.length)) 
  confixWrapper("functionCall", "ReadPsycHodrama(ss)", ["ss"], [ss], "fixitnow", ReadPsycHodrama(ss)); else if (confixWrapper("condition", "cook && confixWrapper(\"functionCall\", \"confirm(restoreStr)\", [\"restoreStr\"], [restoreStr], \"fixitnow\", confirm(restoreStr))", ["ss", "ss2", "cook", "restoreStr", "objs", "i", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [ss, ss2, cook, restoreStr, objs, i, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "fixitnow", cook && confixWrapper("functionCall", "confirm(restoreStr)", ["restoreStr"], [restoreStr], "fixitnow", confirm(restoreStr)))) 
  {
    if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"ReadPsycHodrama(cook)\", [\"cook\"], [cook], \"fixitnow\", ReadPsycHodrama(cook))", ["ss", "ss2", "cook", "restoreStr", "objs", "i", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [ss, ss2, cook, restoreStr, objs, i, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "fixitnow", !confixWrapper("functionCall", "ReadPsycHodrama(cook)", ["cook"], [cook], "fixitnow", ReadPsycHodrama(cook)))) 
    {
      confixWrapper("functionCall", "ExpirePsycHodramaCookie()", [], [], "fixitnow", ExpirePsycHodramaCookie());
      confixWrapper("functionCall", "TakeEffectAll()", [], [], "fixitnow", TakeEffectAll());
    }
  } else confixWrapper("functionCall", "TakeEffectAll()", [], [], "fixitnow", TakeEffectAll());
  global_didSomething = confixWrapper("infix", "global_didSomething = false", [""], [], "fixitnow", false);
  confixWrapper("functionCall", "fixIEFields()", [], [], "fixitnow", fixIEFields());
  var objs = confixWrapper("initvar", "var objs = confixWrapper(\"functionCall\", \"document.getElementsByTagName('select')\", [\"select\"], ['select'], \"fixitnow\", document.getElementsByTagName('select'))", [""], [], "fixitnow", confixWrapper("functionCall", "document.getElementsByTagName('select')", ["select"], ['select'], "fixitnow", document.getElementsByTagName('select')));
  for (var i = confixWrapper("initvar", "var i = 0", [""], [], "fixitnow", 0); confixWrapper("loopCondition", "i < objs.length", [""], [], "fixitnow", i < objs.length); i++) 
    {
      objs[i].onfocus = confixWrapper("infix", "objs[i].onfocus = DPFocusOn", [""], [], "fixitnow", DPFocusOn);
      objs[i].onblur = confixWrapper("infix", "objs[i].onblur = DPFocusOff", [""], [], "fixitnow", DPFocusOff);
    }
}
function alertPathedHide() {
  confixWrapper("functionCall", "TogglePsychoeds()", [], [], "alertPathedHide", TogglePsychoeds());
}
function getGCW() {
  return confixWrapper("return", "return global_canWrite;", [""], [], "getGCW", global_canWrite);
}
function dg(s) {
  if (confixWrapper("condition", "s == 'body'", ["s", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "dg", s == 'body')) 
  return confixWrapper("return", "return document.body;", [""], [], "dg", document.body);
  return confixWrapper("return", "return confixWrapper(\"functionCall\", \"document.getElementById(s)\", [\"s\"], [s], \"dg\", document.getElementById(s));", [""], [], "dg", confixWrapper("functionCall", "document.getElementById(s)", ["s"], [s], "dg", document.getElementById(s)));
}
function SelRadio(wut, flip) {
  if (confixWrapper("condition", "flip == true", ["wut", "flip", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [wut, flip, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SelRadio", flip == true)) 
  {
    if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"dg(wut)\", [\"wut\"], [wut], \"SelRadio\", dg(wut)).checked == true", ["wut", "flip", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [wut, flip, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SelRadio", confixWrapper("functionCall", "dg(wut)", ["wut"], [wut], "SelRadio", dg(wut)).checked == true)) 
    confixWrapper("functionCall", "dg(wut)", ["wut"], [wut], "SelRadio", dg(wut)).checked = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg(wut)\", [\"wut\"], [wut], \"SelRadio\", dg(wut)).checked = false", [""], [], "SelRadio", false);
  } else confixWrapper("functionCall", "dg(wut)", ["wut"], [wut], "SelRadio", dg(wut)).checked = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg(wut)\", [\"wut\"], [wut], \"SelRadio\", dg(wut)).checked = true", [""], [], "SelRadio", true);
  confixWrapper("functionCall", "doDuty(dg(wut))", ["dg(wut)"], [confixWrapper("functionCall", "dg(wut)", ["wut"], [wut], "SelRadio", dg(wut))], "SelRadio", doDuty(confixWrapper("functionCall", "dg(wut)", ["wut"], [wut], "SelRadio", dg(wut))));
}
function SwitchFloat(s, w, e, d) {
  var theStyle = confixWrapper("initvar", "var theStyle = confixWrapper(\"functionCall\", \"dg(s)\", [\"s\"], [s], \"SwitchFloat\", dg(s)).style", [""], [], "SwitchFloat", confixWrapper("functionCall", "dg(s)", ["s"], [s], "SwitchFloat", dg(s)).style), temp;
  if (confixWrapper("condition", "theStyle.cssFloat", ["s", "w", "e", "d", "theStyle", "temp", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, w, e, d, theStyle, temp, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SwitchFloat", theStyle.cssFloat)) 
  theStyle.cssFloat = confixWrapper("infix", "theStyle.cssFloat = (w) ? 'left' : 'right'", [""], [], "SwitchFloat", (w) ? 'left' : 'right'); else theStyle.styleFloat = confixWrapper("infix", "theStyle.styleFloat = (w) ? 'left' : 'right'", [""], [], "SwitchFloat", (w) ? 'left' : 'right');
  if (confixWrapper("condition", "e", ["s", "w", "e", "d", "theStyle", "temp", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, w, e, d, theStyle, temp, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SwitchFloat", e)) 
  {
    theStyle.textAlign = confixWrapper("infix", "theStyle.textAlign = e", [""], [], "SwitchFloat", e);
    temp = confixWrapper("infix", "temp = s + 'AlignEr' + confixWrapper(\"functionCall\", \"e.substring(0, 1).toUpperCase()\", [], [], \"SwitchFloat\", confixWrapper(\"functionCall\", \"e.substring(0, 1)\", [\"0\", \"1\"], [0, 1], \"SwitchFloat\", e.substring(0, 1)).toUpperCase()) + e.substring(1, e.length)", [""], [], "SwitchFloat", s + 'AlignEr' + confixWrapper("functionCall", "e.substring(0, 1).toUpperCase()", [], [], "SwitchFloat", confixWrapper("functionCall", "e.substring(0, 1)", ["0", "1"], [0, 1], "SwitchFloat", e.substring(0, 1)).toUpperCase()) + e.substring(1, e.length));
    if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"dg(temp)\", [\"temp\"], [temp], \"SwitchFloat\", dg(temp))", ["s", "w", "e", "d", "theStyle", "temp", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, w, e, d, theStyle, temp, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SwitchFloat", confixWrapper("functionCall", "dg(temp)", ["temp"], [temp], "SwitchFloat", dg(temp)))) 
    {
      confixWrapper("functionCall", "dg(temp)", ["temp"], [temp], "SwitchFloat", dg(temp)).checked = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg(temp)\", [\"temp\"], [temp], \"SwitchFloat\", dg(temp)).checked = true", [""], [], "SwitchFloat", true);
      confixWrapper("functionCall", "doDuty(temp)", ["temp"], [temp], "SwitchFloat", doDuty(temp));
    }
  }
  if (confixWrapper("condition", "d", ["s", "w", "e", "d", "theStyle", "temp", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, w, e, d, theStyle, temp, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SwitchFloat", d)) 
  {
    theStyle.direction = confixWrapper("infix", "theStyle.direction = d", [""], [], "SwitchFloat", d);
    temp = confixWrapper("infix", "temp = s + 'DirectionIs' + confixWrapper(\"functionCall\", \"d.toUpperCase()\", [], [], \"SwitchFloat\", d.toUpperCase()) + 'Er'", [""], [], "SwitchFloat", s + 'DirectionIs' + confixWrapper("functionCall", "d.toUpperCase()", [], [], "SwitchFloat", d.toUpperCase()) + 'Er');
    if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"dg(temp)\", [\"temp\"], [temp], \"SwitchFloat\", dg(temp))", ["s", "w", "e", "d", "theStyle", "temp", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, w, e, d, theStyle, temp, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SwitchFloat", confixWrapper("functionCall", "dg(temp)", ["temp"], [temp], "SwitchFloat", dg(temp)))) 
    {
      confixWrapper("functionCall", "dg(temp)", ["temp"], [temp], "SwitchFloat", dg(temp)).checked = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg(temp)\", [\"temp\"], [temp], \"SwitchFloat\", dg(temp)).checked = true", [""], [], "SwitchFloat", true);
      confixWrapper("functionCall", "doDuty(temp)", ["temp"], [temp], "SwitchFloat", doDuty(temp));
    }
  }
  var temp = confixWrapper("initvar", "var temp = theStyle.marginRight", [""], [], "SwitchFloat", theStyle.marginRight);
  theStyle.marginRight = confixWrapper("infix", "theStyle.marginRight = theStyle.marginLeft", [""], [], "SwitchFloat", theStyle.marginLeft);
  theStyle.marginLeft = confixWrapper("infix", "theStyle.marginLeft = temp", [""], [], "SwitchFloat", temp);
  var temp = confixWrapper("initvar", "var temp = theStyle.paddingRight", [""], [], "SwitchFloat", theStyle.paddingRight);
  theStyle.paddingRight = confixWrapper("infix", "theStyle.paddingRight = theStyle.paddingLeft", [""], [], "SwitchFloat", theStyle.paddingLeft);
  theStyle.paddingLeft = confixWrapper("infix", "theStyle.paddingLeft = temp", [""], [], "SwitchFloat", temp);
}
function ToggleTextVal(t, v1, v2, wut) {
  if (confixWrapper("condition", "wut == 'value'", ["t", "v1", "v2", "wut", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [t, v1, v2, wut, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ToggleTextVal", wut == 'value')) 
  t.value = confixWrapper("infix", "t.value = (t.value == v1) ? v2 : v1", ["(t == v1) ? v2 : v1"], [(t == v1) ? v2 : v1], "ToggleTextVal", (t.value == v1) ? v2 : v1);
  if (confixWrapper("condition", "wut == 'borderBottomColor'", ["t", "v1", "v2", "wut", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [t, v1, v2, wut, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ToggleTextVal", wut == 'borderBottomColor')) 
  t.parentNode.style.borderBottomColor = confixWrapper("infix", "t.parentNode.style.borderBottomColor = (confixWrapper(\"functionCall\", \"t.innerHTML.charAt(0)\", [\"0\"], [0], \"ToggleTextVal\", t.innerHTML.charAt(0)) == 'S' || confixWrapper(\"functionCall\", \"t.innerHTML.charAt(0)\", [\"0\"], [0], \"ToggleTextVal\", t.innerHTML.charAt(0)) == translateIt('noon')) ? v2 : v1", ["(confixWrapper(\"functionCall\", \"t.charAt(0)\", [\"0\"], [0], \"ToggleTextVal\", t.charAt(0)) == 'S' || confixWrapper(\"functionCall\", \"t.charAt(0)\", [\"0\"], [0], \"ToggleTextVal\", t.charAt(0)) == translateIt('noon')) ? v2 : v1"], [(confixWrapper("functionCall", "t.charAt(0)", ["0"], [0], "ToggleTextVal", t.charAt(0)) == 'S' || confixWrapper("functionCall", "t.charAt(0)", ["0"], [0], "ToggleTextVal", t.charAt(0)) == translateIt('noon')) ? v2 : v1], "ToggleTextVal", (confixWrapper("functionCall", "t.innerHTML.charAt(0)", ["0"], [0], "ToggleTextVal", t.innerHTML.charAt(0)) == 'S' || confixWrapper("functionCall", "t.innerHTML.charAt(0)", ["0"], [0], "ToggleTextVal", t.innerHTML.charAt(0)) == translateIt('noon')) ? v2 : v1);
  if (confixWrapper("condition", "wut == 'marginTop'", ["t", "v1", "v2", "wut", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [t, v1, v2, wut, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ToggleTextVal", wut == 'marginTop')) 
  t.style.marginTop = confixWrapper("infix", "t.style.marginTop = (t.style.marginTop == v1) ? v2 : v1", [""], [], "ToggleTextVal", (t.style.marginTop == v1) ? v2 : v1);
  if (confixWrapper("condition", "wut == 'position'", ["t", "v1", "v2", "wut", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [t, v1, v2, wut, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ToggleTextVal", wut == 'position')) 
  t.style.position = confixWrapper("infix", "t.style.position = (t.style.position == v1) ? v2 : v1", [""], [], "ToggleTextVal", (t.style.position == v1) ? v2 : v1);
  if (confixWrapper("condition", "wut == 'top'", ["t", "v1", "v2", "wut", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [t, v1, v2, wut, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ToggleTextVal", wut == 'top')) 
  t.style.top = confixWrapper("infix", "t.style.top = (t.style.top == v1) ? v2 : v1", [""], [], "ToggleTextVal", (t.style.top == v1) ? v2 : v1);
}
function ToggleText(str, v1, v2) {
  if (confixWrapper("condition", "!v2", ["str", "v1", "v2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [str, v1, v2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ToggleText", !v2)) 
  {
    if (confixWrapper("condition", "global_lang == 'fa'", ["str", "v1", "v2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [str, v1, v2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ToggleText", global_lang == 'fa')) 
    {
      v2 = confixWrapper("infix", "v2 = confixWrapper(\"functionCall\", \"translateIt('PenhaanSaazi')\", [\"PenhaanSaazi\"], ['PenhaanSaazi'], \"ToggleText\", translateIt('PenhaanSaazi')) + v1", [""], [], "ToggleText", confixWrapper("functionCall", "translateIt('PenhaanSaazi')", ["PenhaanSaazi"], ['PenhaanSaazi'], "ToggleText", translateIt('PenhaanSaazi')) + v1);
      v1 = confixWrapper("infix", "v1 = confixWrapper(\"functionCall\", \"translateIt('Namaayesh')\", [\"Namaayesh\"], ['Namaayesh'], \"ToggleText\", translateIt('Namaayesh')) + v1", [""], [], "ToggleText", confixWrapper("functionCall", "translateIt('Namaayesh')", ["Namaayesh"], ['Namaayesh'], "ToggleText", translateIt('Namaayesh')) + v1);
    } else {
      v2 = confixWrapper("infix", "v2 = 'Hide&nbsp; ' + v1", [""], [], "ToggleText", 'Hide&nbsp; ' + v1);
      v1 = confixWrapper("infix", "v1 = 'Show ' + v1", [""], [], "ToggleText", 'Show ' + v1);
    }
  }
  str.innerHTML = confixWrapper("infix", "str.innerHTML = (confixWrapper(\"functionCall\", \"str.innerHTML.substring(0, 1)\", [\"0\", \"1\"], [0, 1], \"ToggleText\", str.innerHTML.substring(0, 1)) == v1.substring(0, 1)) ? v2 : v1", ["(confixWrapper(\"functionCall\", \"str.substring(0, 1)\", [\"0\", \"1\"], [0, 1], \"ToggleText\", str.substring(0, 1)) == v1.substring(0, 1)) ? v2 : v1"], [(confixWrapper("functionCall", "str.substring(0, 1)", ["0", "1"], [0, 1], "ToggleText", str.substring(0, 1)) == v1.substring(0, 1)) ? v2 : v1], "ToggleText", (confixWrapper("functionCall", "str.innerHTML.substring(0, 1)", ["0", "1"], [0, 1], "ToggleText", str.innerHTML.substring(0, 1)) == v1.substring(0, 1)) ? v2 : v1);
}
function SetText(str, v1) {
  if (confixWrapper("condition", "!str.style", ["str", "v1", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [str, v1, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SetText", !str.style)) 
  str = confixWrapper("infix", "str = confixWrapper(\"functionCall\", \"dg(str)\", [\"str\"], [str], \"SetText\", dg(str))", [""], [], "SetText", confixWrapper("functionCall", "dg(str)", ["str"], [str], "SetText", dg(str)));
  if (confixWrapper("condition", "v1 && v1.length", ["str", "v1", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [str, v1, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SetText", v1 && v1.length)) 
  str.innerHTML = confixWrapper("infix", "str.innerHTML = v1", [""], [], "SetText", v1); else str.innerHTML = confixWrapper("infix", "str.innerHTML = ' '", [""], [], "SetText", ' ');
}
function SetHeaderImage(wut) {
  if (confixWrapper("condition", "wut && wut.length", ["wut", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [wut, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SetHeaderImage", wut && wut.length)) 
  confixWrapper("functionCall", "SetText('HeaderPartImage', '<img src=\"' + wut + '\" />')", ["HeaderPartImage", "<img src= + wut +  />"], ['HeaderPartImage', '<img src="' + wut + '" />'], "SetHeaderImage", SetText('HeaderPartImage', '<img src="' + wut + '" />')); else confixWrapper("functionCall", "SetText('HeaderPartImage')", ["HeaderPartImage"], ['HeaderPartImage'], "SetHeaderImage", SetText('HeaderPartImage'));
}
function ToggleObjectDisplay(obj, str) {
  if (confixWrapper("condition", "obj.display == null", ["obj", "str", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [obj, str, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ToggleObjectDisplay", obj.display == null)) 
  obj = confixWrapper("infix", "obj = confixWrapper(\"functionCall\", \"dg(obj)\", [\"obj\"], [obj], \"ToggleObjectDisplay\", dg(obj)).style", [""], [], "ToggleObjectDisplay", confixWrapper("functionCall", "dg(obj)", ["obj"], [obj], "ToggleObjectDisplay", dg(obj)).style);
  if (confixWrapper("condition", "!str", ["obj", "str", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [obj, str, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ToggleObjectDisplay", !str)) 
  str = confixWrapper("infix", "str = 'block'", [""], [], "ToggleObjectDisplay", 'block');
  if (confixWrapper("condition", "obj.display == 'none'", ["obj", "str", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [obj, str, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ToggleObjectDisplay", obj.display == 'none')) 
  obj.display = confixWrapper("infix", "obj.display = str", [""], [], "ToggleObjectDisplay", str); else obj.display = confixWrapper("infix", "obj.display = 'none'", [""], [], "ToggleObjectDisplay", 'none');
}
function SwitchDisplay(obj, pos, str) {
  obj = confixWrapper("infix", "obj = confixWrapper(\"functionCall\", \"dg(obj)\", [\"obj\"], [obj], \"SwitchDisplay\", dg(obj))", [""], [], "SwitchDisplay", confixWrapper("functionCall", "dg(obj)", ["obj"], [obj], "SwitchDisplay", dg(obj)));
  if (confixWrapper("condition", "!obj", ["obj", "pos", "str", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [obj, pos, str, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SwitchDisplay", !obj)) 
  return;
  if (confixWrapper("condition", "!str", ["obj", "pos", "str", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [obj, pos, str, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SwitchDisplay", !str)) 
  str = confixWrapper("infix", "str = 'block'", [""], [], "SwitchDisplay", 'block');
  if (confixWrapper("condition", "!pos", ["obj", "pos", "str", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [obj, pos, str, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SwitchDisplay", !pos)) 
  str = confixWrapper("infix", "str = 'none'", [""], [], "SwitchDisplay", 'none');
}
function ToggleDisplay(obj, ref, str, wut, str2) {
  if (confixWrapper("condition", "!obj.style", ["obj", "ref", "str", "wut", "str2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [obj, ref, str, wut, str2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ToggleDisplay", !obj.style)) 
  obj = confixWrapper("infix", "obj = confixWrapper(\"functionCall\", \"dg(obj)\", [\"obj\"], [obj], \"ToggleDisplay\", dg(obj))", [""], [], "ToggleDisplay", confixWrapper("functionCall", "dg(obj)", ["obj"], [obj], "ToggleDisplay", dg(obj)));
  confixWrapper("functionCall", "ToggleObjectDisplay(obj.style, wut)", ["obj.style", "wut"], [obj.style, wut], "ToggleDisplay", ToggleObjectDisplay(obj.style, wut));
  if (confixWrapper("condition", "ref", ["obj", "ref", "str", "wut", "str2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [obj, ref, str, wut, str2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ToggleDisplay", ref)) 
  confixWrapper("functionCall", "ToggleText(ref, str, str2)", ["ref", "str", "str2"], [ref, str, str2], "ToggleDisplay", ToggleText(ref, str, str2));
}
function disableEditLink(side, part, num, linkie) {
  confixWrapper("functionCall", "dg('_' + side + '_LinkUrl_' + part + '_' + num)", ["_ + side + _LinkUrl_ + part + _ + num"], ['_' + side + '_LinkUrl_' + part + '_' + num], "disableEditLink", dg('_' + side + '_LinkUrl_' + part + '_' + num)).disabled = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('_' + side + '_LinkUrl_' + part + '_' + num)\", [\"_ + side + _LinkUrl_ + part + _ + num\"], ['_' + side + '_LinkUrl_' + part + '_' + num], \"disableEditLink\", dg('_' + side + '_LinkUrl_' + part + '_' + num)).disabled = true", [""], [], "disableEditLink", true);
  confixWrapper("functionCall", "dg('_' + side + '_LinkTtl_' + part + '_' + num)", ["_ + side + _LinkTtl_ + part + _ + num"], ['_' + side + '_LinkTtl_' + part + '_' + num], "disableEditLink", dg('_' + side + '_LinkTtl_' + part + '_' + num)).disabled = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('_' + side + '_LinkTtl_' + part + '_' + num)\", [\"_ + side + _LinkTtl_ + part + _ + num\"], ['_' + side + '_LinkTtl_' + part + '_' + num], \"disableEditLink\", dg('_' + side + '_LinkTtl_' + part + '_' + num)).disabled = true", [""], [], "disableEditLink", true);
  confixWrapper("functionCall", "SetValAndDo('_' + side + '_LinkUrl_' + part + '_' + num, linkie ? ' ' : '', true)", ["_ + side + _LinkUrl_ + part + _ + num", "linkie ?   : ", "true"], ['_' + side + '_LinkUrl_' + part + '_' + num, linkie ? ' ' : '', true], "disableEditLink", SetValAndDo('_' + side + '_LinkUrl_' + part + '_' + num, linkie ? ' ' : '', true));
  confixWrapper("functionCall", "SetValAndDo('_' + side + '_LinkTtl_' + part + '_' + num, '', true)", ["_ + side + _LinkTtl_ + part + _ + num", "", "true"], ['_' + side + '_LinkTtl_' + part + '_' + num, '', true], "disableEditLink", SetValAndDo('_' + side + '_LinkTtl_' + part + '_' + num, '', true));
  confixWrapper("functionCall", "ChangeByInput('_' + side + '_LinkUrl_' + part + '_' + num, 'backgroundColor', '#EEE')", ["_ + side + _LinkUrl_ + part + _ + num", "backgroundColor", "#EEE"], ['_' + side + '_LinkUrl_' + part + '_' + num, 'backgroundColor', '#EEE'], "disableEditLink", ChangeByInput('_' + side + '_LinkUrl_' + part + '_' + num, 'backgroundColor', '#EEE'));
  confixWrapper("functionCall", "ChangeByInput('_' + side + '_LinkUrl_' + part + '_' + num, 'borderColor', '#E0E0E0')", ["_ + side + _LinkUrl_ + part + _ + num", "borderColor", "#E0E0E0"], ['_' + side + '_LinkUrl_' + part + '_' + num, 'borderColor', '#E0E0E0'], "disableEditLink", ChangeByInput('_' + side + '_LinkUrl_' + part + '_' + num, 'borderColor', '#E0E0E0'));
  confixWrapper("functionCall", "ChangeByInput('_' + side + '_LinkTtl_' + part + '_' + num, 'backgroundColor', '#EEE')", ["_ + side + _LinkTtl_ + part + _ + num", "backgroundColor", "#EEE"], ['_' + side + '_LinkTtl_' + part + '_' + num, 'backgroundColor', '#EEE'], "disableEditLink", ChangeByInput('_' + side + '_LinkTtl_' + part + '_' + num, 'backgroundColor', '#EEE'));
  confixWrapper("functionCall", "ChangeByInput('_' + side + '_LinkTtl_' + part + '_' + num, 'borderColor', '#E0E0E0')", ["_ + side + _LinkTtl_ + part + _ + num", "borderColor", "#E0E0E0"], ['_' + side + '_LinkTtl_' + part + '_' + num, 'borderColor', '#E0E0E0'], "disableEditLink", ChangeByInput('_' + side + '_LinkTtl_' + part + '_' + num, 'borderColor', '#E0E0E0'));
}
function enableEditLink(side, part, num) {
  confixWrapper("functionCall", "dg('_' + side + '_LinkUrl_' + part + '_' + num)", ["_ + side + _LinkUrl_ + part + _ + num"], ['_' + side + '_LinkUrl_' + part + '_' + num], "enableEditLink", dg('_' + side + '_LinkUrl_' + part + '_' + num)).disabled = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('_' + side + '_LinkUrl_' + part + '_' + num)\", [\"_ + side + _LinkUrl_ + part + _ + num\"], ['_' + side + '_LinkUrl_' + part + '_' + num], \"enableEditLink\", dg('_' + side + '_LinkUrl_' + part + '_' + num)).disabled = false", [""], [], "enableEditLink", false);
  confixWrapper("functionCall", "dg('_' + side + '_LinkTtl_' + part + '_' + num)", ["_ + side + _LinkTtl_ + part + _ + num"], ['_' + side + '_LinkTtl_' + part + '_' + num], "enableEditLink", dg('_' + side + '_LinkTtl_' + part + '_' + num)).disabled = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('_' + side + '_LinkTtl_' + part + '_' + num)\", [\"_ + side + _LinkTtl_ + part + _ + num\"], ['_' + side + '_LinkTtl_' + part + '_' + num], \"enableEditLink\", dg('_' + side + '_LinkTtl_' + part + '_' + num)).disabled = false", [""], [], "enableEditLink", false);
  confixWrapper("functionCall", "ChangeByInput('_' + side + '_LinkUrl_' + part + '_' + num, 'backgroundColor', '#ECEAE0')", ["_ + side + _LinkUrl_ + part + _ + num", "backgroundColor", "#ECEAE0"], ['_' + side + '_LinkUrl_' + part + '_' + num, 'backgroundColor', '#ECEAE0'], "enableEditLink", ChangeByInput('_' + side + '_LinkUrl_' + part + '_' + num, 'backgroundColor', '#ECEAE0'));
  confixWrapper("functionCall", "ChangeByInput('_' + side + '_LinkUrl_' + part + '_' + num, 'borderColor', '#666')", ["_ + side + _LinkUrl_ + part + _ + num", "borderColor", "#666"], ['_' + side + '_LinkUrl_' + part + '_' + num, 'borderColor', '#666'], "enableEditLink", ChangeByInput('_' + side + '_LinkUrl_' + part + '_' + num, 'borderColor', '#666'));
  confixWrapper("functionCall", "ChangeByInput('_' + side + '_LinkTtl_' + part + '_' + num, 'backgroundColor', '#ECEAE0')", ["_ + side + _LinkTtl_ + part + _ + num", "backgroundColor", "#ECEAE0"], ['_' + side + '_LinkTtl_' + part + '_' + num, 'backgroundColor', '#ECEAE0'], "enableEditLink", ChangeByInput('_' + side + '_LinkTtl_' + part + '_' + num, 'backgroundColor', '#ECEAE0'));
  confixWrapper("functionCall", "ChangeByInput('_' + side + '_LinkTtl_' + part + '_' + num, 'borderColor', '#666')", ["_ + side + _LinkTtl_ + part + _ + num", "borderColor", "#666"], ['_' + side + '_LinkTtl_' + part + '_' + num, 'borderColor', '#666'], "enableEditLink", ChangeByInput('_' + side + '_LinkTtl_' + part + '_' + num, 'borderColor', '#666'));
}
function TogglePsychoeds() {
  global_isPathedHide = confixWrapper("infix", "global_isPathedHide = !global_isPathedHide", [""], [], "TogglePsychoeds", !global_isPathedHide);
  var d = confixWrapper("initvar", "var d = (confixWrapper(\"functionCall\", \"dg('ContainerTitleSettings')\", [\"ContainerTitleSettings\"], ['ContainerTitleSettings'], \"TogglePsychoeds\", dg('ContainerTitleSettings')).style.display == 'none')", [""], [], "TogglePsychoeds", (confixWrapper("functionCall", "dg('ContainerTitleSettings')", ["ContainerTitleSettings"], ['ContainerTitleSettings'], "TogglePsychoeds", dg('ContainerTitleSettings')).style.display == 'none'));
  var objs = confixWrapper("initvar", "var objs = new Array()", [""], [], "TogglePsychoeds", new Array());
  objs = confixWrapper("infix", "objs = confixWrapper(\"functionCall\", \"document.getElementsByTagName('div')\", [\"div\"], ['div'], \"TogglePsychoeds\", document.getElementsByTagName('div'))", [""], [], "TogglePsychoeds", confixWrapper("functionCall", "document.getElementsByTagName('div')", ["div"], ['div'], "TogglePsychoeds", document.getElementsByTagName('div')));
  for (i = confixWrapper("infix", "i = 0", [""], [], "TogglePsychoeds", 0); confixWrapper("loopCondition", "i < objs.length", [""], [], "TogglePsychoeds", i < objs.length); i++) 
    if (confixWrapper("condition", "objs[i].className == 'psychoedContainer' && objs[i].id != 'ContainerBasicSettings' && objs[i].id != 'helpBoxContainer'", ["d", "objs", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [d, objs, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "TogglePsychoeds", objs[i].className == 'psychoedContainer' && objs[i].id != 'ContainerBasicSettings' && objs[i].id != 'helpBoxContainer')) 
    confixWrapper("functionCall", "ToggleDisplay(objs[i])", ["objs[i]"], [objs[i]], "TogglePsychoeds", ToggleDisplay(objs[i]));
}
function ToggleEnhanceds() {
  global_isMinimized = confixWrapper("infix", "global_isMinimized = !global_isMinimized", [""], [], "ToggleEnhanceds", !global_isMinimized);
  var objs = confixWrapper("initvar", "var objs = new Array()", [""], [], "ToggleEnhanceds", new Array());
  objs = confixWrapper("infix", "objs = confixWrapper(\"functionCall\", \"document.getElementsByTagName('div')\", [\"div\"], ['div'], \"ToggleEnhanceds\", document.getElementsByTagName('div'))", [""], [], "ToggleEnhanceds", confixWrapper("functionCall", "document.getElementsByTagName('div')", ["div"], ['div'], "ToggleEnhanceds", document.getElementsByTagName('div')));
  for (i = confixWrapper("infix", "i = 0", [""], [], "ToggleEnhanceds", 0); confixWrapper("loopCondition", "i < objs.length", [""], [], "ToggleEnhanceds", i < objs.length); i++) 
    if (confixWrapper("condition", "objs[i].className == 'Enhanced'", ["objs", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [objs, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ToggleEnhanceds", objs[i].className == 'Enhanced')) 
    confixWrapper("functionCall", "ToggleObjectDisplay(objs[i].style)", ["objs[i].style"], [objs[i].style], "ToggleEnhanceds", ToggleObjectDisplay(objs[i].style));
  objs = confixWrapper("infix", "objs = confixWrapper(\"functionCall\", \"document.getElementsByTagName('tr')\", [\"tr\"], ['tr'], \"ToggleEnhanceds\", document.getElementsByTagName('tr'))", [""], [], "ToggleEnhanceds", confixWrapper("functionCall", "document.getElementsByTagName('tr')", ["tr"], ['tr'], "ToggleEnhanceds", document.getElementsByTagName('tr')));
  for (i = confixWrapper("infix", "i = 0", [""], [], "ToggleEnhanceds", 0); confixWrapper("loopCondition", "i < objs.length", [""], [], "ToggleEnhanceds", i < objs.length); i++) 
    if (confixWrapper("condition", "objs[i].className == 'Enhanced'", ["objs", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [objs, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ToggleEnhanceds", objs[i].className == 'Enhanced')) 
    confixWrapper("functionCall", "ToggleObjectDisplay(objs[i].style, (isIE() ? 'inline' : 'table-row'))", ["objs[i].style", "(isIE() ? inline : table-row)"], [objs[i].style, (confixWrapper("functionCall", "isIE()", [], [], "ToggleEnhanceds", isIE()) ? 'inline' : 'table-row')], "ToggleEnhanceds", ToggleObjectDisplay(objs[i].style, (confixWrapper("functionCall", "isIE()", [], [], "ToggleEnhanceds", isIE()) ? 'inline' : 'table-row')));
}
function PushImgBut(wut, how) {
  if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"dg(wut)\", [\"wut\"], [wut], \"PushImgBut\", dg(wut))", ["wut", "how", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [wut, how, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "PushImgBut", !confixWrapper("functionCall", "dg(wut)", ["wut"], [wut], "PushImgBut", dg(wut)))) 
  return;
  confixWrapper("functionCall", "ChangeByInput(wut, 'borderColor', how ? 'navy' : '#EEE')", ["wut", "borderColor", "how ? navy : #EEE"], [wut, 'borderColor', how ? 'navy' : '#EEE'], "PushImgBut", ChangeByInput(wut, 'borderColor', how ? 'navy' : '#EEE'));
  confixWrapper("functionCall", "ChangeByInput(wut, 'backgroundColor', how ? '#E6ECF3' : 'transparent')", ["wut", "backgroundColor", "how ? #E6ECF3 : transparent"], [wut, 'backgroundColor', how ? '#E6ECF3' : 'transparent'], "PushImgBut", ChangeByInput(wut, 'backgroundColor', how ? '#E6ECF3' : 'transparent'));
}
function persianify(s) {
  for (var i = confixWrapper("initvar", "var i = 0", [""], [], "persianify", 0); confixWrapper("loopCondition", "i < s.length", [""], [], "persianify", i < s.length); i++) 
    {
      if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"s.charAt(i)\", [\"i\"], [i], \"persianify\", s.charAt(i)) == translateIt('Ye arabi')", ["s", "i", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, i, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "persianify", confixWrapper("functionCall", "s.charAt(i)", ["i"], [i], "persianify", s.charAt(i)) == translateIt('Ye arabi'))) 
      s = confixWrapper("infix", "s = confixWrapper(\"functionCall\", \"s.substring(0, i)\", [\"0\", \"i\"], [0, i], \"persianify\", s.substring(0, i)) + translateIt('Ye farsi') + s.substring(i + 1, s.length)", [""], [], "persianify", confixWrapper("functionCall", "s.substring(0, i)", ["0", "i"], [0, i], "persianify", s.substring(0, i)) + translateIt('Ye farsi') + s.substring(i + 1, s.length)); else if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"s.charAt(i)\", [\"i\"], [i], \"persianify\", s.charAt(i)) == translateIt('Ke arabi')", ["s", "i", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, i, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "persianify", confixWrapper("functionCall", "s.charAt(i)", ["i"], [i], "persianify", s.charAt(i)) == translateIt('Ke arabi'))) 
      s = confixWrapper("infix", "s = confixWrapper(\"functionCall\", \"s.substring(0, i)\", [\"0\", \"i\"], [0, i], \"persianify\", s.substring(0, i)) + translateIt('Ke farsi') + s.substring(i + 1, s.length)", [""], [], "persianify", confixWrapper("functionCall", "s.substring(0, i)", ["0", "i"], [0, i], "persianify", s.substring(0, i)) + translateIt('Ke farsi') + s.substring(i + 1, s.length)); else if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"s.charAt(i)\", [\"i\"], [i], \"persianify\", s.charAt(i)) == translateIt('non joiner')", ["s", "i", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, i, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "persianify", confixWrapper("functionCall", "s.charAt(i)", ["i"], [i], "persianify", s.charAt(i)) == translateIt('non joiner'))) 
      s = confixWrapper("infix", "s = confixWrapper(\"functionCall\", \"s.substring(0, i)\", [\"0\", \"i\"], [0, i], \"persianify\", s.substring(0, i)) + (' ') + s.substring(i + 1, s.length)", [""], [], "persianify", confixWrapper("functionCall", "s.substring(0, i)", ["0", "i"], [0, i], "persianify", s.substring(0, i)) + (' ') + s.substring(i + 1, s.length));
    }
  return confixWrapper("return", "return s;", [""], [], "persianify", s);
}
function name2rgb(s) {
  s = confixWrapper("infix", "s = confixWrapper(\"functionCall\", \"s.toLowerCase()\", [], [], \"name2rgb\", s.toLowerCase())", [""], [], "name2rgb", confixWrapper("functionCall", "s.toLowerCase()", [], [], "name2rgb", s.toLowerCase()));
  s = confixWrapper("infix", "s = confixWrapper(\"functionCall\", \"persianify(s)\", [\"s\"], [s], \"name2rgb\", persianify(s))", [""], [], "name2rgb", confixWrapper("functionCall", "persianify(s)", ["s"], [s], "name2rgb", persianify(s)));
  for (var i = confixWrapper("initvar", "var i = 0", [""], [], "name2rgb", 0); confixWrapper("loopCondition", "i < name2rgbArr.length", [""], [], "name2rgb", i < name2rgbArr.length); i += 2) 
    if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"name2rgbArr[i].toLowerCase()\", [], [], \"name2rgb\", name2rgbArr[i].toLowerCase()) == s", ["s", "i", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, i, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "name2rgb", confixWrapper("functionCall", "name2rgbArr[i].toLowerCase()", [], [], "name2rgb", name2rgbArr[i].toLowerCase()) == s)) 
    return confixWrapper("return", "return name2rgbArr[i + 1];", [""], [], "name2rgb", name2rgbArr[i + 1]);
  return confixWrapper("return", "return null;", [""], [], "name2rgb", null);
}
function isColor(s) {
  var re = confixWrapper("initvar", "var re = /^([da-f]{3}|[da-f]{6})$/i", [""], [], "isColor", /^([\da-f]{3}|[\da-f]{6})$/i);
  return confixWrapper("return", "return (confixWrapper(\"functionCall\", \"re.test(s)\", [\"s\"], [s], \"isColor\", re.test(s)));", [""], [], "isColor", (confixWrapper("functionCall", "re.test(s)", ["s"], [s], "isColor", re.test(s))));
}
function getFatherForECP(prop, obj) {
  if (confixWrapper("condition", "obj == 'body'", ["prop", "obj", "s", "t", "ret", "n2r", "value", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [prop, obj, s, t, ret, n2r, value, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "getFatherForECP", obj == 'body')) 
  return confixWrapper("return", "return '';", [""], [], "getFatherForECP", '');
  var s = confixWrapper("initvar", "var s = prop + ' of ' + obj", [""], [], "getFatherForECP", prop + ' of ' + obj);
  var t = confixWrapper("initvar", "var t = ''", [""], [], "getFatherForECP", '');
  switch (s) {
    case 'backgroundColor of HeaderPart':
    case 'backgroundColor of MainColumnInner':
    case 'backgroundColor of SideRColumnInner':
      t = confixWrapper("infix", "t = 'WholeBackColorEr'", [""], [], "getFatherForECP", 'WholeBackColorEr');
      break;
    case 'borderColor of HeaderPart':
    case 'color of TitleText':
    case 'color of SubTitleText':
      t = confixWrapper("infix", "t = 'HeaderBackColorEr'", [""], [], "getFatherForECP", 'HeaderBackColorEr');
      break;
    case 'borderColor of MainColumnInner':
    case 'backgroundColor of OnePostTopPart':
    case 'backgroundColor of OnePostMainDiv':
    case 'backgroundColor of OnePostBotPart':
    case 'borderColor of OnePostMainDiv':
    case 'borderColor of PostSepDivInner':
      t = confixWrapper("infix", "t = 'MainColumnsBackColorEr'", [""], [], "getFatherForECP", 'MainColumnsBackColorEr');
      break;
    case 'borderColor of SideRColumnInner':
      t = confixWrapper("infix", "t = 'SideColumnsBackColorEr'", [""], [], "getFatherForECP", 'SideColumnsBackColorEr');
      break;
    case 'borderColor of OnePostTopPart':
    case 'color of OnePostMidPart':
      t = confixWrapper("infix", "t = 'PostBodyBackColorEr'", [""], [], "getFatherForECP", 'PostBodyBackColorEr');
      break;
    case 'color of OnePostTitle':
    case 'color of OnePostDateTop':
      t = confixWrapper("infix", "t = 'OnePostTopBackColorEr'", [""], [], "getFatherForECP", 'OnePostTopBackColorEr');
      break;
    case 'color of OnePostComments':
    case 'color of OnePostPermLink':
      t = confixWrapper("infix", "t = 'OnePostBotBackColorEr'", [""], [], "getFatherForECP", 'OnePostBotBackColorEr');
      break;
    case 'backgroundColor of R_DefaultDiv_0':
    case 'borderColor of R_DefaultDiv_0':
    case 'borderBottomColor of R_PartSepSemiDiv_1':
    case 'backgroundColor of L_DefaultDiv_0':
    case 'borderColor of L_DefaultDiv_0':
    case 'borderBottomColor of L_PartSepSemiDiv_1':
      t = confixWrapper("infix", "t = 'SideColumnsBackColorEr'", [""], [], "getFatherForECP", 'SideColumnsBackColorEr');
      break;
    case 'color of R_Title_0':
    case 'color of R_DefaultDiv_0':
      t = confixWrapper("infix", "t = '_R_DefaultDivBackColorEr'", [""], [], "getFatherForECP", '_R_DefaultDivBackColorEr');
      break;
    case 'color of RSideColorCSS_Link':
      t = confixWrapper("infix", "t = '_R_DefaultDivColorEr'", [""], [], "getFatherForECP", '_R_DefaultDivColorEr');
      break;
    case 'borderColor of R_Title_0':
      t = confixWrapper("infix", "t = '_R_TitleColorEr'", [""], [], "getFatherForECP", '_R_TitleColorEr');
      break;
    case 'color of RSideColorCSS_Hover':
      t = confixWrapper("infix", "t = '_R_LinkColorEr'", [""], [], "getFatherForECP", '_R_LinkColorEr');
      break;
    case 'color of L_Title_0':
    case 'color of L_DefaultDiv_0':
      t = confixWrapper("infix", "t = '_L_DefaultDivBackColorEr'", [""], [], "getFatherForECP", '_L_DefaultDivBackColorEr');
      break;
    case 'color of LSideColorCSS_Link':
      t = confixWrapper("infix", "t = '_L_DefaultDivColorEr'", [""], [], "getFatherForECP", '_L_DefaultDivColorEr');
      break;
    case 'borderColor of L_Title_0':
      t = confixWrapper("infix", "t = '_L_TitleColorEr'", [""], [], "getFatherForECP", '_L_TitleColorEr');
      break;
    case 'color of LSideColorCSS_Hover':
      t = confixWrapper("infix", "t = '_L_LinkColorEr'", [""], [], "getFatherForECP", '_L_LinkColorEr');
      break;
  }
  var ret = confixWrapper("initvar", "var ret = ''", [""], [], "getFatherForECP", '');
  if (confixWrapper("condition", "t", ["prop", "obj", "s", "t", "ret", "n2r", "value", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [prop, obj, s, t, ret, n2r, value, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "getFatherForECP", t)) 
  {
    var n2r;
    if (confixWrapper("condition", "n2r = confixWrapper(\"functionCall\", \"name2rgb(t)\", [\"t\"], [t], \"getFatherForECP\", name2rgb(t))", ["prop", "obj", "s", "t", "ret", "n2r", "value", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [prop, obj, s, t, ret, n2r, value, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "getFatherForECP", n2r = confixWrapper("infix", "n2r = confixWrapper(\"functionCall\", \"name2rgb(t)\", [\"t\"], [t], \"getFatherForECP\", name2rgb(t))", [""], [], "getFatherForECP", confixWrapper("functionCall", "name2rgb(t)", ["t"], [t], "getFatherForECP", name2rgb(t))))) 
    ret = confixWrapper("infix", "ret = n2r", [""], [], "getFatherForECP", n2r); else {
      var value = confixWrapper("initvar", "var value = confixWrapper(\"functionCall\", \"dg(t)\", [\"t\"], [t], \"getFatherForECP\", dg(t)).value", [""], [], "getFatherForECP", confixWrapper("functionCall", "dg(t)", ["t"], [t], "getFatherForECP", dg(t)).value);
      ret = confixWrapper("infix", "ret = confixWrapper(\"functionCall\", \"TripleColNameToSix(value)\", [\"value\"], [value], \"getFatherForECP\", TripleColNameToSix(value))", [""], [], "getFatherForECP", confixWrapper("functionCall", "TripleColNameToSix(value)", ["value"], [value], "getFatherForECP", TripleColNameToSix(value)));
    }
  }
  if (confixWrapper("condition", "ret == 'transparent'", ["prop", "obj", "s", "t", "ret", "n2r", "value", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [prop, obj, s, t, ret, n2r, value, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "getFatherForECP", ret == 'transparent')) 
  {
    ret = confixWrapper("infix", "ret = confixWrapper(\"functionCall\", \"getFatherForECP('backgroundColor', 'body')\", [\"backgroundColor\", \"body\"], ['backgroundColor', 'body'], \"getFatherForECP\", getFatherForECP('backgroundColor', 'body'))", [""], [], "getFatherForECP", confixWrapper("functionCall", "getFatherForECP('backgroundColor', 'body')", ["backgroundColor", "body"], ['backgroundColor', 'body'], "getFatherForECP", getFatherForECP('backgroundColor', 'body')));
  }
  return confixWrapper("return", "return ret;", [""], [], "getFatherForECP", ret);
}
function TripleColNameToSix(sname) {
  var ret = confixWrapper("initvar", "var ret = sname", [""], [], "TripleColNameToSix", sname);
  if (confixWrapper("condition", "sname.length == 4 && confixWrapper(\"functionCall\", \"sname.charAt(0)\", [\"0\"], [0], \"TripleColNameToSix\", sname.charAt(0)) == '#'", ["sname", "ret", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [sname, ret, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "TripleColNameToSix", sname.length == 4 && confixWrapper("functionCall", "sname.charAt(0)", ["0"], [0], "TripleColNameToSix", sname.charAt(0)) == '#')) 
  sname = confixWrapper("infix", "sname = confixWrapper(\"functionCall\", \"sname.substring(1, sname.length)\", [\"1\", \"sname.length\"], [1, sname.length], \"TripleColNameToSix\", sname.substring(1, sname.length))", [""], [], "TripleColNameToSix", confixWrapper("functionCall", "sname.substring(1, sname.length)", ["1", "sname.length"], [1, sname.length], "TripleColNameToSix", sname.substring(1, sname.length)));
  if (confixWrapper("condition", "sname.length == 3 && confixWrapper(\"functionCall\", \"isColor(sname)\", [\"sname\"], [sname], \"TripleColNameToSix\", isColor(sname))", ["sname", "ret", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [sname, ret, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "TripleColNameToSix", sname.length == 3 && confixWrapper("functionCall", "isColor(sname)", ["sname"], [sname], "TripleColNameToSix", isColor(sname)))) 
  ret = confixWrapper("infix", "ret = '#' + confixWrapper(\"functionCall\", \"sname.charAt(0)\", [\"0\"], [0], \"TripleColNameToSix\", sname.charAt(0)) + sname.charAt(0) + sname.charAt(1) + sname.charAt(1) + sname.charAt(2) + sname.charAt(2)", [""], [], "TripleColNameToSix", '#' + confixWrapper("functionCall", "sname.charAt(0)", ["0"], [0], "TripleColNameToSix", sname.charAt(0)) + sname.charAt(0) + sname.charAt(1) + sname.charAt(1) + sname.charAt(2) + sname.charAt(2));
  return confixWrapper("return", "return ret;", [""], [], "TripleColNameToSix", ret);
}
function IPickColor(s, colorProp, colorObj) {
  var sname;
  if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"s.substring(0, 1)\", [\"0\", \"1\"], [0, 1], \"IPickColor\", s.substring(0, 1)) == '#'", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", confixWrapper("functionCall", "s.substring(0, 1)", ["0", "1"], [0, 1], "IPickColor", s.substring(0, 1)) == '#')) 
  s = confixWrapper("infix", "s = confixWrapper(\"functionCall\", \"s.substring(1, s.length)\", [\"1\", \"s.length\"], [1, s.length], \"IPickColor\", s.substring(1, s.length))", [""], [], "IPickColor", confixWrapper("functionCall", "s.substring(1, s.length)", ["1", "s.length"], [1, s.length], "IPickColor", s.substring(1, s.length)));
  if (confixWrapper("condition", "!colorProp", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", !colorProp)) 
  colorProp = confixWrapper("infix", "colorProp = confixWrapper(\"functionCall\", \"dg('CPwutProp')\", [\"CPwutProp\"], ['CPwutProp'], \"IPickColor\", dg('CPwutProp')).innerHTML", ["confixWrapper(\"functionCall\", \"dg('CPwutProp')\", [\"CPwutProp\"], ['CPwutProp'], \"IPickColor\", dg('CPwutProp'))"], [confixWrapper("functionCall", "dg('CPwutProp')", ["CPwutProp"], ['CPwutProp'], "IPickColor", dg('CPwutProp'))], "IPickColor", confixWrapper("functionCall", "dg('CPwutProp')", ["CPwutProp"], ['CPwutProp'], "IPickColor", dg('CPwutProp')).innerHTML);
  if (confixWrapper("condition", "!colorObj", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", !colorObj)) 
  colorObj = confixWrapper("infix", "colorObj = confixWrapper(\"functionCall\", \"dg('CPwutObj')\", [\"CPwutObj\"], ['CPwutObj'], \"IPickColor\", dg('CPwutObj')).innerHTML", ["confixWrapper(\"functionCall\", \"dg('CPwutObj')\", [\"CPwutObj\"], ['CPwutObj'], \"IPickColor\", dg('CPwutObj'))"], [confixWrapper("functionCall", "dg('CPwutObj')", ["CPwutObj"], ['CPwutObj'], "IPickColor", dg('CPwutObj'))], "IPickColor", confixWrapper("functionCall", "dg('CPwutObj')", ["CPwutObj"], ['CPwutObj'], "IPickColor", dg('CPwutObj')).innerHTML);
  s = confixWrapper("infix", "s = confixWrapper(\"functionCall\", \"s.toLowerCase()\", [], [], \"IPickColor\", s.toLowerCase())", [""], [], "IPickColor", confixWrapper("functionCall", "s.toLowerCase()", [], [], "IPickColor", s.toLowerCase()));
  var n2r = confixWrapper("initvar", "var n2r = null", [""], [], "IPickColor", null);
  if (confixWrapper("condition", "!s.length", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", !s.length)) 
  {
    sname = confixWrapper("infix", "sname = 'transparent'", [""], [], "IPickColor", 'transparent');
  } else if (confixWrapper("condition", "n2r = confixWrapper(\"functionCall\", \"name2rgb(s)\", [\"s\"], [s], \"IPickColor\", name2rgb(s))", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", n2r = confixWrapper("infix", "n2r = confixWrapper(\"functionCall\", \"name2rgb(s)\", [\"s\"], [s], \"IPickColor\", name2rgb(s))", [""], [], "IPickColor", confixWrapper("functionCall", "name2rgb(s)", ["s"], [s], "IPickColor", name2rgb(s))))) 
  sname = confixWrapper("infix", "sname = n2r", [""], [], "IPickColor", n2r); else {
    if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"isColor(s)\", [\"s\"], [s], \"IPickColor\", isColor(s))", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", confixWrapper("functionCall", "isColor(s)", ["s"], [s], "IPickColor", isColor(s)))) 
    {
      s = confixWrapper("infix", "s = confixWrapper(\"functionCall\", \"s.toUpperCase()\", [], [], \"IPickColor\", s.toUpperCase())", [""], [], "IPickColor", confixWrapper("functionCall", "s.toUpperCase()", [], [], "IPickColor", s.toUpperCase()));
      sname = confixWrapper("infix", "sname = '#' + s", [""], [], "IPickColor", '#' + s);
    } else return;
  }
  if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"colorObj.substring(1, colorObj.length)\", [\"1\", \"colorObj.length\"], [1, colorObj.length], \"IPickColor\", colorObj.substring(1, colorObj.length)) == '_DefaultDiv_0'", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", confixWrapper("functionCall", "colorObj.substring(1, colorObj.length)", ["1", "colorObj.length"], [1, colorObj.length], "IPickColor", colorObj.substring(1, colorObj.length)) == '_DefaultDiv_0')) 
  for (var i = confixWrapper("initvar", "var i = 1", [""], [], "IPickColor", 1); confixWrapper("loopCondition", "i < maxBoxNumOnSides", [""], [], "IPickColor", i < maxBoxNumOnSides); i++) 
    confixWrapper("functionCall", "ChangeByInput(colorObj.substring(0, colorObj.length - 1) + i, colorProp, sname)", ["colorObj.substring(0, colorObj.length - 1) + i", "colorProp", "sname"], [confixWrapper("functionCall", "colorObj.substring(0, colorObj.length - 1)", ["0", "colorObj.length - 1"], [0, colorObj.length - 1], "IPickColor", colorObj.substring(0, colorObj.length - 1)) + i, colorProp, sname], "IPickColor", ChangeByInput(confixWrapper("functionCall", "colorObj.substring(0, colorObj.length - 1)", ["0", "colorObj.length - 1"], [0, colorObj.length - 1], "IPickColor", colorObj.substring(0, colorObj.length - 1)) + i, colorProp, sname));
  if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"colorObj.substring(1, colorObj.length)\", [\"1\", \"colorObj.length\"], [1, colorObj.length], \"IPickColor\", colorObj.substring(1, colorObj.length)) == '_Title_0'", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", confixWrapper("functionCall", "colorObj.substring(1, colorObj.length)", ["1", "colorObj.length"], [1, colorObj.length], "IPickColor", colorObj.substring(1, colorObj.length)) == '_Title_0')) 
  for (var i = confixWrapper("initvar", "var i = 1", [""], [], "IPickColor", 1); confixWrapper("loopCondition", "i < maxBoxNumOnSides", [""], [], "IPickColor", i < maxBoxNumOnSides); i++) 
    confixWrapper("functionCall", "ChangeByInput(colorObj.substring(0, colorObj.length - 1) + i, colorProp, sname)", ["colorObj.substring(0, colorObj.length - 1) + i", "colorProp", "sname"], [confixWrapper("functionCall", "colorObj.substring(0, colorObj.length - 1)", ["0", "colorObj.length - 1"], [0, colorObj.length - 1], "IPickColor", colorObj.substring(0, colorObj.length - 1)) + i, colorProp, sname], "IPickColor", ChangeByInput(confixWrapper("functionCall", "colorObj.substring(0, colorObj.length - 1)", ["0", "colorObj.length - 1"], [0, colorObj.length - 1], "IPickColor", colorObj.substring(0, colorObj.length - 1)) + i, colorProp, sname));
  if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"colorObj.substring(1, colorObj.length)\", [\"1\", \"colorObj.length\"], [1, colorObj.length], \"IPickColor\", colorObj.substring(1, colorObj.length)) == '_PartSepSemiDiv_1'", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", confixWrapper("functionCall", "colorObj.substring(1, colorObj.length)", ["1", "colorObj.length"], [1, colorObj.length], "IPickColor", colorObj.substring(1, colorObj.length)) == '_PartSepSemiDiv_1')) 
  for (var i = confixWrapper("initvar", "var i = 2", [""], [], "IPickColor", 2); confixWrapper("loopCondition", "i < maxBoxNumOnSides", [""], [], "IPickColor", i < maxBoxNumOnSides); i++) 
    confixWrapper("functionCall", "ChangeByInput(colorObj.substring(0, colorObj.length - 1) + i, colorProp, sname)", ["colorObj.substring(0, colorObj.length - 1) + i", "colorProp", "sname"], [confixWrapper("functionCall", "colorObj.substring(0, colorObj.length - 1)", ["0", "colorObj.length - 1"], [0, colorObj.length - 1], "IPickColor", colorObj.substring(0, colorObj.length - 1)) + i, colorProp, sname], "IPickColor", ChangeByInput(confixWrapper("functionCall", "colorObj.substring(0, colorObj.length - 1)", ["0", "colorObj.length - 1"], [0, colorObj.length - 1], "IPickColor", colorObj.substring(0, colorObj.length - 1)) + i, colorProp, sname));
  if (confixWrapper("condition", "colorObj == 'RSideColorCSS_Hover' || colorObj == 'RSideColorCSS_Link'", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", colorObj == 'RSideColorCSS_Hover' || colorObj == 'RSideColorCSS_Link')) 
  confixWrapper("functionCall", "TheColorCSS(sname, 6 + (colorObj == 'RSideColorCSS_Hover'))", ["sname", "6 + (colorObj == RSideColorCSS_Hover)"], [sname, 6 + (colorObj == 'RSideColorCSS_Hover')], "IPickColor", TheColorCSS(sname, 6 + (colorObj == 'RSideColorCSS_Hover')));
  if (confixWrapper("condition", "colorObj == 'LSideColorCSS_Hover' || colorObj == 'LSideColorCSS_Link'", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", colorObj == 'LSideColorCSS_Hover' || colorObj == 'LSideColorCSS_Link')) 
  confixWrapper("functionCall", "TheColorCSS(sname, 11 + (colorObj == 'LSideColorCSS_Hover'))", ["sname", "11 + (colorObj == LSideColorCSS_Hover)"], [sname, 11 + (colorObj == 'LSideColorCSS_Hover')], "IPickColor", TheColorCSS(sname, 11 + (colorObj == 'LSideColorCSS_Hover')));
  if (confixWrapper("condition", "colorObj == 'WholeColorCSS_Link'", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", colorObj == 'WholeColorCSS_Link')) 
  confixWrapper("functionCall", "TheColorCSS(sname, 8)", ["sname", "8"], [sname, 8], "IPickColor", TheColorCSS(sname, 8));
  if (confixWrapper("condition", "colorObj == 'WholeColorCSS_Hover'", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", colorObj == 'WholeColorCSS_Hover')) 
  confixWrapper("functionCall", "TheColorCSS(sname, 10)", ["sname", "10"], [sname, 10], "IPickColor", TheColorCSS(sname, 10));
  if (confixWrapper("condition", "colorObj == 'WholeColorCSS_Visit'", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", colorObj == 'WholeColorCSS_Visit')) 
  confixWrapper("functionCall", "TheColorCSS(sname, 9, sname == 'transparent')", ["sname", "9", "sname == transparent"], [sname, 9, sname == 'transparent'], "IPickColor", TheColorCSS(sname, 9, sname == 'transparent'));
  if (confixWrapper("condition", "colorObj == 'SideRColumnInner'", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", colorObj == 'SideRColumnInner')) 
  confixWrapper("functionCall", "ChangeByInput('SideLColumnInner', colorProp, sname)", ["SideLColumnInner", "colorProp", "sname"], ['SideLColumnInner', colorProp, sname], "IPickColor", ChangeByInput('SideLColumnInner', colorProp, sname));
  confixWrapper("functionCall", "ChangeByInput(colorObj, colorProp, sname)", ["colorObj", "colorProp", "sname"], [colorObj, colorProp, sname], "IPickColor", ChangeByInput(colorObj, colorProp, sname));
  var ecpsname = confixWrapper("initvar", "var ecpsname = sname", [""], [], "IPickColor", sname);
  if (confixWrapper("condition", "ecpsname == 'transparent'", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", ecpsname == 'transparent')) 
  ecpsname = confixWrapper("infix", "ecpsname = '#FFFFFF'", [""], [], "IPickColor", '#FFFFFF');
  if (confixWrapper("condition", "ecpsname.length < 7", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", ecpsname.length < 7)) 
  ecpsname = confixWrapper("infix", "ecpsname = confixWrapper(\"functionCall\", \"TripleColNameToSix(sname)\", [\"sname\"], [sname], \"IPickColor\", TripleColNameToSix(sname))", [""], [], "IPickColor", confixWrapper("functionCall", "TripleColNameToSix(sname)", ["sname"], [sname], "IPickColor", TripleColNameToSix(sname)));
  if (confixWrapper("condition", "colorObj == 'body' && colorProp == 'backgroundColor'", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", colorObj == 'body' && colorProp == 'backgroundColor')) 
  confixWrapper("functionCall", "ChangeByInput('body', 'color', ComplementTheColor(sname))", ["body", "color", "ComplementTheColor(sname)"], ['body', 'color', confixWrapper("functionCall", "ComplementTheColor(sname)", ["sname"], [sname], "IPickColor", ComplementTheColor(sname))], "IPickColor", ChangeByInput('body', 'color', confixWrapper("functionCall", "ComplementTheColor(sname)", ["sname"], [sname], "IPickColor", ComplementTheColor(sname))));
  if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"dg('ECP_myRGBS')\", [\"ECP_myRGBS\"], ['ECP_myRGBS'], \"IPickColor\", dg('ECP_myRGBS')).value != ecpsname", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", confixWrapper("functionCall", "dg('ECP_myRGBS')", ["ECP_myRGBS"], ['ECP_myRGBS'], "IPickColor", dg('ECP_myRGBS')).value != ecpsname)) 
  {
    confixWrapper("functionCall", "dg('ECP_myRGBS')", ["ECP_myRGBS"], ['ECP_myRGBS'], "IPickColor", dg('ECP_myRGBS')).value = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('ECP_myRGBS')\", [\"ECP_myRGBS\"], ['ECP_myRGBS'], \"IPickColor\", dg('ECP_myRGBS')).value = ecpsname", [""], [], "IPickColor", ecpsname);
    if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"dg('ColorPicker')\", [\"ColorPicker\"], ['ColorPicker'], \"IPickColor\", dg('ColorPicker')).style.display == 'block'", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", confixWrapper("functionCall", "dg('ColorPicker')", ["ColorPicker"], ['ColorPicker'], "IPickColor", dg('ColorPicker')).style.display == 'block')) 
    confixWrapper("functionCall", "resetByRGBS(ecpsname)", ["ecpsname"], [ecpsname], "IPickColor", resetByRGBS(ecpsname));
  }
  if (confixWrapper("condition", "sname == n2r", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", sname == n2r)) 
  sname = confixWrapper("infix", "sname = s", [""], [], "IPickColor", s);
  if (confixWrapper("condition", "global_colorRef", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", global_colorRef)) 
  if (confixWrapper("condition", "global_colorRef.value != sname && s != ''", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", global_colorRef.value != sname && s != '')) 
  global_colorRef.value = confixWrapper("infix", "global_colorRef.value = sname", [""], [], "IPickColor", sname);
  if (confixWrapper("condition", "colorObj != confixWrapper(\"functionCall\", \"dg('CPwutObj')\", [\"CPwutObj\"], ['CPwutObj'], \"IPickColor\", dg('CPwutObj')).innerHTML || colorProp != confixWrapper(\"functionCall\", \"dg('CPwutProp')\", [\"CPwutProp\"], ['CPwutProp'], \"IPickColor\", dg('CPwutProp')).innerHTML", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", colorObj != confixWrapper("functionCall", "dg('CPwutObj')", ["CPwutObj"], ['CPwutObj'], "IPickColor", dg('CPwutObj')).innerHTML || colorProp != confixWrapper("functionCall", "dg('CPwutProp')", ["CPwutProp"], ['CPwutProp'], "IPickColor", dg('CPwutProp')).innerHTML)) 
  return;
  if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"dg('AColor_S_' + s)\", [\"AColor_S_ + s\"], ['AColor_S_' + s], \"IPickColor\", dg('AColor_S_' + s))", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", confixWrapper("functionCall", "dg('AColor_S_' + s)", ["AColor_S_ + s"], ['AColor_S_' + s], "IPickColor", dg('AColor_S_' + s)))) 
  confixWrapper("functionCall", "dg('AColor_S_' + s)", ["AColor_S_ + s"], ['AColor_S_' + s], "IPickColor", dg('AColor_S_' + s)).style.borderWidth = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('AColor_S_' + s)\", [\"AColor_S_ + s\"], ['AColor_S_' + s], \"IPickColor\", dg('AColor_S_' + s)).style.borderWidth = '1px'", [""], [], "IPickColor", '1px');
  if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"dg('AColor_H_' + s)\", [\"AColor_H_ + s\"], ['AColor_H_' + s], \"IPickColor\", dg('AColor_H_' + s))", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", confixWrapper("functionCall", "dg('AColor_H_' + s)", ["AColor_H_ + s"], ['AColor_H_' + s], "IPickColor", dg('AColor_H_' + s)))) 
  confixWrapper("functionCall", "dg('AColor_H_' + s)", ["AColor_H_ + s"], ['AColor_H_' + s], "IPickColor", dg('AColor_H_' + s)).style.borderWidth = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('AColor_H_' + s)\", [\"AColor_H_ + s\"], ['AColor_H_' + s], \"IPickColor\", dg('AColor_H_' + s)).style.borderWidth = '1px'", [""], [], "IPickColor", '1px');
  if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"dg('AColor_N_' + s)\", [\"AColor_N_ + s\"], ['AColor_N_' + s], \"IPickColor\", dg('AColor_N_' + s))", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", confixWrapper("functionCall", "dg('AColor_N_' + s)", ["AColor_N_ + s"], ['AColor_N_' + s], "IPickColor", dg('AColor_N_' + s)))) 
  confixWrapper("functionCall", "dg('AColor_N_' + s)", ["AColor_N_ + s"], ['AColor_N_' + s], "IPickColor", dg('AColor_N_' + s)).style.borderWidth = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('AColor_N_' + s)\", [\"AColor_N_ + s\"], ['AColor_N_' + s], \"IPickColor\", dg('AColor_N_' + s)).style.borderWidth = '1px'", [""], [], "IPickColor", '1px');
  var c = confixWrapper("initvar", "var c = global_lastColor", [""], [], "IPickColor", global_lastColor);
  if (confixWrapper("condition", "c && confixWrapper(\"functionCall\", \"c.substring(0, 1)\", [\"0\", \"1\"], [0, 1], \"IPickColor\", c.substring(0, 1)) == '#'", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", c && confixWrapper("functionCall", "c.substring(0, 1)", ["0", "1"], [0, 1], "IPickColor", c.substring(0, 1)) == '#')) 
  c = confixWrapper("infix", "c = confixWrapper(\"functionCall\", \"c.substring(1, c.length)\", [\"1\", \"c.length\"], [1, c.length], \"IPickColor\", c.substring(1, c.length))", [""], [], "IPickColor", confixWrapper("functionCall", "c.substring(1, c.length)", ["1", "c.length"], [1, c.length], "IPickColor", c.substring(1, c.length)));
  if (confixWrapper("condition", "c && c != s", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", c && c != s)) 
  {
    if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"dg('AColor_S_' + c)\", [\"AColor_S_ + c\"], ['AColor_S_' + c], \"IPickColor\", dg('AColor_S_' + c))", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", confixWrapper("functionCall", "dg('AColor_S_' + c)", ["AColor_S_ + c"], ['AColor_S_' + c], "IPickColor", dg('AColor_S_' + c)))) 
    confixWrapper("functionCall", "dg('AColor_S_' + c)", ["AColor_S_ + c"], ['AColor_S_' + c], "IPickColor", dg('AColor_S_' + c)).style.borderWidth = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('AColor_S_' + c)\", [\"AColor_S_ + c\"], ['AColor_S_' + c], \"IPickColor\", dg('AColor_S_' + c)).style.borderWidth = '0px'", [""], [], "IPickColor", '0px');
    if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"dg('AColor_H_' + c)\", [\"AColor_H_ + c\"], ['AColor_H_' + c], \"IPickColor\", dg('AColor_H_' + c))", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", confixWrapper("functionCall", "dg('AColor_H_' + c)", ["AColor_H_ + c"], ['AColor_H_' + c], "IPickColor", dg('AColor_H_' + c)))) 
    confixWrapper("functionCall", "dg('AColor_H_' + c)", ["AColor_H_ + c"], ['AColor_H_' + c], "IPickColor", dg('AColor_H_' + c)).style.borderWidth = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('AColor_H_' + c)\", [\"AColor_H_ + c\"], ['AColor_H_' + c], \"IPickColor\", dg('AColor_H_' + c)).style.borderWidth = '0px'", [""], [], "IPickColor", '0px');
    if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"dg('AColor_N_' + c)\", [\"AColor_N_ + c\"], ['AColor_N_' + c], \"IPickColor\", dg('AColor_N_' + c))", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", confixWrapper("functionCall", "dg('AColor_N_' + c)", ["AColor_N_ + c"], ['AColor_N_' + c], "IPickColor", dg('AColor_N_' + c)))) 
    confixWrapper("functionCall", "dg('AColor_N_' + c)", ["AColor_N_ + c"], ['AColor_N_' + c], "IPickColor", dg('AColor_N_' + c)).style.borderWidth = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('AColor_N_' + c)\", [\"AColor_N_ + c\"], ['AColor_N_' + c], \"IPickColor\", dg('AColor_N_' + c)).style.borderWidth = '0px'", [""], [], "IPickColor", '0px');
  }
  if (confixWrapper("condition", "colorObj == 'AddImageImageI'", ["s", "colorProp", "colorObj", "sname", "n2r", "i", "ecpsname", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, colorProp, colorObj, sname, n2r, i, ecpsname, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "IPickColor", colorObj == 'AddImageImageI')) 
  confixWrapper("functionCall", "UpdateAddImageNow()", [], [], "IPickColor", UpdateAddImageNow());
  global_lastColor = confixWrapper("infix", "global_lastColor = sname", [""], [], "IPickColor", sname);
}
function setYetMove(wut) {
  global_yetMove = confixWrapper("infix", "global_yetMove = wut", [""], [], "setYetMove", wut);
}
function MoveUp(obj, y) {
  return;
}
function nowTheTime() {
  now = confixWrapper("infix", "now = new Date()", [""], [], "nowTheTime", new Date());
  theYear = confixWrapper("infix", "theYear = confixWrapper(\"functionCall\", \"now.getYear()\", [], [], \"nowTheTime\", now.getYear()) + 1900 * (confixWrapper(\"functionCall\", \"now.getYear()\", [], [], \"nowTheTime\", now.getYear()) < 1000)", [""], [], "nowTheTime", confixWrapper("functionCall", "now.getYear()", [], [], "nowTheTime", now.getYear()) + 1900 * (confixWrapper("functionCall", "now.getYear()", [], [], "nowTheTime", now.getYear()) < 1000));
  return confixWrapper("return", "return (confixWrapper(\"functionCall\", \"now.getMonth()\", [], [], \"nowTheTime\", now.getMonth()) + 1) + \"/\" + now.getDate() + \"/\" + theYear;", [""], [], "nowTheTime", (confixWrapper("functionCall", "now.getMonth()", [], [], "nowTheTime", now.getMonth()) + 1) + "/" + now.getDate() + "/" + theYear);
}
function writeCurrentTime(wut) {
  var t2 = confixWrapper("initvar", "var t2 = confixWrapper(\"functionCall\", \"nowTheTime()\", [], [], \"writeCurrentTime\", nowTheTime())", [""], [], "writeCurrentTime", confixWrapper("functionCall", "nowTheTime()", [], [], "writeCurrentTime", nowTheTime()));
  if (confixWrapper("condition", "wut", ["wut", "t2", "s", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [wut, t2, s, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "writeCurrentTime", wut)) 
  var s = confixWrapper("initvar", "var s = confixWrapper(\"functionCall\", \"ToHijri(t2)\", [\"t2\"], [t2], \"writeCurrentTime\", ToHijri(t2)) + ' '", [""], [], "writeCurrentTime", confixWrapper("functionCall", "ToHijri(t2)", ["t2"], [t2], "writeCurrentTime", ToHijri(t2)) + ' '); else var s = confixWrapper("initvar", "var s = (t2) + ' '", [""], [], "writeCurrentTime", (t2) + ' ');
  confixWrapper("functionCall", "ChangeByInput('OnePostDateTop', 'innerHTML', s)", ["OnePostDateTop", "innerHTML", "s"], ['OnePostDateTop', 'innerHTML', s], "writeCurrentTime", ChangeByInput('OnePostDateTop', 'innerHTML', s));
}
function isIE() {
  return confixWrapper("return", "return (confixWrapper(\"functionCall\", \"navigator.appName.indexOf('Microsoft')\", [\"Microsoft\"], ['Microsoft'], \"isIE\", navigator.appName.indexOf('Microsoft')) != -1) && !window.opera;", [""], [], "isIE", (confixWrapper("functionCall", "navigator.appName.indexOf('Microsoft')", ["Microsoft"], ['Microsoft'], "isIE", navigator.appName.indexOf('Microsoft')) != -1) && !window.opera);
}
function TheColorCSS(col, num, remove) {
  var SS = confixWrapper("initvar", "var SS = document.styleSheets[0]", [""], [], "TheColorCSS", document.styleSheets[0]);
  if (confixWrapper("condition", "SS.cssRules", ["col", "num", "remove", "SS", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [col, num, remove, SS, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "TheColorCSS", SS.cssRules)) 
  inRule = confixWrapper("infix", "inRule = SS.cssRules", [""], [], "TheColorCSS", SS.cssRules); else if (confixWrapper("condition", "SS.rules", ["col", "num", "remove", "SS", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [col, num, remove, SS, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "TheColorCSS", SS.rules)) 
  inRule = confixWrapper("infix", "inRule = SS.rules", [""], [], "TheColorCSS", SS.rules);
  if (confixWrapper("condition", "remove", ["col", "num", "remove", "SS", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [col, num, remove, SS, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "TheColorCSS", remove)) 
  inRule[num].style.color = confixWrapper("infix", "inRule[num].style.color = ''", [""], [], "TheColorCSS", ''); else inRule[num].style.color = confixWrapper("infix", "inRule[num].style.color = col", [""], [], "TheColorCSS", col);
}
function SwitchSelectIE(t) {
  if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"isIE()\", [], [], \"SwitchSelectIE\", isIE())", ["t", "SS", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [t, SS, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SwitchSelectIE", confixWrapper("functionCall", "isIE()", [], [], "SwitchSelectIE", isIE()))) 
  {
    var SS = confixWrapper("initvar", "var SS = document.styleSheets[0]", [""], [], "SwitchSelectIE", document.styleSheets[0]);
    if (confixWrapper("condition", "SS.cssRules", ["t", "SS", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [t, SS, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SwitchSelectIE", SS.cssRules)) 
    inRule = confixWrapper("infix", "inRule = SS.cssRules", [""], [], "SwitchSelectIE", SS.cssRules); else if (confixWrapper("condition", "SS.rules", ["t", "SS", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [t, SS, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SwitchSelectIE", SS.rules)) 
    inRule = confixWrapper("infix", "inRule = SS.rules", [""], [], "SwitchSelectIE", SS.rules);
    if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"dg('ColorPicker')\", [\"ColorPicker\"], ['ColorPicker'], \"SwitchSelectIE\", dg('ColorPicker')).style.display != 'none' || confixWrapper(\"functionCall\", \"dg('PsycHodramaBox')\", [\"PsycHodramaBox\"], ['PsycHodramaBox'], \"SwitchSelectIE\", dg('PsycHodramaBox')).style.display != 'none' || confixWrapper(\"functionCall\", \"dg('helpBox')\", [\"helpBox\"], ['helpBox'], \"SwitchSelectIE\", dg('helpBox')).style.display != 'none' || confixWrapper(\"functionCall\", \"dg('EditPartBox')\", [\"EditPartBox\"], ['EditPartBox'], \"SwitchSelectIE\", dg('EditPartBox')).style.display != 'none' || confixWrapper(\"functionCall\", \"dg('addImage')\", [\"addImage\"], ['addImage'], \"SwitchSelectIE\", dg('addImage')).style.display != 'none' || confixWrapper(\"functionCall\", \"dg('PsycHokinesisBox')\", [\"PsycHokinesisBox\"], ['PsycHokinesisBox'], \"SwitchSelectIE\", dg('PsycHokinesisBox')).style.display != 'none'", ["t", "SS", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [t, SS, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SwitchSelectIE", confixWrapper("functionCall", "dg('ColorPicker')", ["ColorPicker"], ['ColorPicker'], "SwitchSelectIE", dg('ColorPicker')).style.display != 'none' || confixWrapper("functionCall", "dg('PsycHodramaBox')", ["PsycHodramaBox"], ['PsycHodramaBox'], "SwitchSelectIE", dg('PsycHodramaBox')).style.display != 'none' || confixWrapper("functionCall", "dg('helpBox')", ["helpBox"], ['helpBox'], "SwitchSelectIE", dg('helpBox')).style.display != 'none' || confixWrapper("functionCall", "dg('EditPartBox')", ["EditPartBox"], ['EditPartBox'], "SwitchSelectIE", dg('EditPartBox')).style.display != 'none' || confixWrapper("functionCall", "dg('addImage')", ["addImage"], ['addImage'], "SwitchSelectIE", dg('addImage')).style.display != 'none' || confixWrapper("functionCall", "dg('PsycHokinesisBox')", ["PsycHokinesisBox"], ['PsycHokinesisBox'], "SwitchSelectIE", dg('PsycHokinesisBox')).style.display != 'none')) 
    t = confixWrapper("infix", "t = 0", [""], [], "SwitchSelectIE", 0);
    inRule[4].style.visibility = confixWrapper("infix", "inRule[4].style.visibility = (t) ? 'visible' : 'hidden'", [""], [], "SwitchSelectIE", (t) ? 'visible' : 'hidden');
    t = confixWrapper("infix", "t = confixWrapper(\"functionCall\", \"dg('addImage')\", [\"addImage\"], ['addImage'], \"SwitchSelectIE\", dg('addImage')).style.display != 'none'", [""], [], "SwitchSelectIE", confixWrapper("functionCall", "dg('addImage')", ["addImage"], ['addImage'], "SwitchSelectIE", dg('addImage')).style.display != 'none');
    inRule[5].style.visibility = confixWrapper("infix", "inRule[5].style.visibility = (t) ? 'visible' : 'hidden'", [""], [], "SwitchSelectIE", (t) ? 'visible' : 'hidden');
  }
}
function HideCP() {
  confixWrapper("functionCall", "SetText('CPwutObj', 'NaN')", ["CPwutObj", "NaN"], ['CPwutObj', 'NaN'], "HideCP", SetText('CPwutObj', 'NaN'));
  if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"isDivVisible('ColorPicker')\", [\"ColorPicker\"], ['ColorPicker'], \"HideCP\", isDivVisible('ColorPicker'))", ["PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "HideCP", !confixWrapper("functionCall", "isDivVisible('ColorPicker')", ["ColorPicker"], ['ColorPicker'], "HideCP", isDivVisible('ColorPicker')))) 
  return;
  confixWrapper("functionCall", "SwitchDisplay('ColorPicker', 0)", ["ColorPicker", "0"], ['ColorPicker', 0], "HideCP", SwitchDisplay('ColorPicker', 0));
  confixWrapper("functionCall", "SwitchSelectIE(1)", ["1"], [1], "HideCP", SwitchSelectIE(1));
  if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"isIE()\", [], [], \"HideCP\", isIE())", ["PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "HideCP", !confixWrapper("functionCall", "isIE()", [], [], "HideCP", isIE()))) 
  {
    confixWrapper("functionCall", "window.blur()", [], [], "HideCP", window.blur());
    confixWrapper("functionCall", "window.focus()", [], [], "HideCP", window.focus());
  }
}
function getMyXY(eve, t) {
  var myY, myX;
  if (confixWrapper("condition", "!eve", ["eve", "t", "myY", "myX", "dY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [eve, t, myY, myX, dY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "getMyXY", !eve)) 
  var eve = confixWrapper("initvar", "var eve = window.event", [""], [], "getMyXY", window.event);
  if (confixWrapper("condition", "document.all", ["eve", "t", "myY", "myX", "dY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [eve, t, myY, myX, dY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "getMyXY", document.all)) 
  {
    myX = confixWrapper("infix", "myX = eve.clientX", [""], [], "getMyXY", eve.clientX);
    var dY = confixWrapper("initvar", "var dY = 0", [""], [], "getMyXY", 0);
    if (confixWrapper("condition", "document.body.scrollTop", ["eve", "t", "myY", "myX", "dY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [eve, t, myY, myX, dY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "getMyXY", document.body.scrollTop)) 
    dY = confixWrapper("infix", "dY = document.body.scrollTop", [""], [], "getMyXY", document.body.scrollTop); else dY = confixWrapper("infix", "dY = document.documentElement.scrollTop", [""], [], "getMyXY", document.documentElement.scrollTop);
    myY = confixWrapper("infix", "myY = eve.clientY + dY", [""], [], "getMyXY", eve.clientY + dY);
  } else {
    myX = confixWrapper("infix", "myX = eve.pageX", [""], [], "getMyXY", eve.pageX);
    myY = confixWrapper("infix", "myY = eve.pageY", [""], [], "getMyXY", eve.pageY);
  }
  return confixWrapper("return", "return ((t) ? myY : myX);", [""], [], "getMyXY", ((t) ? myY : myX));
}
function ShowCP(eve, ref, CPProp, CPObj) {
  try {
    if (confixWrapper("condition", "(global_colorRef.id == confixWrapper(\"functionCall\", \"dg(ref)\", [\"ref\"], [ref], \"ShowCP\", dg(ref)).id) && (confixWrapper(\"functionCall\", \"dg('CPwutObj')\", [\"CPwutObj\"], ['CPwutObj'], \"ShowCP\", dg('CPwutObj')).innerHTML == CPObj)", ["eve", "ref", "CPProp", "CPObj", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [eve, ref, CPProp, CPObj, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowCP", (global_colorRef.id == confixWrapper("functionCall", "dg(ref)", ["ref"], [ref], "ShowCP", dg(ref)).id) && (confixWrapper("functionCall", "dg('CPwutObj')", ["CPwutObj"], ['CPwutObj'], "ShowCP", dg('CPwutObj')).innerHTML == CPObj))) 
    {
      confixWrapper("functionCall", "HideCP()", [], [], "ShowCP", HideCP());
      return;
    }
  }  catch (e) {
}
  if (confixWrapper("condition", "global_isPathedHide", ["eve", "ref", "CPProp", "CPObj", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [eve, ref, CPProp, CPObj, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowCP", global_isPathedHide)) 
  confixWrapper("functionCall", "alertPathedHide()", [], [], "ShowCP", alertPathedHide());
  confixWrapper("functionCall", "SetText('CPwutProp', CPProp)", ["CPwutProp", "CPProp"], ['CPwutProp', CPProp], "ShowCP", SetText('CPwutProp', CPProp));
  confixWrapper("functionCall", "SetText('CPwutObj', CPObj)", ["CPwutObj", "CPObj"], ['CPwutObj', CPObj], "ShowCP", SetText('CPwutObj', CPObj));
  global_colorRef = confixWrapper("infix", "global_colorRef = confixWrapper(\"functionCall\", \"dg(ref)\", [\"ref\"], [ref], \"ShowCP\", dg(ref))", [""], [], "ShowCP", confixWrapper("functionCall", "dg(ref)", ["ref"], [ref], "ShowCP", dg(ref)));
  confixWrapper("functionCall", "IPickColor(global_colorRef.value)", ["global_colorRef.value"], [global_colorRef.value], "ShowCP", IPickColor(global_colorRef.value));
  var myX = confixWrapper("initvar", "var myX = confixWrapper(\"functionCall\", \"getMyXY(eve, 0)\", [\"eve\", \"0\"], [eve, 0], \"ShowCP\", getMyXY(eve, 0))", [""], [], "ShowCP", confixWrapper("functionCall", "getMyXY(eve, 0)", ["eve", "0"], [eve, 0], "ShowCP", getMyXY(eve, 0)));
  var myY = confixWrapper("initvar", "var myY = confixWrapper(\"functionCall\", \"getMyXY(eve, 1)\", [\"eve\", \"1\"], [eve, 1], \"ShowCP\", getMyXY(eve, 1))", [""], [], "ShowCP", confixWrapper("functionCall", "getMyXY(eve, 1)", ["eve", "1"], [eve, 1], "ShowCP", getMyXY(eve, 1)));
  confixWrapper("functionCall", "SwitchDisplay('ColorPicker', 1)", ["ColorPicker", "1"], ['ColorPicker', 1], "ShowCP", SwitchDisplay('ColorPicker', 1));
  confixWrapper("functionCall", "dg('ColorPicker')", ["ColorPicker"], ['ColorPicker'], "ShowCP", dg('ColorPicker')).style.top = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('ColorPicker')\", [\"ColorPicker\"], ['ColorPicker'], \"ShowCP\", dg('ColorPicker')).style.top = (myY + 10) + 'px'", [""], [], "ShowCP", (myY + 10) + 'px');
  confixWrapper("functionCall", "SwitchSelectIE(0)", ["0"], [0], "ShowCP", SwitchSelectIE(0));
  confixWrapper("functionCall", "deMoronize()", [], [], "ShowCP", deMoronize());
}
function ShowPsycHokinesis(eve) {
  confixWrapper("functionCall", "HideAll(true)", ["true"], [true], "ShowPsycHokinesis", HideAll(true));
  if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"dg('PsycHokinesisBox')\", [\"PsycHokinesisBox\"], ['PsycHokinesisBox'], \"ShowPsycHokinesis\", dg('PsycHokinesisBox')).style.display != 'none'", ["eve", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [eve, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowPsycHokinesis", confixWrapper("functionCall", "dg('PsycHokinesisBox')", ["PsycHokinesisBox"], ['PsycHokinesisBox'], "ShowPsycHokinesis", dg('PsycHokinesisBox')).style.display != 'none')) 
  {
    confixWrapper("functionCall", "HidePsycHokinesis()", [], [], "ShowPsycHokinesis", HidePsycHokinesis());
    return;
  }
  confixWrapper("functionCall", "showDarkMoon(\"70\")", ["70"], ["70"], "ShowPsycHokinesis", showDarkMoon("70"));
  if (confixWrapper("condition", "global_isPathedHide", ["eve", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [eve, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowPsycHokinesis", global_isPathedHide)) 
  confixWrapper("functionCall", "alertPathedHide()", [], [], "ShowPsycHokinesis", alertPathedHide());
  var myX = confixWrapper("initvar", "var myX = confixWrapper(\"functionCall\", \"getMyXY(eve, 0)\", [\"eve\", \"0\"], [eve, 0], \"ShowPsycHokinesis\", getMyXY(eve, 0))", [""], [], "ShowPsycHokinesis", confixWrapper("functionCall", "getMyXY(eve, 0)", ["eve", "0"], [eve, 0], "ShowPsycHokinesis", getMyXY(eve, 0)));
  var myY = confixWrapper("initvar", "var myY = confixWrapper(\"functionCall\", \"getMyXY(eve, 1)\", [\"eve\", \"1\"], [eve, 1], \"ShowPsycHokinesis\", getMyXY(eve, 1))", [""], [], "ShowPsycHokinesis", confixWrapper("functionCall", "getMyXY(eve, 1)", ["eve", "1"], [eve, 1], "ShowPsycHokinesis", getMyXY(eve, 1)));
  confixWrapper("functionCall", "ChangeByInput('PsycHokinesisBox', 'top', (myY + 10) + 'px')", ["PsycHokinesisBox", "top", "(myY + 10) + px"], ['PsycHokinesisBox', 'top', (myY + 10) + 'px'], "ShowPsycHokinesis", ChangeByInput('PsycHokinesisBox', 'top', (myY + 10) + 'px'));
  confixWrapper("functionCall", "dg('PsycHokinesisGetEr')", ["PsycHokinesisGetEr"], ['PsycHokinesisGetEr'], "ShowPsycHokinesis", dg('PsycHokinesisGetEr')).value = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('PsycHokinesisGetEr')\", [\"PsycHokinesisGetEr\"], ['PsycHokinesisGetEr'], \"ShowPsycHokinesis\", dg('PsycHokinesisGetEr')).value = '[Out Of Date! Click on \"Get PsycHokinesis\" to update.]'", [""], [], "ShowPsycHokinesis", '[Out Of Date! Click on "Get PsycHokinesis" to update.]');
  confixWrapper("functionCall", "SwitchDisplay('PsycHokinesisBox', 1)", ["PsycHokinesisBox", "1"], ['PsycHokinesisBox', 1], "ShowPsycHokinesis", SwitchDisplay('PsycHokinesisBox', 1));
  confixWrapper("functionCall", "SwitchSelectIE(0)", ["0"], [0], "ShowPsycHokinesis", SwitchSelectIE(0));
}
function zwnjify(s) {
  for (var i = confixWrapper("initvar", "var i = 0", [""], [], "zwnjify", 0); confixWrapper("loopCondition", "i < s.length", [""], [], "zwnjify", i < s.length); i++) 
    if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"s.charAt(i)\", [\"i\"], [i], \"zwnjify\", s.charAt(i)) == translateIt('Shift 2: zwnj')", ["s", "i", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, i, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "zwnjify", confixWrapper("functionCall", "s.charAt(i)", ["i"], [i], "zwnjify", s.charAt(i)) == translateIt('Shift 2: zwnj'))) 
    s = confixWrapper("infix", "s = confixWrapper(\"functionCall\", \"s.substring(0, i)\", [\"0\", \"i\"], [0, i], \"zwnjify\", s.substring(0, i)) + '&zwnj;' + s.substring(i + 1, s.length)", [""], [], "zwnjify", confixWrapper("functionCall", "s.substring(0, i)", ["0", "i"], [0, i], "zwnjify", s.substring(0, i)) + '&zwnj;' + s.substring(i + 1, s.length));
  return confixWrapper("return", "return s;", [""], [], "zwnjify", s);
}
function HidePsycHokinesis() {
  if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"isDivVisible('PsycHokinesisBox')\", [\"PsycHokinesisBox\"], ['PsycHokinesisBox'], \"HidePsycHokinesis\", isDivVisible('PsycHokinesisBox'))", ["PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "HidePsycHokinesis", !confixWrapper("functionCall", "isDivVisible('PsycHokinesisBox')", ["PsycHokinesisBox"], ['PsycHokinesisBox'], "HidePsycHokinesis", isDivVisible('PsycHokinesisBox')))) 
  return;
  confixWrapper("functionCall", "hideDarkMoon()", [], [], "HidePsycHokinesis", hideDarkMoon());
  confixWrapper("functionCall", "SwitchDisplay('PsycHokinesisBox', 0)", ["PsycHokinesisBox", "0"], ['PsycHokinesisBox', 0], "HidePsycHokinesis", SwitchDisplay('PsycHokinesisBox', 0));
  confixWrapper("functionCall", "SwitchSelectIE(1)", ["1"], [1], "HidePsycHokinesis", SwitchSelectIE(1));
  if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"isIE()\", [], [], \"HidePsycHokinesis\", isIE())", ["PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "HidePsycHokinesis", !confixWrapper("functionCall", "isIE()", [], [], "HidePsycHokinesis", isIE()))) 
  {
    confixWrapper("functionCall", "window.blur()", [], [], "HidePsycHokinesis", window.blur());
    confixWrapper("functionCall", "window.focus()", [], [], "HidePsycHokinesis", window.focus());
  }
}
function ShowPsycHodrama(eve) {
  if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"dg('PsycHodramaBox')\", [\"PsycHodramaBox\"], ['PsycHodramaBox'], \"ShowPsycHodrama\", dg('PsycHodramaBox')).style.display != 'none'", ["eve", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [eve, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowPsycHodrama", confixWrapper("functionCall", "dg('PsycHodramaBox')", ["PsycHodramaBox"], ['PsycHodramaBox'], "ShowPsycHodrama", dg('PsycHodramaBox')).style.display != 'none')) 
  {
    confixWrapper("functionCall", "HidePsycHodrama()", [], [], "ShowPsycHodrama", HidePsycHodrama());
    return;
  }
  confixWrapper("functionCall", "HideAll(true)", ["true"], [true], "ShowPsycHodrama", HideAll(true));
  confixWrapper("functionCall", "showDarkMoon(\"50\")", ["50"], ["50"], "ShowPsycHodrama", showDarkMoon("50"));
  if (confixWrapper("condition", "global_isPathedHide", ["eve", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [eve, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowPsycHodrama", global_isPathedHide)) 
  confixWrapper("functionCall", "alertPathedHide()", [], [], "ShowPsycHodrama", alertPathedHide());
  var myX = confixWrapper("initvar", "var myX = confixWrapper(\"functionCall\", \"getMyXY(eve, 0)\", [\"eve\", \"0\"], [eve, 0], \"ShowPsycHodrama\", getMyXY(eve, 0))", [""], [], "ShowPsycHodrama", confixWrapper("functionCall", "getMyXY(eve, 0)", ["eve", "0"], [eve, 0], "ShowPsycHodrama", getMyXY(eve, 0)));
  var myY = confixWrapper("initvar", "var myY = confixWrapper(\"functionCall\", \"getMyXY(eve, 1)\", [\"eve\", \"1\"], [eve, 1], \"ShowPsycHodrama\", getMyXY(eve, 1))", [""], [], "ShowPsycHodrama", confixWrapper("functionCall", "getMyXY(eve, 1)", ["eve", "1"], [eve, 1], "ShowPsycHodrama", getMyXY(eve, 1)));
  confixWrapper("functionCall", "ChangeByInput('PsycHodramaBox', 'top', (myY + 10) + 'px')", ["PsycHodramaBox", "top", "(myY + 10) + px"], ['PsycHodramaBox', 'top', (myY + 10) + 'px'], "ShowPsycHodrama", ChangeByInput('PsycHodramaBox', 'top', (myY + 10) + 'px'));
  confixWrapper("functionCall", "dg('PsycHodramaGetEr')", ["PsycHodramaGetEr"], ['PsycHodramaGetEr'], "ShowPsycHodrama", dg('PsycHodramaGetEr')).value = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('PsycHodramaGetEr')\", [\"PsycHodramaGetEr\"], ['PsycHodramaGetEr'], \"ShowPsycHodrama\", dg('PsycHodramaGetEr')).value = '[Out Of Date! Click on \"Get PsycHodrama\" to update.]'", [""], [], "ShowPsycHodrama", '[Out Of Date! Click on "Get PsycHodrama" to update.]');
  confixWrapper("functionCall", "dg('PsycHodramaPutEr')", ["PsycHodramaPutEr"], ['PsycHodramaPutEr'], "ShowPsycHodrama", dg('PsycHodramaPutEr')).value = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('PsycHodramaPutEr')\", [\"PsycHodramaPutEr\"], ['PsycHodramaPutEr'], \"ShowPsycHodrama\", dg('PsycHodramaPutEr')).value = '[Paste your PsycHodrama here and press \"Apply\".]'", [""], [], "ShowPsycHodrama", '[Paste your PsycHodrama here and press "Apply".]');
  confixWrapper("functionCall", "SwitchDisplay('PsycHodramaBox', 1)", ["PsycHodramaBox", "1"], ['PsycHodramaBox', 1], "ShowPsycHodrama", SwitchDisplay('PsycHodramaBox', 1));
  confixWrapper("functionCall", "SwitchSelectIE(0)", ["0"], [0], "ShowPsycHodrama", SwitchSelectIE(0));
}
function HidePsycHodrama() {
  if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"isDivVisible('PsycHodramaBox')\", [\"PsycHodramaBox\"], ['PsycHodramaBox'], \"HidePsycHodrama\", isDivVisible('PsycHodramaBox'))", ["PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "HidePsycHodrama", !confixWrapper("functionCall", "isDivVisible('PsycHodramaBox')", ["PsycHodramaBox"], ['PsycHodramaBox'], "HidePsycHodrama", isDivVisible('PsycHodramaBox')))) 
  return;
  confixWrapper("functionCall", "hideDarkMoon()", [], [], "HidePsycHodrama", hideDarkMoon());
  confixWrapper("functionCall", "SwitchDisplay('PsycHodramaBox', 0)", ["PsycHodramaBox", "0"], ['PsycHodramaBox', 0], "HidePsycHodrama", SwitchDisplay('PsycHodramaBox', 0));
  confixWrapper("functionCall", "SwitchSelectIE(1)", ["1"], [1], "HidePsycHodrama", SwitchSelectIE(1));
  if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"isIE()\", [], [], \"HidePsycHodrama\", isIE())", ["PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "HidePsycHodrama", !confixWrapper("functionCall", "isIE()", [], [], "HidePsycHodrama", isIE()))) 
  {
    confixWrapper("functionCall", "window.blur()", [], [], "HidePsycHodrama", window.blur());
    confixWrapper("functionCall", "window.focus()", [], [], "HidePsycHodrama", window.focus());
  }
}
function UpdateAddImageNow() {
  var that = confixWrapper("initvar", "var that = confixWrapper(\"functionCall\", \"dg('AddImageImageI')\", [\"AddImageImageI\"], ['AddImageImageI'], \"UpdateAddImageNow\", dg('AddImageImageI'))", [""], [], "UpdateAddImageNow", confixWrapper("functionCall", "dg('AddImageImageI')", ["AddImageImageI"], ['AddImageImageI'], "UpdateAddImageNow", dg('AddImageImageI')));
  if (confixWrapper("condition", "global_AINode", ["that", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [that, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "UpdateAddImageNow", global_AINode)) 
  confixWrapper("functionCall", "SetValAndDo(global_AINode, '<img src=\"' + that.getAttribute('src') + '\" alt=\"' + that.getAttribute('alt') + '\" style=\"border: ' + dg('AddImageBorderWidthEr').value + ' ' + dg('AddImageBorderStyleEr').value + ' ' + dg('AddImageBorderColorEr').value + ';\" />')", ["global_AINode", "<img src= + that.getAttribute(src) +  alt= + that.getAttribute(alt) +  style=border:  + dg(AddImageBorderWidthEr).value +   + dg(AddImageBorderStyleEr).value +   + dg(AddImageBorderColorEr).value + ; />"], [global_AINode, '<img src="' + confixWrapper("functionCall", "that.getAttribute('src')", ["src"], ['src'], "UpdateAddImageNow", that.getAttribute('src')) + '" alt="' + that.getAttribute('alt') + '" style="border: ' + confixWrapper("functionCall", "dg('AddImageBorderWidthEr')", ["AddImageBorderWidthEr"], ['AddImageBorderWidthEr'], "UpdateAddImageNow", dg('AddImageBorderWidthEr')).value + ' ' + confixWrapper("functionCall", "dg('AddImageBorderStyleEr')", ["AddImageBorderStyleEr"], ['AddImageBorderStyleEr'], "UpdateAddImageNow", dg('AddImageBorderStyleEr')).value + ' ' + confixWrapper("functionCall", "dg('AddImageBorderColorEr')", ["AddImageBorderColorEr"], ['AddImageBorderColorEr'], "UpdateAddImageNow", dg('AddImageBorderColorEr')).value + ';" />'], "UpdateAddImageNow", SetValAndDo(global_AINode, '<img src="' + confixWrapper("functionCall", "that.getAttribute('src')", ["src"], ['src'], "UpdateAddImageNow", that.getAttribute('src')) + '" alt="' + that.getAttribute('alt') + '" style="border: ' + confixWrapper("functionCall", "dg('AddImageBorderWidthEr')", ["AddImageBorderWidthEr"], ['AddImageBorderWidthEr'], "UpdateAddImageNow", dg('AddImageBorderWidthEr')).value + ' ' + confixWrapper("functionCall", "dg('AddImageBorderStyleEr')", ["AddImageBorderStyleEr"], ['AddImageBorderStyleEr'], "UpdateAddImageNow", dg('AddImageBorderStyleEr')).value + ' ' + confixWrapper("functionCall", "dg('AddImageBorderColorEr')", ["AddImageBorderColorEr"], ['AddImageBorderColorEr'], "UpdateAddImageNow", dg('AddImageBorderColorEr')).value + ';" />'));
}
function getPersianDigit(num) {
  var PD = confixWrapper("initvar", "var PD = new Array(\"&#1776;\", \"&#1777;\", \"&#1778;\", \"&#1779;\", \"&#1780;\", \"&#1781;\", \"&#1782;\", \"&#1783;\", \"&#1784;\", \"&#1785;\")", [""], [], "getPersianDigit", new Array("&#1776;", "&#1777;", "&#1778;", "&#1779;", "&#1780;", "&#1781;", "&#1782;", "&#1783;", "&#1784;", "&#1785;"));
  var ret = confixWrapper("initvar", "var ret = \"\"", [""], [], "getPersianDigit", "");
do {
    ret = confixWrapper("infix", "ret = PD[(num % 10)] + ret", [""], [], "getPersianDigit", PD[(num % 10)] + ret);
    num = confixWrapper("infix", "num = confixWrapper(\"functionCall\", \"Math.floor(num / 10)\", [\"num / 10\"], [num / 10], \"getPersianDigit\", Math.floor(num / 10))", [""], [], "getPersianDigit", confixWrapper("functionCall", "Math.floor(num / 10)", ["num / 10"], [num / 10], "getPersianDigit", Math.floor(num / 10)));
  } while (num > 0);
  return confixWrapper("return", "return ret;", [""], [], "getPersianDigit", ret);
}
function convertPersianDigit(str) {
  var PD = confixWrapper("initvar", "var PD = new Array(\"&#1776;\", \"&#1777;\", \"&#1778;\", \"&#1779;\", \"&#1780;\", \"&#1781;\", \"&#1782;\", \"&#1783;\", \"&#1784;\", \"&#1785;\")", [""], [], "convertPersianDigit", new Array("&#1776;", "&#1777;", "&#1778;", "&#1779;", "&#1780;", "&#1781;", "&#1782;", "&#1783;", "&#1784;", "&#1785;"));
  var ret = confixWrapper("initvar", "var ret = 0", [""], [], "convertPersianDigit", 0), pwr = confixWrapper("initvar", "var pwr = 1", [""], [], "convertPersianDigit", 1);
  for (var i = confixWrapper("initvar", "var i = str.length - 1", [""], [], "convertPersianDigit", str.length - 1); confixWrapper("loopCondition", "i >= 0", [""], [], "convertPersianDigit", i >= 0); i--) 
    {
      var t = confixWrapper("initvar", "var t = 0", [""], [], "convertPersianDigit", 0);
      for (var j = confixWrapper("initvar", "var j = 0", [""], [], "convertPersianDigit", 0); confixWrapper("loopCondition", "j < 10", [""], [], "convertPersianDigit", j < 10); j++) 
        if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"str.charCodeAt(i)\", [\"i\"], [i], \"convertPersianDigit\", str.charCodeAt(i)) == PD[j].substring(2, 6)", ["str", "PD", "ret", "pwr", "i", "t", "j", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [str, PD, ret, pwr, i, t, j, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "convertPersianDigit", confixWrapper("functionCall", "str.charCodeAt(i)", ["i"], [i], "convertPersianDigit", str.charCodeAt(i)) == PD[j].substring(2, 6))) 
        t = confixWrapper("infix", "t = j", [""], [], "convertPersianDigit", j);
      ret += t * pwr;
      pwr *= 10;
    }
  return confixWrapper("return", "return ret;", [""], [], "convertPersianDigit", ret);
}
function ShowAddImage(side, part, num, eve) {
  var LegendText;
  if (confixWrapper("condition", "global_lang == 'fa'", ["side", "part", "num", "eve", "LegendText", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [side, part, num, eve, LegendText, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowAddImage", global_lang == 'fa')) 
  LegendText = confixWrapper("infix", "LegendText = confixWrapper(\"functionCall\", \"translateIt('Afzoodane Tasvir Be Peyvande Shomareye')\", [\"Afzoodane Tasvir Be Peyvande Shomareye\"], ['Afzoodane Tasvir Be Peyvande Shomareye'], \"ShowAddImage\", translateIt('Afzoodane Tasvir Be Peyvande Shomareye')) + ' <b>' + getPersianDigit(num + 1) + '</b> ' + translateIt('Az Jabeye Shomareye') + ' <b>' + getPersianDigit(part + 1) + '</b> ' + translateIt('Az Sotoone Samte') + ' <b>' + (side == 'R' ? confixWrapper(\"functionCall\", \"translateIt('Raast')\", [\"Raast\"], ['Raast'], \"ShowAddImage\", translateIt('Raast')) : translateIt('Chap')) + '</b>'", [""], [], "ShowAddImage", confixWrapper("functionCall", "translateIt('Afzoodane Tasvir Be Peyvande Shomareye')", ["Afzoodane Tasvir Be Peyvande Shomareye"], ['Afzoodane Tasvir Be Peyvande Shomareye'], "ShowAddImage", translateIt('Afzoodane Tasvir Be Peyvande Shomareye')) + ' <b>' + getPersianDigit(num + 1) + '</b> ' + translateIt('Az Jabeye Shomareye') + ' <b>' + getPersianDigit(part + 1) + '</b> ' + translateIt('Az Sotoone Samte') + ' <b>' + (side == 'R' ? confixWrapper("functionCall", "translateIt('Raast')", ["Raast"], ['Raast'], "ShowAddImage", translateIt('Raast')) : translateIt('Chap')) + '</b>'); else LegendText = confixWrapper("infix", "LegendText = 'Add Image to Link <b>#' + (num + 1) + '</b> of Box <b>#' + (part + 1) + '</b> of Side <b>' + (side == 'R' ? 'Right' : 'Left') + '</b>'", [""], [], "ShowAddImage", 'Add Image to Link <b>#' + (num + 1) + '</b> of Box <b>#' + (part + 1) + '</b> of Side <b>' + (side == 'R' ? 'Right' : 'Left') + '</b>');
  if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"dg('addImageLegend')\", [\"addImageLegend\"], ['addImageLegend'], \"ShowAddImage\", dg('addImageLegend')).innerHTML == LegendText", ["side", "part", "num", "eve", "LegendText", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [side, part, num, eve, LegendText, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowAddImage", confixWrapper("functionCall", "dg('addImageLegend')", ["addImageLegend"], ['addImageLegend'], "ShowAddImage", dg('addImageLegend')).innerHTML == LegendText)) 
  {
    confixWrapper("functionCall", "HideAddImage()", [], [], "ShowAddImage", HideAddImage());
    return;
  }
  if (confixWrapper("condition", "global_isPathedHide", ["side", "part", "num", "eve", "LegendText", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [side, part, num, eve, LegendText, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowAddImage", global_isPathedHide)) 
  confixWrapper("functionCall", "alertPathedHide()", [], [], "ShowAddImage", alertPathedHide());
  global_AINode = confixWrapper("infix", "global_AINode = '_' + side + '_LinkTxt_' + part + '_' + num", [""], [], "ShowAddImage", '_' + side + '_LinkTxt_' + part + '_' + num);
  var myX = confixWrapper("initvar", "var myX = confixWrapper(\"functionCall\", \"getMyXY(eve, 0)\", [\"eve\", \"0\"], [eve, 0], \"ShowAddImage\", getMyXY(eve, 0))", [""], [], "ShowAddImage", confixWrapper("functionCall", "getMyXY(eve, 0)", ["eve", "0"], [eve, 0], "ShowAddImage", getMyXY(eve, 0)));
  var myY = confixWrapper("initvar", "var myY = confixWrapper(\"functionCall\", \"getMyXY(eve, 1)\", [\"eve\", \"1\"], [eve, 1], \"ShowAddImage\", getMyXY(eve, 1))", [""], [], "ShowAddImage", confixWrapper("functionCall", "getMyXY(eve, 1)", ["eve", "1"], [eve, 1], "ShowAddImage", getMyXY(eve, 1)));
  confixWrapper("functionCall", "dg('addImageLegend')", ["addImageLegend"], ['addImageLegend'], "ShowAddImage", dg('addImageLegend')).innerHTML = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('addImageLegend')\", [\"addImageLegend\"], ['addImageLegend'], \"ShowAddImage\", dg('addImageLegend')).innerHTML = LegendText", [""], [], "ShowAddImage", LegendText);
  confixWrapper("functionCall", "dg('AddImageImageIAddress')", ["AddImageImageIAddress"], ['AddImageImageIAddress'], "ShowAddImage", dg('AddImageImageIAddress')).value = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('AddImageImageIAddress')\", [\"AddImageImageIAddress\"], ['AddImageImageIAddress'], \"ShowAddImage\", dg('AddImageImageIAddress')).value = ''", [""], [], "ShowAddImage", '');
  confixWrapper("functionCall", "dg('AddImageImageIAlt')", ["AddImageImageIAlt"], ['AddImageImageIAlt'], "ShowAddImage", dg('AddImageImageIAlt')).value = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('AddImageImageIAlt')\", [\"AddImageImageIAlt\"], ['AddImageImageIAlt'], \"ShowAddImage\", dg('AddImageImageIAlt')).value = ''", [""], [], "ShowAddImage", '');
  confixWrapper("functionCall", "ChangeByInput('addImage', 'top', (myY + 10) + 'px')", ["addImage", "top", "(myY + 10) + px"], ['addImage', 'top', (myY + 10) + 'px'], "ShowAddImage", ChangeByInput('addImage', 'top', (myY + 10) + 'px'));
  confixWrapper("functionCall", "SwitchDisplay('addImage', 1)", ["addImage", "1"], ['addImage', 1], "ShowAddImage", SwitchDisplay('addImage', 1));
  confixWrapper("functionCall", "SwitchSelectIE(0)", ["0"], [0], "ShowAddImage", SwitchSelectIE(0));
}
function HideAddImage() {
  if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"isDivVisible('addImage')\", [\"addImage\"], ['addImage'], \"HideAddImage\", isDivVisible('addImage'))", ["PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "HideAddImage", !confixWrapper("functionCall", "isDivVisible('addImage')", ["addImage"], ['addImage'], "HideAddImage", isDivVisible('addImage')))) 
  return;
  confixWrapper("functionCall", "SwitchDisplay('addImage', 0)", ["addImage", "0"], ['addImage', 0], "HideAddImage", SwitchDisplay('addImage', 0));
  confixWrapper("functionCall", "dg('addImageLegend')", ["addImageLegend"], ['addImageLegend'], "HideAddImage", dg('addImageLegend')).innerHTML = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('addImageLegend')\", [\"addImageLegend\"], ['addImageLegend'], \"HideAddImage\", dg('addImageLegend')).innerHTML = ''", [""], [], "HideAddImage", '');
  confixWrapper("functionCall", "SwitchSelectIE(1)", ["1"], [1], "HideAddImage", SwitchSelectIE(1));
  if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"isIE()\", [], [], \"HideAddImage\", isIE())", ["PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "HideAddImage", !confixWrapper("functionCall", "isIE()", [], [], "HideAddImage", isIE()))) 
  {
    confixWrapper("functionCall", "window.blur()", [], [], "HideAddImage", window.blur());
    confixWrapper("functionCall", "window.focus()", [], [], "HideAddImage", window.focus());
  }
}
function HideHelp() {
  if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"isDivVisible('helpBox')\", [\"helpBox\"], ['helpBox'], \"HideHelp\", isDivVisible('helpBox'))", ["PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "HideHelp", !confixWrapper("functionCall", "isDivVisible('helpBox')", ["helpBox"], ['helpBox'], "HideHelp", isDivVisible('helpBox')))) 
  return;
  confixWrapper("functionCall", "SwitchDisplay('helpBox', 0)", ["helpBox", "0"], ['helpBox', 0], "HideHelp", SwitchDisplay('helpBox', 0));
  confixWrapper("functionCall", "dg('helpBoxLegend')", ["helpBoxLegend"], ['helpBoxLegend'], "HideHelp", dg('helpBoxLegend')).innerHTML = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('helpBoxLegend')\", [\"helpBoxLegend\"], ['helpBoxLegend'], \"HideHelp\", dg('helpBoxLegend')).innerHTML = ''", [""], [], "HideHelp", '');
  confixWrapper("functionCall", "SwitchSelectIE(1)", ["1"], [1], "HideHelp", SwitchSelectIE(1));
  if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"isIE()\", [], [], \"HideHelp\", isIE())", ["PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "HideHelp", !confixWrapper("functionCall", "isIE()", [], [], "HideHelp", isIE()))) 
  {
    confixWrapper("functionCall", "window.blur()", [], [], "HideHelp", window.blur());
    confixWrapper("functionCall", "window.focus()", [], [], "HideHelp", window.focus());
  }
}
function ShowHelp(s, eve) {
  if (confixWrapper("condition", "(confixWrapper(\"functionCall\", \"dg('helpBoxLegend')\", [\"helpBoxLegend\"], ['helpBoxLegend'], \"ShowHelp\", dg('helpBoxLegend')).innerHTML == s)", ["s", "eve", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, eve, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowHelp", (confixWrapper("functionCall", "dg('helpBoxLegend')", ["helpBoxLegend"], ['helpBoxLegend'], "ShowHelp", dg('helpBoxLegend')).innerHTML == s))) 
  {
    confixWrapper("functionCall", "HideHelp()", [], [], "ShowHelp", HideHelp());
    return;
  }
  var myX = confixWrapper("initvar", "var myX = confixWrapper(\"functionCall\", \"getMyXY(eve, 0)\", [\"eve\", \"0\"], [eve, 0], \"ShowHelp\", getMyXY(eve, 0))", [""], [], "ShowHelp", confixWrapper("functionCall", "getMyXY(eve, 0)", ["eve", "0"], [eve, 0], "ShowHelp", getMyXY(eve, 0)));
  var myY = confixWrapper("initvar", "var myY = confixWrapper(\"functionCall\", \"getMyXY(eve, 1)\", [\"eve\", \"1\"], [eve, 1], \"ShowHelp\", getMyXY(eve, 1))", [""], [], "ShowHelp", confixWrapper("functionCall", "getMyXY(eve, 1)", ["eve", "1"], [eve, 1], "ShowHelp", getMyXY(eve, 1)));
  if (confixWrapper("condition", "myX < 100", ["s", "eve", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, eve, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowHelp", myX < 100)) 
  myX = confixWrapper("infix", "myX = 100", [""], [], "ShowHelp", 100);
  if (confixWrapper("condition", "myX + 250 > window.screen.width - 50", ["s", "eve", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, eve, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowHelp", myX + 250 > window.screen.width - 50)) 
  myX = confixWrapper("infix", "myX = window.screen.width - 300", [""], [], "ShowHelp", window.screen.width - 300);
  confixWrapper("functionCall", "ChangeByInput('helpBox', 'top', (myY + 10) + 'px')", ["helpBox", "top", "(myY + 10) + px"], ['helpBox', 'top', (myY + 10) + 'px'], "ShowHelp", ChangeByInput('helpBox', 'top', (myY + 10) + 'px'));
  confixWrapper("functionCall", "ChangeByInput('helpBox', 'left', (myX - 100) + 'px')", ["helpBox", "left", "(myX - 100) + px"], ['helpBox', 'left', (myX - 100) + 'px'], "ShowHelp", ChangeByInput('helpBox', 'left', (myX - 100) + 'px'));
  confixWrapper("functionCall", "SwitchDisplay('helpBox', 1)", ["helpBox", "1"], ['helpBox', 1], "ShowHelp", SwitchDisplay('helpBox', 1));
  confixWrapper("functionCall", "dg('helpBoxLegend')", ["helpBoxLegend"], ['helpBoxLegend'], "ShowHelp", dg('helpBoxLegend')).innerHTML = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('helpBoxLegend')\", [\"helpBoxLegend\"], ['helpBoxLegend'], \"ShowHelp\", dg('helpBoxLegend')).innerHTML = s", [""], [], "ShowHelp", s);
  confixWrapper("functionCall", "dg('helpBoxLegend')", ["helpBoxLegend"], ['helpBoxLegend'], "ShowHelp", dg('helpBoxLegend')).innerHTML = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('helpBoxLegend')\", [\"helpBoxLegend\"], ['helpBoxLegend'], \"ShowHelp\", dg('helpBoxLegend')).innerHTML = s", [""], [], "ShowHelp", s);
  confixWrapper("functionCall", "dg('helpBoxInner')", ["helpBoxInner"], ['helpBoxInner'], "ShowHelp", dg('helpBoxInner')).innerHTML = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('helpBoxInner')\", [\"helpBoxInner\"], ['helpBoxInner'], \"ShowHelp\", dg('helpBoxInner')).innerHTML = getHelpNow(confixWrapper(\"functionCall\", \"s.toLowerCase()\", [], [], \"ShowHelp\", s.toLowerCase()))", [""], [], "ShowHelp", getHelpNow(confixWrapper("functionCall", "s.toLowerCase()", [], [], "ShowHelp", s.toLowerCase())));
  confixWrapper("functionCall", "SwitchSelectIE(0)", ["0"], [0], "ShowHelp", SwitchSelectIE(0));
}
function ChangeByInput(str, wut, inp) {
  var dest = confixWrapper("initvar", "var dest = (str.style) ? str : confixWrapper(\"functionCall\", \"dg(str)\", [\"str\"], [str], \"ChangeByInput\", dg(str))", [""], [], "ChangeByInput", (str.style) ? str : confixWrapper("functionCall", "dg(str)", ["str"], [str], "ChangeByInput", dg(str)));
  var val, uVal, uEval;
  if (confixWrapper("condition", "inp.value", ["str", "wut", "inp", "dest", "val", "uVal", "uEval", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [str, wut, inp, dest, val, uVal, uEval, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ChangeByInput", inp.value)) 
  val = confixWrapper("infix", "val = inp.value", ["inp"], [inp], "ChangeByInput", inp.value); else val = confixWrapper("infix", "val = inp", [""], [], "ChangeByInput", inp);
  if (confixWrapper("condition", "wut == 'innerHTML'", ["str", "wut", "inp", "dest", "val", "uVal", "uEval", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [str, wut, inp, dest, val, uVal, uEval, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ChangeByInput", wut == 'innerHTML')) 
  {
    dest.innerHTML = confixWrapper("infix", "dest.innerHTML = (val.length) ? val : ''", [""], [], "ChangeByInput", (val.length) ? val : '');
    return;
  }
  try {
    uEval = confixWrapper("infix", "uEval = confixWrapper(\"functionCall\", \"eval('dest.style.' + wut)\", [\"dest.style. + wut\"], ['dest.style.' + wut], \"ChangeByInput\", eval('dest.style.' + wut))", [""], [], "ChangeByInput", confixWrapper("functionCall", "eval('dest.style.' + wut)", ["dest.style. + wut"], ['dest.style.' + wut], "ChangeByInput", eval('dest.style.' + wut)));
  }  catch (e) {
  confixWrapper("functionCall", "alert('A Bug! Call Aideen!')", ["A Bug! Call Aideen!"], ['A Bug! Call Aideen!'], "ChangeByInput", alert('A Bug! Call Aideen!'));
}
  uVal = confixWrapper("infix", "uVal = confixWrapper(\"functionCall\", \"String(val + '').toLowerCase()\", [], [], \"ChangeByInput\", confixWrapper(\"functionCall\", \"String(val + '')\", [\"val + \"], [val + ''], \"ChangeByInput\", String(val + '')).toLowerCase())", [""], [], "ChangeByInput", confixWrapper("functionCall", "String(val + '').toLowerCase()", [], [], "ChangeByInput", confixWrapper("functionCall", "String(val + '')", ["val + "], [val + ''], "ChangeByInput", String(val + '')).toLowerCase()));
  uEval = confixWrapper("infix", "uEval = confixWrapper(\"functionCall\", \"String(uEval + '').toLowerCase()\", [], [], \"ChangeByInput\", confixWrapper(\"functionCall\", \"String(uEval + '')\", [\"uEval + \"], [uEval + ''], \"ChangeByInput\", String(uEval + '')).toLowerCase())", [""], [], "ChangeByInput", confixWrapper("functionCall", "String(uEval + '').toLowerCase()", [], [], "ChangeByInput", confixWrapper("functionCall", "String(uEval + '')", ["uEval + "], [uEval + ''], "ChangeByInput", String(uEval + '')).toLowerCase()));
  if (confixWrapper("condition", "uVal == \"\" || uVal == \"http://\" || uVal == \"url('http://')\" || uVal == \"url(http://)\"", ["str", "wut", "inp", "dest", "val", "uVal", "uEval", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [str, wut, inp, dest, val, uVal, uEval, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ChangeByInput", uVal == "" || uVal == "http://" || uVal == "url('http://')" || uVal == "url(http://)")) 
  uVal = confixWrapper("infix", "uVal = \"\"", [""], [], "ChangeByInput", "");
  if (confixWrapper("condition", "uEval == \"\" || uEval == \"http://\" || uEval == \"url('http://')\" || uEval == \"url(http://)\"", ["str", "wut", "inp", "dest", "val", "uVal", "uEval", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [str, wut, inp, dest, val, uVal, uEval, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ChangeByInput", uEval == "" || uEval == "http://" || uEval == "url('http://')" || uEval == "url(http://)")) 
  uEval = confixWrapper("infix", "uEval = \"\"", [""], [], "ChangeByInput", "");
  if (confixWrapper("condition", "uVal == uEval", ["str", "wut", "inp", "dest", "val", "uVal", "uEval", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [str, wut, inp, dest, val, uVal, uEval, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ChangeByInput", uVal == uEval)) 
  return;
  switch (wut) {
    case 'backgroundImage':
      dest.style.backgroundImage = confixWrapper("infix", "dest.style.backgroundImage = 'url('' + val + '')'", [""], [], "ChangeByInput", 'url(\'' + val + '\')');
      break;
    case 'fontFamily':
      dest.style.fontFamily = confixWrapper("infix", "dest.style.fontFamily = val", [""], [], "ChangeByInput", val);
      break;
    case 'fontSize':
      dest.style.fontSize = confixWrapper("infix", "dest.style.fontSize = val", [""], [], "ChangeByInput", val);
      break;
    case 'fontWeight':
      dest.style.fontWeight = confixWrapper("infix", "dest.style.fontWeight = val", [""], [], "ChangeByInput", val);
      break;
    case 'fontStyle':
      dest.style.fontStyle = confixWrapper("infix", "dest.style.fontStyle = val", [""], [], "ChangeByInput", val);
      break;
    case 'textDecoration':
      dest.style.textDecoration = confixWrapper("infix", "dest.style.textDecoration = val", [""], [], "ChangeByInput", val);
      break;
    case 'direction':
      dest.style.direction = confixWrapper("infix", "dest.style.direction = val", [""], [], "ChangeByInput", val);
      break;
    case 'textAlign':
      dest.style.textAlign = confixWrapper("infix", "dest.style.textAlign = val", [""], [], "ChangeByInput", val);
      break;
    case 'borderStyle':
      dest.style.borderStyle = confixWrapper("infix", "dest.style.borderStyle = val", [""], [], "ChangeByInput", val);
      break;
    case 'borderWidth':
      dest.style.borderWidth = confixWrapper("infix", "dest.style.borderWidth = val", [""], [], "ChangeByInput", val);
      break;
    case 'borderBottomWidth':
      dest.style.borderBottomWidth = confixWrapper("infix", "dest.style.borderBottomWidth = val", [""], [], "ChangeByInput", val);
      break;
    case 'borderBottomStyle':
      dest.style.borderBottomStyle = confixWrapper("infix", "dest.style.borderBottomStyle = val", [""], [], "ChangeByInput", val);
      break;
    case 'borderRightStyle':
      dest.style.borderRightStyle = confixWrapper("infix", "dest.style.borderRightStyle = val", [""], [], "ChangeByInput", val);
      break;
    case 'borderBottomColor':
      dest.style.borderBottomColor = confixWrapper("infix", "dest.style.borderBottomColor = val", [""], [], "ChangeByInput", val);
      break;
    case 'borderRightColor':
      dest.style.borderRightColor = confixWrapper("infix", "dest.style.borderRightColor = val", [""], [], "ChangeByInput", val);
      break;
    case 'borderLeftColor':
      dest.style.borderLeftColor = confixWrapper("infix", "dest.style.borderLeftColor = val", [""], [], "ChangeByInput", val);
      break;
    case 'borderTopWidth':
      dest.style.borderTopWidth = confixWrapper("infix", "dest.style.borderTopWidth = val", [""], [], "ChangeByInput", val);
      break;
    case 'borderColor':
      dest.style.borderColor = confixWrapper("infix", "dest.style.borderColor = val", [""], [], "ChangeByInput", val);
      break;
    case 'backgroundColor':
      dest.style.backgroundColor = confixWrapper("infix", "dest.style.backgroundColor = val", [""], [], "ChangeByInput", val);
      break;
    case 'color':
      dest.style.color = confixWrapper("infix", "dest.style.color = val", [""], [], "ChangeByInput", val);
      break;
    case 'visibility':
      dest.style.visibility = confixWrapper("infix", "dest.style.visibility = val", [""], [], "ChangeByInput", val);
      break;
    case 'paddingLeft':
      try {
        dest.style.paddingLeft = confixWrapper("infix", "dest.style.paddingLeft = val", [""], [], "ChangeByInput", val);
      }      catch (e) {
}
      break;
    case 'paddingRight':
      try {
        dest.style.paddingRight = confixWrapper("infix", "dest.style.paddingRight = val", [""], [], "ChangeByInput", val);
      }      catch (e) {
}
      break;
    case 'paddingTop':
      try {
        dest.style.paddingTop = confixWrapper("infix", "dest.style.paddingTop = val", [""], [], "ChangeByInput", val);
      }      catch (e) {
}
      break;
    case 'paddingBottom':
      try {
        dest.style.paddingBottom = confixWrapper("infix", "dest.style.paddingBottom = val", [""], [], "ChangeByInput", val);
      }      catch (e) {
}
      break;
    case 'marginLeft':
      try {
        dest.style.marginLeft = confixWrapper("infix", "dest.style.marginLeft = val", [""], [], "ChangeByInput", val);
      }      catch (e) {
}
      break;
    case 'marginRight':
      try {
        dest.style.marginRight = confixWrapper("infix", "dest.style.marginRight = val", [""], [], "ChangeByInput", val);
      }      catch (e) {
}
      break;
    case 'marginTop':
      dest.style.marginTop = confixWrapper("infix", "dest.style.marginTop = val", [""], [], "ChangeByInput", val);
      break;
    case 'marginBottom':
      dest.style.marginBottom = confixWrapper("infix", "dest.style.marginBottom = val", [""], [], "ChangeByInput", val);
      break;
    case 'backgroundRepeat':
      dest.style.backgroundRepeat = confixWrapper("infix", "dest.style.backgroundRepeat = val", [""], [], "ChangeByInput", val);
      break;
    case 'backgroundAttachment':
      dest.style.backgroundAttachment = confixWrapper("infix", "dest.style.backgroundAttachment = val", [""], [], "ChangeByInput", val);
      break;
    case 'backgroundPosition':
      dest.style.backgroundPosition = confixWrapper("infix", "dest.style.backgroundPosition = val", [""], [], "ChangeByInput", val);
      break;
    case 'width':
      try {
        dest.style.width = confixWrapper("infix", "dest.style.width = val", [""], [], "ChangeByInput", val);
      }      catch (e) {
}
      break;
    case 'top':
      dest.style.top = confixWrapper("infix", "dest.style.top = val", [""], [], "ChangeByInput", val);
      break;
    case 'left':
      dest.style.left = confixWrapper("infix", "dest.style.left = val", [""], [], "ChangeByInput", val);
      break;
    case 'lineHeight':
      dest.style.lineHeight = confixWrapper("infix", "dest.style.lineHeight = val", [""], [], "ChangeByInput", val);
      break;
    case 'height':
      try {
        dest.style.height = confixWrapper("infix", "dest.style.height = val", [""], [], "ChangeByInput", val);
        break;
      }      catch (e) {
}
      break;
  }
}
function ChangeHeaderDirection(who, wut) {
  confixWrapper("functionCall", "ChangeByInput('HeaderPartText', 'direction', wut)", ["HeaderPartText", "direction", "wut"], ['HeaderPartText', 'direction', wut], "ChangeHeaderDirection", ChangeByInput('HeaderPartText', 'direction', wut));
  confixWrapper("functionCall", "ChangeByInput('TitleTextTextEr', 'direction', wut)", ["TitleTextTextEr", "direction", "wut"], ['TitleTextTextEr', 'direction', wut], "ChangeHeaderDirection", ChangeByInput('TitleTextTextEr', 'direction', wut));
  confixWrapper("functionCall", "ChangeByInput('SubTitleTextTextEr', 'direction', wut)", ["SubTitleTextTextEr", "direction", "wut"], ['SubTitleTextTextEr', 'direction', wut], "ChangeHeaderDirection", ChangeByInput('SubTitleTextTextEr', 'direction', wut));
  confixWrapper("functionCall", "ChangeByInput('TitleText', 'direction', wut)", ["TitleText", "direction", "wut"], ['TitleText', 'direction', wut], "ChangeHeaderDirection", ChangeByInput('TitleText', 'direction', wut));
  confixWrapper("functionCall", "ChangeByInput('SubTitleText', 'direction', wut)", ["SubTitleText", "direction", "wut"], ['SubTitleText', 'direction', wut], "ChangeHeaderDirection", ChangeByInput('SubTitleText', 'direction', wut));
  if (confixWrapper("condition", "global_canWrite", ["who", "wut", "dir", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [who, wut, dir, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ChangeHeaderDirection", global_canWrite)) 
  {
    var dir = confixWrapper("initvar", "var dir = (wut == 'rtl') ? 'right' : 'left'", [""], [], "ChangeHeaderDirection", (wut == 'rtl') ? 'right' : 'left');
    var who = confixWrapper("initvar", "var who = (wut == 'rtl') ? 'HeaderPartTextAlignErRight' : 'HeaderPartTextAlignErLeft'", [""], [], "ChangeHeaderDirection", (wut == 'rtl') ? 'HeaderPartTextAlignErRight' : 'HeaderPartTextAlignErLeft');
    confixWrapper("functionCall", "dg(who)", ["who"], [who], "ChangeHeaderDirection", dg(who)).checked = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg(who)\", [\"who\"], [who], \"ChangeHeaderDirection\", dg(who)).checked = true", [""], [], "ChangeHeaderDirection", true);
    confixWrapper("functionCall", "doDuty(who)", ["who"], [who], "ChangeHeaderDirection", doDuty(who));
    confixWrapper("functionCall", "ChangeByInput('TitleText', 'textAlign', dir)", ["TitleText", "textAlign", "dir"], ['TitleText', 'textAlign', dir], "ChangeHeaderDirection", ChangeByInput('TitleText', 'textAlign', dir));
    confixWrapper("functionCall", "ChangeByInput('SubTitleText', 'textAlign', dir)", ["SubTitleText", "textAlign", "dir"], ['SubTitleText', 'textAlign', dir], "ChangeHeaderDirection", ChangeByInput('SubTitleText', 'textAlign', dir));
  }
}
function fromUtf8ToEntity(s) {
}
function ReadCookie(name) {
  var nameEQ = confixWrapper("initvar", "var nameEQ = name + \"=\"", [""], [], "ReadCookie", name + "=");
  var ca = confixWrapper("initvar", "var ca = confixWrapper(\"functionCall\", \"document.cookie.split(';')\", [\";\"], [';'], \"ReadCookie\", document.cookie.split(';'))", [""], [], "ReadCookie", confixWrapper("functionCall", "document.cookie.split(';')", [";"], [';'], "ReadCookie", document.cookie.split(';')));
  for (var i = confixWrapper("initvar", "var i = 0", [""], [], "ReadCookie", 0); confixWrapper("loopCondition", "i < ca.length", [""], [], "ReadCookie", i < ca.length); i++) 
    {
      var c = confixWrapper("initvar", "var c = ca[i]", [""], [], "ReadCookie", ca[i]);
      while (confixWrapper("functionCall", "c.charAt(0)", ["0"], [0], "ReadCookie", c.charAt(0)) == ' ') 
        c = confixWrapper("infix", "c = confixWrapper(\"functionCall\", \"c.substring(1, c.length)\", [\"1\", \"c.length\"], [1, c.length], \"ReadCookie\", c.substring(1, c.length))", [""], [], "ReadCookie", confixWrapper("functionCall", "c.substring(1, c.length)", ["1", "c.length"], [1, c.length], "ReadCookie", c.substring(1, c.length)));
      if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"c.indexOf(nameEQ)\", [\"nameEQ\"], [nameEQ], \"ReadCookie\", c.indexOf(nameEQ)) == 0", ["name", "nameEQ", "ca", "i", "c", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [name, nameEQ, ca, i, c, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ReadCookie", confixWrapper("functionCall", "c.indexOf(nameEQ)", ["nameEQ"], [nameEQ], "ReadCookie", c.indexOf(nameEQ)) == 0)) 
      return confixWrapper("return", "return confixWrapper(\"functionCall\", \"c.substring(nameEQ.length, c.length)\", [\"nameEQ.length\", \"c.length\"], [nameEQ.length, c.length], \"ReadCookie\", c.substring(nameEQ.length, c.length));", [""], [], "ReadCookie", confixWrapper("functionCall", "c.substring(nameEQ.length, c.length)", ["nameEQ.length", "c.length"], [nameEQ.length, c.length], "ReadCookie", c.substring(nameEQ.length, c.length)));
    }
  return confixWrapper("return", "return null;", [""], [], "ReadCookie", null);
}
function PsycHodramaDefaultString() {
  var s;
  if (confixWrapper("condition", "global_lang == 'fa'", ["s", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "PsycHodramaDefaultString", global_lang == 'fa')) 
  s = confixWrapper("infix", "s = '{100blogger]720px]90^25]repeat]scroll]top^20center]solid]1px]Tahoma^2C^20sans-serif]5em]1.75em]solid]1px]30px]40px]5px]solid]1px]solid]1px]_L_DefaultDivBackIsColorEr]solid]1px]solid]1px]Tahoma^2C^20sans-serif]150^25]1em]1em]Tahoma^2C^20sans-serif]solid]1px]solid]1px]Tahoma^2C^20sans-serif]1em]1em]1em]150^25]1em]1em]_R_DefaultDivBackIsColorEr]solid]1px]solid]1px]Tahoma^2C^20sans-serif]150^25]1em]1em]4]4]!0648!0628!0644!0627!06AF^20!0645!0646]!06A9!0644!0645!0647!200C!06CC^20!06A9!0644!06CC!062F!06CC!06F1^2C^20!06A9!0644!0645!0647!200C!06CC^20!06A9!0644!06CC!062F!06CC!06F2]!0633!0627!06CC!06A9!0648^3A^20!0642!0627!0644!0628!200C!0633!0627!0632^20!0622!0632!0627!062F],](]!0633!0641!06CC!062F](])]!0622!0628!06CC]!0646!0627!0631!0646!062C!06CC]!0622!0628!06CC^20!062A!06CC!0631!0647],](](]]]black](]3]1]2]3]1]1]3]1]2]3]1]1],](](]^23CCC])])]!0633!0627!06CC!06A9!0648]!0642!0627!0644!0628!200C^20!0648!0628!0644!0627!06AF!200C!062A!0627!0646^20!0631!0627!060C^20!062E!0648!062F!062A!0627!0646^20!0628!0633!0627!0632!06CC!062F^21],](],](](]!0633!06CC!0627!0647](](](]^23666](](](]^23333](],](](]75]20],](](]^23F6F6F6])])]black]1.5]15],](](]^23999])])]black]^23CCC])])]^23666]30]black]black],](](]^23333](],](]^23333]^23039]^2306C],](](]^23CCC])])],](](]^23EEE])])],](](]^23CCC])])],](]black]^23666]15]3]25]20]black],](](],](],](](](],]black](](](],](](](],]black](](](](](],]^23333](](](](](],]^2336F]^23333](],](]!0646!0648!0634!062A!0647^20!0634!062F!0647^20!062F!0631^20^21!0632!0645!0627!0646^20!062A!0648!0633!0637^20^21!0646!0648!06CC!0633.]20],](](]black])])]^23CCC])])]^23666]30]black]black],](](]^23333](],](]^23333]^23039]^2306C]]]]!062E!0627!0646!0647]^24HOME]!0635!0641!062D!0647^20!0627!0635!0644!06CC]!0627!06CC!0645!06CC!0644]^24EMAIL]!062A!0645!0627!0633^20!0628!0627^20!0645!0646]RSS]^24RSS]RSS^20Feed]!0622!0631!0634!06CC!0648]]]^24ARCHIVE]^20]]!062F!0648!0633!062A!0627!0646]]]Horm])blog.horm.org]Hallucinations^20Of^20Reabsorbed^20Mind]Phorm])p.horm.org]Another^20Phormation]!063A!06CC!0631!0647]]]^3Cimg^20src^3D^22)psyc.horm.org/barimg/bar_psycho.png^22^20width^3D^2280^22^20height^3D^2215^22^20style^3D^22border^3A^200px^20solid^20black^22^20/^3E]^24PSYCHO]!0633!0627!06CC!06A9!0648^3A^20!0642!0627!0644!0628^20!0633!0627!0632^20!0622!0632!0627!062F]^3Cimg^20src^3D^22)psyc.horm.org/barimg/bar_firefox.png^22^20width^3D^2280^22^20height^3D^2215^22^20style^3D^22border^3A^200px^20solid^20black^22^20/^3E])www.mozilla.org/products/firefox/]Get^20Firefox^21]^3Cimg^20src^3D^22)psyc.horm.org/barimg/bar_xhtml.png^22^20width^3D^2280^22^20height^3D^2215^22^20style^3D^22border^3A^200px^20solid^20black^22^20/^3E])validator.w3.org/check/referer]XHTML^20Validator^26^2361470^3BPsycHo}'", [""], [], "PsycHodramaDefaultString", '{100blogger]720px]90^25]repeat]scroll]top^20center]solid]1px]Tahoma^2C^20sans-serif]5em]1.75em]solid]1px]30px]40px]5px]solid]1px]solid]1px]_L_DefaultDivBackIsColorEr]solid]1px]solid]1px]Tahoma^2C^20sans-serif]150^25]1em]1em]Tahoma^2C^20sans-serif]solid]1px]solid]1px]Tahoma^2C^20sans-serif]1em]1em]1em]150^25]1em]1em]_R_DefaultDivBackIsColorEr]solid]1px]solid]1px]Tahoma^2C^20sans-serif]150^25]1em]1em]4]4]!0648!0628!0644!0627!06AF^20!0645!0646]!06A9!0644!0645!0647!200C!06CC^20!06A9!0644!06CC!062F!06CC!06F1^2C^20!06A9!0644!0645!0647!200C!06CC^20!06A9!0644!06CC!062F!06CC!06F2]!0633!0627!06CC!06A9!0648^3A^20!0642!0627!0644!0628!200C!0633!0627!0632^20!0622!0632!0627!062F],](]!0633!0641!06CC!062F](])]!0622!0628!06CC]!0646!0627!0631!0646!062C!06CC]!0622!0628!06CC^20!062A!06CC!0631!0647],](](]]]black](]3]1]2]3]1]1]3]1]2]3]1]1],](](]^23CCC])])]!0633!0627!06CC!06A9!0648]!0642!0627!0644!0628!200C^20!0648!0628!0644!0627!06AF!200C!062A!0627!0646^20!0631!0627!060C^20!062E!0648!062F!062A!0627!0646^20!0628!0633!0627!0632!06CC!062F^21],](],](](]!0633!06CC!0627!0647](](](]^23666](](](]^23333](],](](]75]20],](](]^23F6F6F6])])]black]1.5]15],](](]^23999])])]black]^23CCC])])]^23666]30]black]black],](](]^23333](],](]^23333]^23039]^2306C],](](]^23CCC])])],](](]^23EEE])])],](](]^23CCC])])],](]black]^23666]15]3]25]20]black],](](],](],](](](],]black](](](],](](](],]black](](](](](],]^23333](](](](](],]^2336F]^23333](],](]!0646!0648!0634!062A!0647^20!0634!062F!0647^20!062F!0631^20^21!0632!0645!0627!0646^20!062A!0648!0633!0637^20^21!0646!0648!06CC!0633.]20],](](]black])])]^23CCC])])]^23666]30]black]black],](](]^23333](],](]^23333]^23039]^2306C]]]]!062E!0627!0646!0647]^24HOME]!0635!0641!062D!0647^20!0627!0635!0644!06CC]!0627!06CC!0645!06CC!0644]^24EMAIL]!062A!0645!0627!0633^20!0628!0627^20!0645!0646]RSS]^24RSS]RSS^20Feed]!0622!0631!0634!06CC!0648]]]^24ARCHIVE]^20]]!062F!0648!0633!062A!0627!0646]]]Horm])blog.horm.org]Hallucinations^20Of^20Reabsorbed^20Mind]Phorm])p.horm.org]Another^20Phormation]!063A!06CC!0631!0647]]]^3Cimg^20src^3D^22)psyc.horm.org/barimg/bar_psycho.png^22^20width^3D^2280^22^20height^3D^2215^22^20style^3D^22border^3A^200px^20solid^20black^22^20/^3E]^24PSYCHO]!0633!0627!06CC!06A9!0648^3A^20!0642!0627!0644!0628^20!0633!0627!0632^20!0622!0632!0627!062F]^3Cimg^20src^3D^22)psyc.horm.org/barimg/bar_firefox.png^22^20width^3D^2280^22^20height^3D^2215^22^20style^3D^22border^3A^200px^20solid^20black^22^20/^3E])www.mozilla.org/products/firefox/]Get^20Firefox^21]^3Cimg^20src^3D^22)psyc.horm.org/barimg/bar_xhtml.png^22^20width^3D^2280^22^20height^3D^2215^22^20style^3D^22border^3A^200px^20solid^20black^22^20/^3E])validator.w3.org/check/referer]XHTML^20Validator^26^2361470^3BPsycHo}'); else s = confixWrapper("infix", "s = '{100blogger]720px]90^25]repeat]scroll]top^20center]solid]1px]Tahoma^2C^20sans-serif]5em]1.75em]solid]1px]30px]40px]5px]solid]1px]solid]1px]_L_DefaultDivBackIsColorEr]solid]1px]solid]1px]Tahoma^2C^20sans-serif]150^25]1em]1em]Tahoma^2C^20sans-serif]solid]1px]solid]1px]Tahoma^2C^20sans-serif]1em]1em]1em]150^25]1em]1em]_R_DefaultDivBackIsColorEr]solid]1px]solid]1px]Tahoma^2C^20sans-serif]150^25]1em]1em]4]4]]keyword1^2C^20keyword2^2C^20keyword3]PsycHo^3A^20Free^20Template^20Generator],](]white](])]blue]coral]navy],](](]]]black](]3]1]2]3]1]1]3]1]2]3]1]1],](](]^23CCC])])]PsycHo]Your^20own^20psychogenesis^2C^20Your^20own^20template^21],](],](](]black](](](]^23666](](](]^23333](](],](]75]20],](](]^23F6F6F6])])]black]1.5]15],](](]^23999])])]black]^23CCC])])]^23666]30]black]black],](](]^23333](],](]^23333]^23039]^2306C],](](]^23CCC])])],](](]^23EEE])])],](](]^23CCC])])],](]black]^23666]15]3]25]20]black],](](],](],](](],](]black](](](],](](](],]black](](](],](](]^23333](](](](](],]^2336F]^23333](],](]Written^20at^20^24TIME^20by^20^24AUTH.]20],](](]black])])]^23CCC])])]^23666]30]black]black],](](]^23333](],](]^23333]^23039]^2306C]]]]Home]^24HOME]First^20Page]Email]^24EMAIL]Mail^20me^21]RSS]^24RSS]RSS^20Feed]Archive]]]^24ARCHIVE]^20]]Friends]]]Horm])blog.horm.org]Hallucinations^20Of^20Reabsorbed^20Mind]Phorm])p.horm.org]Another^20Phormation]Etc]]]^3Cimg^20src^3D^22)psyc.horm.org/barimg/bar_psycho.png^22^20width^3D^2280^22^20height^3D^2215^22^20style^3D^22border^3A^200px^20solid^20black^22^20/^3E]^24PSYCHO]PsycHo^3A^20Free^20Template^20Generator]^3Cimg^20src^3D^22)psyc.horm.org/barimg/bar_firefox.png^22^20width^3D^2280^22^20height^3D^2215^22^20style^3D^22border^3A^200px^20solid^20black^22^20/^3E])www.mozilla.org/products/firefox/]Get^20Firefox^21]^3Cimg^20src^3D^22)psyc.horm.org/barimg/bar_xhtml.png^22^20width^3D^2280^22^20height^3D^2215^22^20style^3D^22border^3A^200px^20solid^20black^22^20/^3E])validator.w3.org/check/referer]XHTML^20Validator^26^2361470^3BPsycHo}'", [""], [], "PsycHodramaDefaultString", '{100blogger]720px]90^25]repeat]scroll]top^20center]solid]1px]Tahoma^2C^20sans-serif]5em]1.75em]solid]1px]30px]40px]5px]solid]1px]solid]1px]_L_DefaultDivBackIsColorEr]solid]1px]solid]1px]Tahoma^2C^20sans-serif]150^25]1em]1em]Tahoma^2C^20sans-serif]solid]1px]solid]1px]Tahoma^2C^20sans-serif]1em]1em]1em]150^25]1em]1em]_R_DefaultDivBackIsColorEr]solid]1px]solid]1px]Tahoma^2C^20sans-serif]150^25]1em]1em]4]4]]keyword1^2C^20keyword2^2C^20keyword3]PsycHo^3A^20Free^20Template^20Generator],](]white](])]blue]coral]navy],](](]]]black](]3]1]2]3]1]1]3]1]2]3]1]1],](](]^23CCC])])]PsycHo]Your^20own^20psychogenesis^2C^20Your^20own^20template^21],](],](](]black](](](]^23666](](](]^23333](](],](]75]20],](](]^23F6F6F6])])]black]1.5]15],](](]^23999])])]black]^23CCC])])]^23666]30]black]black],](](]^23333](],](]^23333]^23039]^2306C],](](]^23CCC])])],](](]^23EEE])])],](](]^23CCC])])],](]black]^23666]15]3]25]20]black],](](],](],](](],](]black](](](],](](](],]black](](](],](](]^23333](](](](](],]^2336F]^23333](],](]Written^20at^20^24TIME^20by^20^24AUTH.]20],](](]black])])]^23CCC])])]^23666]30]black]black],](](]^23333](],](]^23333]^23039]^2306C]]]]Home]^24HOME]First^20Page]Email]^24EMAIL]Mail^20me^21]RSS]^24RSS]RSS^20Feed]Archive]]]^24ARCHIVE]^20]]Friends]]]Horm])blog.horm.org]Hallucinations^20Of^20Reabsorbed^20Mind]Phorm])p.horm.org]Another^20Phormation]Etc]]]^3Cimg^20src^3D^22)psyc.horm.org/barimg/bar_psycho.png^22^20width^3D^2280^22^20height^3D^2215^22^20style^3D^22border^3A^200px^20solid^20black^22^20/^3E]^24PSYCHO]PsycHo^3A^20Free^20Template^20Generator]^3Cimg^20src^3D^22)psyc.horm.org/barimg/bar_firefox.png^22^20width^3D^2280^22^20height^3D^2215^22^20style^3D^22border^3A^200px^20solid^20black^22^20/^3E])www.mozilla.org/products/firefox/]Get^20Firefox^21]^3Cimg^20src^3D^22)psyc.horm.org/barimg/bar_xhtml.png^22^20width^3D^2280^22^20height^3D^2215^22^20style^3D^22border^3A^200px^20solid^20black^22^20/^3E])validator.w3.org/check/referer]XHTML^20Validator^26^2361470^3BPsycHo}');
  return confixWrapper("return", "return s;", [""], [], "PsycHodramaDefaultString", s);
}
function ResetPsycHodrama() {
  confixWrapper("functionCall", "ReadPsycHodrama(PsycHodramaDefaultString())", ["PsycHodramaDefaultString()"], [confixWrapper("functionCall", "PsycHodramaDefaultString()", [], [], "ResetPsycHodrama", PsycHodramaDefaultString())], "ResetPsycHodrama", ReadPsycHodrama(confixWrapper("functionCall", "PsycHodramaDefaultString()", [], [], "ResetPsycHodrama", PsycHodramaDefaultString())));
}
function deBugify(s) {
  confixWrapper("functionCall", "dg('jj')", ["jj"], ['jj'], "deBugify", dg('jj')).innerHTML = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('jj')\", [\"jj\"], ['jj'], \"deBugify\", dg('jj')).innerHTML = (s) + '<br />' + confixWrapper(\"functionCall\", \"dg('jj')\", [\"jj\"], ['jj'], \"deBugify\", dg('jj')).innerHTML", ["(s) + '<br />' + confixWrapper(\"functionCall\", \"dg('jj')\", [\"jj\"], ['jj'], \"deBugify\", dg('jj'))"], [(s) + '<br />' + confixWrapper("functionCall", "dg('jj')", ["jj"], ['jj'], "deBugify", dg('jj'))], "deBugify", (s) + '<br />' + confixWrapper("functionCall", "dg('jj')", ["jj"], ['jj'], "deBugify", dg('jj')).innerHTML);
}
function TakeEffectAll(s) {
  global_isTakingEffectAll = confixWrapper("infix", "global_isTakingEffectAll = true", [""], [], "TakeEffectAll", true);
  var d1 = confixWrapper("initvar", "var d1 = new Date()", [""], [], "TakeEffectAll", new Date());
  var v1 = confixWrapper("initvar", "var v1 = (confixWrapper(\"functionCall\", \"d1.getMinutes()\", [], [], \"TakeEffectAll\", d1.getMinutes()) * 60 * 1000 + confixWrapper(\"functionCall\", \"d1.getSeconds()\", [], [], \"TakeEffectAll\", d1.getSeconds()) * 1000 + d1.getMilliseconds())", [""], [], "TakeEffectAll", (confixWrapper("functionCall", "d1.getMinutes()", [], [], "TakeEffectAll", d1.getMinutes()) * 60 * 1000 + confixWrapper("functionCall", "d1.getSeconds()", [], [], "TakeEffectAll", d1.getSeconds()) * 1000 + d1.getMilliseconds()));
  if (confixWrapper("condition", "s", ["s", "d1", "v1", "sc", "objs", "i", "d3", "v3", "sides", "t", "bs", "ls", "j", "d2", "v2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, d1, v1, sc, objs, i, d3, v3, sides, t, bs, ls, j, d2, v2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "TakeEffectAll", s)) 
  s = confixWrapper("infix", "s = confixWrapper(\"functionCall\", \"s.split(drama_splitter)\", [\"drama_splitter\"], [drama_splitter], \"TakeEffectAll\", s.split(drama_splitter))", [""], [], "TakeEffectAll", confixWrapper("functionCall", "s.split(drama_splitter)", ["drama_splitter"], [drama_splitter], "TakeEffectAll", s.split(drama_splitter)));
  var sc = confixWrapper("initvar", "var sc = 0", [""], [], "TakeEffectAll", 0);
  var objs = confixWrapper("initvar", "var objs = confixWrapper(\"functionCall\", \"document.getElementsByTagName('select')\", [\"select\"], ['select'], \"TakeEffectAll\", document.getElementsByTagName('select'))", [""], [], "TakeEffectAll", confixWrapper("functionCall", "document.getElementsByTagName('select')", ["select"], ['select'], "TakeEffectAll", document.getElementsByTagName('select')));
  for (var i = confixWrapper("initvar", "var i = 0", [""], [], "TakeEffectAll", 0); confixWrapper("loopCondition", "i < objs.length", [""], [], "TakeEffectAll", i < objs.length); i++) 
    {
      if (confixWrapper("condition", "s", ["s", "d1", "v1", "sc", "objs", "i", "d3", "v3", "sides", "t", "bs", "ls", "j", "d2", "v2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, d1, v1, sc, objs, i, d3, v3, sides, t, bs, ls, j, d2, v2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "TakeEffectAll", s)) 
      objs[i].value = confixWrapper("infix", "objs[i].value = s[sc++]", [""], [], "TakeEffectAll", s[sc++]);
      confixWrapper("functionCall", "doDuty(objs[i])", ["objs[i]"], [objs[i]], "TakeEffectAll", doDuty(objs[i]));
    }
  objs = confixWrapper("infix", "objs = confixWrapper(\"functionCall\", \"document.getElementsByTagName('input')\", [\"input\"], ['input'], \"TakeEffectAll\", document.getElementsByTagName('input'))", [""], [], "TakeEffectAll", confixWrapper("functionCall", "document.getElementsByTagName('input')", ["input"], ['input'], "TakeEffectAll", document.getElementsByTagName('input')));
  for (var i = confixWrapper("initvar", "var i = 0", [""], [], "TakeEffectAll", 0); confixWrapper("loopCondition", "i < objs.length", [""], [], "TakeEffectAll", i < objs.length); i++) 
    {
      if (confixWrapper("condition", "(confixWrapper(\"functionCall\", \"objs[i].getAttribute('type')\", [\"type\"], ['type'], \"TakeEffectAll\", objs[i].getAttribute('type')) == 'radio') || (confixWrapper(\"functionCall\", \"objs[i].getAttribute('type')\", [\"type\"], ['type'], \"TakeEffectAll\", objs[i].getAttribute('type')) == 'checkbox')", ["s", "d1", "v1", "sc", "objs", "i", "d3", "v3", "sides", "t", "bs", "ls", "j", "d2", "v2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, d1, v1, sc, objs, i, d3, v3, sides, t, bs, ls, j, d2, v2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "TakeEffectAll", (confixWrapper("functionCall", "objs[i].getAttribute('type')", ["type"], ['type'], "TakeEffectAll", objs[i].getAttribute('type')) == 'radio') || (confixWrapper("functionCall", "objs[i].getAttribute('type')", ["type"], ['type'], "TakeEffectAll", objs[i].getAttribute('type')) == 'checkbox'))) 
      {
        if (confixWrapper("condition", "s", ["s", "d1", "v1", "sc", "objs", "i", "d3", "v3", "sides", "t", "bs", "ls", "j", "d2", "v2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, d1, v1, sc, objs, i, d3, v3, sides, t, bs, ls, j, d2, v2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "TakeEffectAll", s)) 
        objs[i].checked = confixWrapper("infix", "objs[i].checked = (s[sc++] == 'true')", [""], [], "TakeEffectAll", (s[sc++] == 'true'));
        if (confixWrapper("condition", "objs[i].checked && confixWrapper(\"functionCall\", \"objs[i].id.substring(0, 12)\", [\"0\", \"12\"], [0, 12], \"TakeEffectAll\", objs[i].id.substring(0, 12)) == 'ColsNumberIs'", ["s", "d1", "v1", "sc", "objs", "i", "d3", "v3", "sides", "t", "bs", "ls", "j", "d2", "v2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, d1, v1, sc, objs, i, d3, v3, sides, t, bs, ls, j, d2, v2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "TakeEffectAll", objs[i].checked && confixWrapper("functionCall", "objs[i].id.substring(0, 12)", ["0", "12"], [0, 12], "TakeEffectAll", objs[i].id.substring(0, 12)) == 'ColsNumberIs')) 
        confixWrapper("functionCall", "doDuty(objs[i])", ["objs[i]"], [objs[i]], "TakeEffectAll", doDuty(objs[i]));
      } else {
        if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"isDumpLinky(objs[i].id)\", [\"objs[i].id\"], [objs[i].id], \"TakeEffectAll\", isDumpLinky(objs[i].id))", ["s", "d1", "v1", "sc", "objs", "i", "d3", "v3", "sides", "t", "bs", "ls", "j", "d2", "v2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, d1, v1, sc, objs, i, d3, v3, sides, t, bs, ls, j, d2, v2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "TakeEffectAll", !confixWrapper("functionCall", "isDumpLinky(objs[i].id)", ["objs[i].id"], [objs[i].id], "TakeEffectAll", isDumpLinky(objs[i].id)))) 
        {
          if (confixWrapper("condition", "s", ["s", "d1", "v1", "sc", "objs", "i", "d3", "v3", "sides", "t", "bs", "ls", "j", "d2", "v2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, d1, v1, sc, objs, i, d3, v3, sides, t, bs, ls, j, d2, v2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "TakeEffectAll", s)) 
          objs[i].value = confixWrapper("infix", "objs[i].value = s[sc++]", [""], [], "TakeEffectAll", s[sc++]);
          confixWrapper("functionCall", "doDuty(objs[i])", ["objs[i]"], [objs[i]], "TakeEffectAll", doDuty(objs[i]));
        }
      }
    }
  objs = confixWrapper("infix", "objs = confixWrapper(\"functionCall\", \"document.getElementsByTagName('input')\", [\"input\"], ['input'], \"TakeEffectAll\", document.getElementsByTagName('input'))", [""], [], "TakeEffectAll", confixWrapper("functionCall", "document.getElementsByTagName('input')", ["input"], ['input'], "TakeEffectAll", document.getElementsByTagName('input')));
  for (var i = confixWrapper("initvar", "var i = 0", [""], [], "TakeEffectAll", 0); confixWrapper("loopCondition", "i < objs.length", [""], [], "TakeEffectAll", i < objs.length); i++) 
    {
      if (confixWrapper("condition", "(confixWrapper(\"functionCall\", \"objs[i].getAttribute('type')\", [\"type\"], ['type'], \"TakeEffectAll\", objs[i].getAttribute('type')) == 'radio') || (confixWrapper(\"functionCall\", \"objs[i].getAttribute('type')\", [\"type\"], ['type'], \"TakeEffectAll\", objs[i].getAttribute('type')) == 'checkbox')", ["s", "d1", "v1", "sc", "objs", "i", "d3", "v3", "sides", "t", "bs", "ls", "j", "d2", "v2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, d1, v1, sc, objs, i, d3, v3, sides, t, bs, ls, j, d2, v2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "TakeEffectAll", (confixWrapper("functionCall", "objs[i].getAttribute('type')", ["type"], ['type'], "TakeEffectAll", objs[i].getAttribute('type')) == 'radio') || (confixWrapper("functionCall", "objs[i].getAttribute('type')", ["type"], ['type'], "TakeEffectAll", objs[i].getAttribute('type')) == 'checkbox'))) 
      {
        if (confixWrapper("condition", "objs[i].checked && confixWrapper(\"functionCall\", \"objs[i].id.substring(0, 12)\", [\"0\", \"12\"], [0, 12], \"TakeEffectAll\", objs[i].id.substring(0, 12)) != 'ColsNumberIs'", ["s", "d1", "v1", "sc", "objs", "i", "d3", "v3", "sides", "t", "bs", "ls", "j", "d2", "v2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, d1, v1, sc, objs, i, d3, v3, sides, t, bs, ls, j, d2, v2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "TakeEffectAll", objs[i].checked && confixWrapper("functionCall", "objs[i].id.substring(0, 12)", ["0", "12"], [0, 12], "TakeEffectAll", objs[i].id.substring(0, 12)) != 'ColsNumberIs')) 
        confixWrapper("functionCall", "doDuty(objs[i])", ["objs[i]"], [objs[i]], "TakeEffectAll", doDuty(objs[i]));
      }
    }
  var d3 = confixWrapper("initvar", "var d3 = new Date()", [""], [], "TakeEffectAll", new Date());
  var v3 = confixWrapper("initvar", "var v3 = (confixWrapper(\"functionCall\", \"d3.getMinutes()\", [], [], \"TakeEffectAll\", d3.getMinutes()) * 60 * 1000 + confixWrapper(\"functionCall\", \"d3.getSeconds()\", [], [], \"TakeEffectAll\", d3.getSeconds()) * 1000 + d3.getMilliseconds())", [""], [], "TakeEffectAll", (confixWrapper("functionCall", "d3.getMinutes()", [], [], "TakeEffectAll", d3.getMinutes()) * 60 * 1000 + confixWrapper("functionCall", "d3.getSeconds()", [], [], "TakeEffectAll", d3.getSeconds()) * 1000 + d3.getMilliseconds()));
  var sides = confixWrapper("initvar", "var sides = new Array('R', 'L')", [""], [], "TakeEffectAll", new Array('R', 'L'));
  for (var t = confixWrapper("initvar", "var t = 0", [""], [], "TakeEffectAll", 0); confixWrapper("loopCondition", "t < 2", [""], [], "TakeEffectAll", t < 2); t++) 
    {
      if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"dg('Side' + sides[t] + 'Column')\", [\"Side + sides[t] + Column\"], ['Side' + sides[t] + 'Column'], \"TakeEffectAll\", dg('Side' + sides[t] + 'Column')).style.display == 'none'", ["s", "d1", "v1", "sc", "objs", "i", "d3", "v3", "sides", "t", "bs", "ls", "j", "d2", "v2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, d1, v1, sc, objs, i, d3, v3, sides, t, bs, ls, j, d2, v2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "TakeEffectAll", confixWrapper("functionCall", "dg('Side' + sides[t] + 'Column')", ["Side + sides[t] + Column"], ['Side' + sides[t] + 'Column'], "TakeEffectAll", dg('Side' + sides[t] + 'Column')).style.display == 'none')) 
      continue;
      var bs = confixWrapper("initvar", "var bs = confixWrapper(\"functionCall\", \"dg('_' + sides[t] + '_boxNumForce')\", [\"_ + sides[t] + _boxNumForce\"], ['_' + sides[t] + '_boxNumForce'], \"TakeEffectAll\", dg('_' + sides[t] + '_boxNumForce')).value", [""], [], "TakeEffectAll", confixWrapper("functionCall", "dg('_' + sides[t] + '_boxNumForce')", ["_ + sides[t] + _boxNumForce"], ['_' + sides[t] + '_boxNumForce'], "TakeEffectAll", dg('_' + sides[t] + '_boxNumForce')).value);
      for (var i = confixWrapper("initvar", "var i = 0", [""], [], "TakeEffectAll", 0); confixWrapper("loopCondition", "i < bs", [""], [], "TakeEffectAll", i < bs); i++) 
        {
          if (confixWrapper("condition", "s", ["s", "d1", "v1", "sc", "objs", "i", "d3", "v3", "sides", "t", "bs", "ls", "j", "d2", "v2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, d1, v1, sc, objs, i, d3, v3, sides, t, bs, ls, j, d2, v2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "TakeEffectAll", s)) 
          {
            confixWrapper("functionCall", "SetValAndDo('_' + sides[t] + '_TitleTxt_' + i, s[sc++], true)", ["_ + sides[t] + _TitleTxt_ + i", "s[sc++]", "true"], ['_' + sides[t] + '_TitleTxt_' + i, s[sc++], true], "TakeEffectAll", SetValAndDo('_' + sides[t] + '_TitleTxt_' + i, s[sc++], true));
            confixWrapper("functionCall", "SetValAndDo('_' + sides[t] + '_PreSurr_' + i, s[sc++], true)", ["_ + sides[t] + _PreSurr_ + i", "s[sc++]", "true"], ['_' + sides[t] + '_PreSurr_' + i, s[sc++], true], "TakeEffectAll", SetValAndDo('_' + sides[t] + '_PreSurr_' + i, s[sc++], true));
            confixWrapper("functionCall", "SetValAndDo('_' + sides[t] + '_PstSurr_' + i, s[sc++], true)", ["_ + sides[t] + _PstSurr_ + i", "s[sc++]", "true"], ['_' + sides[t] + '_PstSurr_' + i, s[sc++], true], "TakeEffectAll", SetValAndDo('_' + sides[t] + '_PstSurr_' + i, s[sc++], true));
          } else {
            confixWrapper("functionCall", "doDuty(dg('_' + sides[t] + '_TitleTxt_' + i))", ["dg(_ + sides[t] + _TitleTxt_ + i)"], [confixWrapper("functionCall", "dg('_' + sides[t] + '_TitleTxt_' + i)", ["_ + sides[t] + _TitleTxt_ + i"], ['_' + sides[t] + '_TitleTxt_' + i], "TakeEffectAll", dg('_' + sides[t] + '_TitleTxt_' + i))], "TakeEffectAll", doDuty(confixWrapper("functionCall", "dg('_' + sides[t] + '_TitleTxt_' + i)", ["_ + sides[t] + _TitleTxt_ + i"], ['_' + sides[t] + '_TitleTxt_' + i], "TakeEffectAll", dg('_' + sides[t] + '_TitleTxt_' + i))));
            confixWrapper("functionCall", "doDuty(dg('_' + sides[t] + '_PreSurr_' + i))", ["dg(_ + sides[t] + _PreSurr_ + i)"], [confixWrapper("functionCall", "dg('_' + sides[t] + '_PreSurr_' + i)", ["_ + sides[t] + _PreSurr_ + i"], ['_' + sides[t] + '_PreSurr_' + i], "TakeEffectAll", dg('_' + sides[t] + '_PreSurr_' + i))], "TakeEffectAll", doDuty(confixWrapper("functionCall", "dg('_' + sides[t] + '_PreSurr_' + i)", ["_ + sides[t] + _PreSurr_ + i"], ['_' + sides[t] + '_PreSurr_' + i], "TakeEffectAll", dg('_' + sides[t] + '_PreSurr_' + i))));
            confixWrapper("functionCall", "doDuty(dg('_' + sides[t] + '_PstSurr_' + i))", ["dg(_ + sides[t] + _PstSurr_ + i)"], [confixWrapper("functionCall", "dg('_' + sides[t] + '_PstSurr_' + i)", ["_ + sides[t] + _PstSurr_ + i"], ['_' + sides[t] + '_PstSurr_' + i], "TakeEffectAll", dg('_' + sides[t] + '_PstSurr_' + i))], "TakeEffectAll", doDuty(confixWrapper("functionCall", "dg('_' + sides[t] + '_PstSurr_' + i)", ["_ + sides[t] + _PstSurr_ + i"], ['_' + sides[t] + '_PstSurr_' + i], "TakeEffectAll", dg('_' + sides[t] + '_PstSurr_' + i))));
          }
          var ls = confixWrapper("initvar", "var ls = confixWrapper(\"functionCall\", \"dg('_' + sides[t] + '_linkNumForce_' + i)\", [\"_ + sides[t] + _linkNumForce_ + i\"], ['_' + sides[t] + '_linkNumForce_' + i], \"TakeEffectAll\", dg('_' + sides[t] + '_linkNumForce_' + i)).value", [""], [], "TakeEffectAll", confixWrapper("functionCall", "dg('_' + sides[t] + '_linkNumForce_' + i)", ["_ + sides[t] + _linkNumForce_ + i"], ['_' + sides[t] + '_linkNumForce_' + i], "TakeEffectAll", dg('_' + sides[t] + '_linkNumForce_' + i)).value);
          for (var j = confixWrapper("initvar", "var j = 0", [""], [], "TakeEffectAll", 0); confixWrapper("loopCondition", "j < ls", [""], [], "TakeEffectAll", j < ls); j++) 
            {
              if (confixWrapper("condition", "s", ["s", "d1", "v1", "sc", "objs", "i", "d3", "v3", "sides", "t", "bs", "ls", "j", "d2", "v2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [s, d1, v1, sc, objs, i, d3, v3, sides, t, bs, ls, j, d2, v2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "TakeEffectAll", s)) 
              {
                confixWrapper("functionCall", "SetValAndDo('_' + sides[t] + '_LinkTxt_' + i + '_' + j, s[sc++], true)", ["_ + sides[t] + _LinkTxt_ + i + _ + j", "s[sc++]", "true"], ['_' + sides[t] + '_LinkTxt_' + i + '_' + j, s[sc++], true], "TakeEffectAll", SetValAndDo('_' + sides[t] + '_LinkTxt_' + i + '_' + j, s[sc++], true));
                confixWrapper("functionCall", "SetValAndDo('_' + sides[t] + '_LinkUrl_' + i + '_' + j, s[sc++], true)", ["_ + sides[t] + _LinkUrl_ + i + _ + j", "s[sc++]", "true"], ['_' + sides[t] + '_LinkUrl_' + i + '_' + j, s[sc++], true], "TakeEffectAll", SetValAndDo('_' + sides[t] + '_LinkUrl_' + i + '_' + j, s[sc++], true));
                confixWrapper("functionCall", "SetValAndDo('_' + sides[t] + '_LinkTtl_' + i + '_' + j, s[sc++], true)", ["_ + sides[t] + _LinkTtl_ + i + _ + j", "s[sc++]", "true"], ['_' + sides[t] + '_LinkTtl_' + i + '_' + j, s[sc++], true], "TakeEffectAll", SetValAndDo('_' + sides[t] + '_LinkTtl_' + i + '_' + j, s[sc++], true));
              } else {
                confixWrapper("functionCall", "doDuty(dg('_' + sides[t] + '_LinkTxt_' + i + '_' + j))", ["dg(_ + sides[t] + _LinkTxt_ + i + _ + j)"], [confixWrapper("functionCall", "dg('_' + sides[t] + '_LinkTxt_' + i + '_' + j)", ["_ + sides[t] + _LinkTxt_ + i + _ + j"], ['_' + sides[t] + '_LinkTxt_' + i + '_' + j], "TakeEffectAll", dg('_' + sides[t] + '_LinkTxt_' + i + '_' + j))], "TakeEffectAll", doDuty(confixWrapper("functionCall", "dg('_' + sides[t] + '_LinkTxt_' + i + '_' + j)", ["_ + sides[t] + _LinkTxt_ + i + _ + j"], ['_' + sides[t] + '_LinkTxt_' + i + '_' + j], "TakeEffectAll", dg('_' + sides[t] + '_LinkTxt_' + i + '_' + j))));
                confixWrapper("functionCall", "doDuty(dg('_' + sides[t] + '_LinkUrl_' + i + '_' + j))", ["dg(_ + sides[t] + _LinkUrl_ + i + _ + j)"], [confixWrapper("functionCall", "dg('_' + sides[t] + '_LinkUrl_' + i + '_' + j)", ["_ + sides[t] + _LinkUrl_ + i + _ + j"], ['_' + sides[t] + '_LinkUrl_' + i + '_' + j], "TakeEffectAll", dg('_' + sides[t] + '_LinkUrl_' + i + '_' + j))], "TakeEffectAll", doDuty(confixWrapper("functionCall", "dg('_' + sides[t] + '_LinkUrl_' + i + '_' + j)", ["_ + sides[t] + _LinkUrl_ + i + _ + j"], ['_' + sides[t] + '_LinkUrl_' + i + '_' + j], "TakeEffectAll", dg('_' + sides[t] + '_LinkUrl_' + i + '_' + j))));
                confixWrapper("functionCall", "doDuty(dg('_' + sides[t] + '_LinkTtl_' + i + '_' + j))", ["dg(_ + sides[t] + _LinkTtl_ + i + _ + j)"], [confixWrapper("functionCall", "dg('_' + sides[t] + '_LinkTtl_' + i + '_' + j)", ["_ + sides[t] + _LinkTtl_ + i + _ + j"], ['_' + sides[t] + '_LinkTtl_' + i + '_' + j], "TakeEffectAll", dg('_' + sides[t] + '_LinkTtl_' + i + '_' + j))], "TakeEffectAll", doDuty(confixWrapper("functionCall", "dg('_' + sides[t] + '_LinkTtl_' + i + '_' + j)", ["_ + sides[t] + _LinkTtl_ + i + _ + j"], ['_' + sides[t] + '_LinkTtl_' + i + '_' + j], "TakeEffectAll", dg('_' + sides[t] + '_LinkTtl_' + i + '_' + j))));
              }
            }
        }
    }
  var d2 = confixWrapper("initvar", "var d2 = new Date()", [""], [], "TakeEffectAll", new Date());
  var v2 = confixWrapper("initvar", "var v2 = (confixWrapper(\"functionCall\", \"d2.getMinutes()\", [], [], \"TakeEffectAll\", d2.getMinutes()) * 60 * 1000 + confixWrapper(\"functionCall\", \"d2.getSeconds()\", [], [], \"TakeEffectAll\", d2.getSeconds()) * 1000 + d2.getMilliseconds())", [""], [], "TakeEffectAll", (confixWrapper("functionCall", "d2.getMinutes()", [], [], "TakeEffectAll", d2.getMinutes()) * 60 * 1000 + confixWrapper("functionCall", "d2.getSeconds()", [], [], "TakeEffectAll", d2.getSeconds()) * 1000 + d2.getMilliseconds()));
  global_isTakingEffectAll = confixWrapper("infix", "global_isTakingEffectAll = false", [""], [], "TakeEffectAll", false);
  global_didSomething = confixWrapper("infix", "global_didSomething = false", [""], [], "TakeEffectAll", false);
  return confixWrapper("return", "return true;", [""], [], "TakeEffectAll", true);
}
function isBoxVisible(side, part) {
  return confixWrapper("return", "return (confixWrapper(\"functionCall\", \"dg(side + '_PartDiv_' + part)\", [\"side + _PartDiv_ + part\"], [side + '_PartDiv_' + part], \"isBoxVisible\", dg(side + '_PartDiv_' + part)).style.display != 'none');", [""], [], "isBoxVisible", (confixWrapper("functionCall", "dg(side + '_PartDiv_' + part)", ["side + _PartDiv_ + part"], [side + '_PartDiv_' + part], "isBoxVisible", dg(side + '_PartDiv_' + part)).style.display != 'none'));
}
function isLinkVisible(side, part, num) {
  return confixWrapper("return", "return (confixWrapper(\"functionCall\", \"dg(side + '_LinkBodyContainer_' + part + '_' + num)\", [\"side + _LinkBodyContainer_ + part + _ + num\"], [side + '_LinkBodyContainer_' + part + '_' + num], \"isLinkVisible\", dg(side + '_LinkBodyContainer_' + part + '_' + num)).style.display != 'none');", [""], [], "isLinkVisible", (confixWrapper("functionCall", "dg(side + '_LinkBodyContainer_' + part + '_' + num)", ["side + _LinkBodyContainer_ + part + _ + num"], [side + '_LinkBodyContainer_' + part + '_' + num], "isLinkVisible", dg(side + '_LinkBodyContainer_' + part + '_' + num)).style.display != 'none'));
}
function ReadPsycHodrama(wut) {
  global_canWrite = confixWrapper("infix", "global_canWrite = true", [""], [], "ReadPsycHodrama", true);
  if (confixWrapper("condition", "!wut", ["wut", "invalidStr", "tio", "s", "waitPlz", "loadedSucc", "date", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [wut, invalidStr, tio, s, waitPlz, loadedSucc, date, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ReadPsycHodrama", !wut)) 
  return confixWrapper("return", "return false;", [""], [], "ReadPsycHodrama", false);
  global_canWrite = confixWrapper("infix", "global_canWrite = false", [""], [], "ReadPsycHodrama", false);
  var invalidStr = confixWrapper("initvar", "var invalidStr = 'Invalid PsycHodrama. do you want to Reset PsycHodrama?'", [""], [], "ReadPsycHodrama", 'Invalid PsycHodrama. do you want to Reset PsycHodrama?');
  if (confixWrapper("condition", "global_lang == 'fa'", ["wut", "invalidStr", "tio", "s", "waitPlz", "loadedSucc", "date", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [wut, invalidStr, tio, s, waitPlz, loadedSucc, date, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ReadPsycHodrama", global_lang == 'fa')) 
  invalidStr = confixWrapper("infix", "invalidStr = confixWrapper(\"functionCall\", \"translateIt('invalid drama')\", [\"invalid drama\"], ['invalid drama'], \"ReadPsycHodrama\", translateIt('invalid drama'))", [""], [], "ReadPsycHodrama", confixWrapper("functionCall", "translateIt('invalid drama')", ["invalid drama"], ['invalid drama'], "ReadPsycHodrama", translateIt('invalid drama')));
  var tio = confixWrapper("initvar", "var tio = confixWrapper(\"functionCall\", \"wut.indexOf('PsycHodrama=')\", [\"PsycHodrama=\"], ['PsycHodrama='], \"ReadPsycHodrama\", wut.indexOf('PsycHodrama='))", [""], [], "ReadPsycHodrama", confixWrapper("functionCall", "wut.indexOf('PsycHodrama=')", ["PsycHodrama="], ['PsycHodrama='], "ReadPsycHodrama", wut.indexOf('PsycHodrama=')));
  if (confixWrapper("condition", "tio != -1", ["wut", "invalidStr", "tio", "s", "waitPlz", "loadedSucc", "date", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [wut, invalidStr, tio, s, waitPlz, loadedSucc, date, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ReadPsycHodrama", tio != -1)) 
  wut = confixWrapper("infix", "wut = confixWrapper(\"functionCall\", \"wut.substr(tio + 12, wut.length)\", [\"tio + 12\", \"wut.length\"], [tio + 12, wut.length], \"ReadPsycHodrama\", wut.substr(tio + 12, wut.length))", [""], [], "ReadPsycHodrama", confixWrapper("functionCall", "wut.substr(tio + 12, wut.length)", ["tio + 12", "wut.length"], [tio + 12, wut.length], "ReadPsycHodrama", wut.substr(tio + 12, wut.length)));
  var s = confixWrapper("initvar", "var s = wut", [""], [], "ReadPsycHodrama", wut);
  if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"s.charAt(0)\", [\"0\"], [0], \"ReadPsycHodrama\", s.charAt(0)) != '{' || confixWrapper(\"functionCall\", \"s.substring(s.length - 7, s.length)\", [\"s.length - 7\", \"s.length\"], [s.length - 7, s.length], \"ReadPsycHodrama\", s.substring(s.length - 7, s.length)) != 'PsycHo}'", ["wut", "invalidStr", "tio", "s", "waitPlz", "loadedSucc", "date", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [wut, invalidStr, tio, s, waitPlz, loadedSucc, date, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ReadPsycHodrama", confixWrapper("functionCall", "s.charAt(0)", ["0"], [0], "ReadPsycHodrama", s.charAt(0)) != '{' || confixWrapper("functionCall", "s.substring(s.length - 7, s.length)", ["s.length - 7", "s.length"], [s.length - 7, s.length], "ReadPsycHodrama", s.substring(s.length - 7, s.length)) != 'PsycHo}')) 
  {
    if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"confirm(invalidStr)\", [\"invalidStr\"], [invalidStr], \"ReadPsycHodrama\", confirm(invalidStr))", ["wut", "invalidStr", "tio", "s", "waitPlz", "loadedSucc", "date", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [wut, invalidStr, tio, s, waitPlz, loadedSucc, date, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ReadPsycHodrama", confixWrapper("functionCall", "confirm(invalidStr)", ["invalidStr"], [invalidStr], "ReadPsycHodrama", confirm(invalidStr)))) 
    {
      confixWrapper("functionCall", "ResetPsycHodrama()", [], [], "ReadPsycHodrama", ResetPsycHodrama());
      return confixWrapper("return", "return true;", [""], [], "ReadPsycHodrama", true);
    } else return confixWrapper("return", "return false;", [""], [], "ReadPsycHodrama", false);
  }
  var waitPlz = confixWrapper("initvar", "var waitPlz = 'Depending on your browser and PsycHodrama, this operation may take up to 2 minutes. Do you want to continue?'", [""], [], "ReadPsycHodrama", 'Depending on your browser and PsycHodrama, this operation may take up to 2 minutes. Do you want to continue?');
  if (confixWrapper("condition", "global_lang == 'fa'", ["wut", "invalidStr", "tio", "s", "waitPlz", "loadedSucc", "date", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [wut, invalidStr, tio, s, waitPlz, loadedSucc, date, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ReadPsycHodrama", global_lang == 'fa')) 
  waitPlz = confixWrapper("infix", "waitPlz = confixWrapper(\"functionCall\", \"translateIt('wait 2 minutes')\", [\"wait 2 minutes\"], ['wait 2 minutes'], \"ReadPsycHodrama\", translateIt('wait 2 minutes'))", [""], [], "ReadPsycHodrama", confixWrapper("functionCall", "translateIt('wait 2 minutes')", ["wait 2 minutes"], ['wait 2 minutes'], "ReadPsycHodrama", translateIt('wait 2 minutes')));
  if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"confirm(waitPlz)\", [\"waitPlz\"], [waitPlz], \"ReadPsycHodrama\", confirm(waitPlz))", ["wut", "invalidStr", "tio", "s", "waitPlz", "loadedSucc", "date", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [wut, invalidStr, tio, s, waitPlz, loadedSucc, date, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ReadPsycHodrama", !confixWrapper("functionCall", "confirm(waitPlz)", ["waitPlz"], [waitPlz], "ReadPsycHodrama", confirm(waitPlz)))) 
  {
    global_canWrite = confixWrapper("infix", "global_canWrite = true", [""], [], "ReadPsycHodrama", true);
    return confixWrapper("return", "return false;", [""], [], "ReadPsycHodrama", false);
  }
  s = confixWrapper("infix", "s = confixWrapper(\"functionCall\", \"EXT_decodeTxt(s.substring(4, s.length - 7))\", [\"s.substring(4, s.length - 7)\"], [confixWrapper(\"functionCall\", \"s.substring(4, s.length - 7)\", [\"4\", \"s.length - 7\"], [4, s.length - 7], \"ReadPsycHodrama\", s.substring(4, s.length - 7))], \"ReadPsycHodrama\", EXT_decodeTxt(confixWrapper(\"functionCall\", \"s.substring(4, s.length - 7)\", [\"4\", \"s.length - 7\"], [4, s.length - 7], \"ReadPsycHodrama\", s.substring(4, s.length - 7))))", [""], [], "ReadPsycHodrama", confixWrapper("functionCall", "EXT_decodeTxt(s.substring(4, s.length - 7))", ["s.substring(4, s.length - 7)"], [confixWrapper("functionCall", "s.substring(4, s.length - 7)", ["4", "s.length - 7"], [4, s.length - 7], "ReadPsycHodrama", s.substring(4, s.length - 7))], "ReadPsycHodrama", EXT_decodeTxt(confixWrapper("functionCall", "s.substring(4, s.length - 7)", ["4", "s.length - 7"], [4, s.length - 7], "ReadPsycHodrama", s.substring(4, s.length - 7)))));
  confixWrapper("functionCall", "TakeEffectAll(s)", ["s"], [s], "ReadPsycHodrama", TakeEffectAll(s));
  var loadedSucc = confixWrapper("initvar", "var loadedSucc = 'PsycHodrama Loaded Successfully.'", [""], [], "ReadPsycHodrama", 'PsycHodrama Loaded Successfully.');
  if (confixWrapper("condition", "global_lang == 'fa'", ["wut", "invalidStr", "tio", "s", "waitPlz", "loadedSucc", "date", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [wut, invalidStr, tio, s, waitPlz, loadedSucc, date, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ReadPsycHodrama", global_lang == 'fa')) 
  loadedSucc = confixWrapper("infix", "loadedSucc = confixWrapper(\"functionCall\", \"translateIt('drama loaded')\", [\"drama loaded\"], ['drama loaded'], \"ReadPsycHodrama\", translateIt('drama loaded'))", [""], [], "ReadPsycHodrama", confixWrapper("functionCall", "translateIt('drama loaded')", ["drama loaded"], ['drama loaded'], "ReadPsycHodrama", translateIt('drama loaded')));
  confixWrapper("functionCall", "alert(loadedSucc)", ["loadedSucc"], [loadedSucc], "ReadPsycHodrama", alert(loadedSucc));
  var date = confixWrapper("initvar", "var date = new Date()", [""], [], "ReadPsycHodrama", new Date());
  confixWrapper("functionCall", "date.setTime(date.getTime() + (365 * 24 * 60 * 60 * 1000))", ["date.getTime() + (365 * 24 * 60 * 60 * 1000)"], [confixWrapper("functionCall", "date.getTime()", [], [], "ReadPsycHodrama", date.getTime()) + (365 * 24 * 60 * 60 * 1000)], "ReadPsycHodrama", date.setTime(confixWrapper("functionCall", "date.getTime()", [], [], "ReadPsycHodrama", date.getTime()) + (365 * 24 * 60 * 60 * 1000)));
  document.cookie = confixWrapper("infix", "document.cookie = \"PsycHodrama=\" + wut + \"; expires=\" + confixWrapper(\"functionCall\", \"date.toGMTString()\", [], [], \"ReadPsycHodrama\", date.toGMTString()) + \"; path=/\"", [""], [], "ReadPsycHodrama", "PsycHodrama=" + wut + "; expires=" + confixWrapper("functionCall", "date.toGMTString()", [], [], "ReadPsycHodrama", date.toGMTString()) + "; path=/");
  global_canWrite = confixWrapper("infix", "global_canWrite = true", [""], [], "ReadPsycHodrama", true);
  return confixWrapper("return", "return true;", [""], [], "ReadPsycHodrama", true);
  global_didSomething = confixWrapper("infix", "global_didSomething = false", [""], [], "ReadPsycHodrama", false);
}
function HighLight(s) {
  try {
    confixWrapper("functionCall", "s.focus()", [], [], "HighLight", s.focus());
    confixWrapper("functionCall", "s.select()", [], [], "HighLight", s.select());
  }  catch (e) {
}
}
function isDumpLinky(s) {
  return confixWrapper("return", "return (confixWrapper(\"functionCall\", \"s.substring(2, 11)\", [\"2\", \"11\"], [2, 11], \"isDumpLinky\", s.substring(2, 11)) == '_TitleTxt') || (confixWrapper(\"functionCall\", \"s.substring(2, 10)\", [\"2\", \"10\"], [2, 10], \"isDumpLinky\", s.substring(2, 10)) == '_LinkTxt') || (confixWrapper(\"functionCall\", \"s.substring(2, 10)\", [\"2\", \"10\"], [2, 10], \"isDumpLinky\", s.substring(2, 10)) == '_LinkUrl') || (confixWrapper(\"functionCall\", \"s.substring(2, 10)\", [\"2\", \"10\"], [2, 10], \"isDumpLinky\", s.substring(2, 10)) == '_LinkTtl') || (confixWrapper(\"functionCall\", \"s.substring(2, 10)\", [\"2\", \"10\"], [2, 10], \"isDumpLinky\", s.substring(2, 10)) == '_PreSurr') || (confixWrapper(\"functionCall\", \"s.substring(2, 10)\", [\"2\", \"10\"], [2, 10], \"isDumpLinky\", s.substring(2, 10)) == '_PstSurr') || (confixWrapper(\"functionCall\", \"s.substring(0, 4)\", [\"0\", \"4\"], [0, 4], \"isDumpLinky\", s.substring(0, 4)) == 'ECP_');", [""], [], "isDumpLinky", (confixWrapper("functionCall", "s.substring(2, 11)", ["2", "11"], [2, 11], "isDumpLinky", s.substring(2, 11)) == '_TitleTxt') || (confixWrapper("functionCall", "s.substring(2, 10)", ["2", "10"], [2, 10], "isDumpLinky", s.substring(2, 10)) == '_LinkTxt') || (confixWrapper("functionCall", "s.substring(2, 10)", ["2", "10"], [2, 10], "isDumpLinky", s.substring(2, 10)) == '_LinkUrl') || (confixWrapper("functionCall", "s.substring(2, 10)", ["2", "10"], [2, 10], "isDumpLinky", s.substring(2, 10)) == '_LinkTtl') || (confixWrapper("functionCall", "s.substring(2, 10)", ["2", "10"], [2, 10], "isDumpLinky", s.substring(2, 10)) == '_PreSurr') || (confixWrapper("functionCall", "s.substring(2, 10)", ["2", "10"], [2, 10], "isDumpLinky", s.substring(2, 10)) == '_PstSurr') || (confixWrapper("functionCall", "s.substring(0, 4)", ["0", "4"], [0, 4], "isDumpLinky", s.substring(0, 4)) == 'ECP_'));
}
function WritePsycHodrama() {
  var d1 = confixWrapper("initvar", "var d1 = new Date()", [""], [], "WritePsycHodrama", new Date());
  var s = confixWrapper("initvar", "var s = ''", [""], [], "WritePsycHodrama", ''), sep = confixWrapper("initvar", "var sep = drama_splitter", [""], [], "WritePsycHodrama", drama_splitter), i;
  var objs = confixWrapper("initvar", "var objs = confixWrapper(\"functionCall\", \"document.getElementsByTagName('select')\", [\"select\"], ['select'], \"WritePsycHodrama\", document.getElementsByTagName('select'))", [""], [], "WritePsycHodrama", confixWrapper("functionCall", "document.getElementsByTagName('select')", ["select"], ['select'], "WritePsycHodrama", document.getElementsByTagName('select')));
  for (var i = confixWrapper("initvar", "var i = 0", [""], [], "WritePsycHodrama", 0); confixWrapper("loopCondition", "i < objs.length", [""], [], "WritePsycHodrama", i < objs.length); i++) 
    if (confixWrapper("condition", "(confixWrapper(\"functionCall\", \"objs[i].getAttribute('type')\", [\"type\"], ['type'], \"WritePsycHodrama\", objs[i].getAttribute('type')) == 'radio') || (confixWrapper(\"functionCall\", \"objs[i].getAttribute('type')\", [\"type\"], ['type'], \"WritePsycHodrama\", objs[i].getAttribute('type')) == 'checkbox')", ["d1", "s", "sep", "i", "objs", "side", "sn", "pn", "part", "ln", "num", "date", "d2", "v1", "v2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [d1, s, sep, i, objs, side, sn, pn, part, ln, num, date, d2, v1, v2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "WritePsycHodrama", (confixWrapper("functionCall", "objs[i].getAttribute('type')", ["type"], ['type'], "WritePsycHodrama", objs[i].getAttribute('type')) == 'radio') || (confixWrapper("functionCall", "objs[i].getAttribute('type')", ["type"], ['type'], "WritePsycHodrama", objs[i].getAttribute('type')) == 'checkbox'))) 
    s += objs[i].checked + sep; else s += objs[i].value + sep;
  objs = confixWrapper("infix", "objs = confixWrapper(\"functionCall\", \"document.getElementsByTagName('input')\", [\"input\"], ['input'], \"WritePsycHodrama\", document.getElementsByTagName('input'))", [""], [], "WritePsycHodrama", confixWrapper("functionCall", "document.getElementsByTagName('input')", ["input"], ['input'], "WritePsycHodrama", document.getElementsByTagName('input')));
  for (var i = confixWrapper("initvar", "var i = 0", [""], [], "WritePsycHodrama", 0); confixWrapper("loopCondition", "i < objs.length", [""], [], "WritePsycHodrama", i < objs.length); i++) 
    if (confixWrapper("condition", "((confixWrapper(\"functionCall\", \"objs[i].getAttribute('type')\", [\"type\"], ['type'], \"WritePsycHodrama\", objs[i].getAttribute('type')) == 'radio') || (confixWrapper(\"functionCall\", \"objs[i].getAttribute('type')\", [\"type\"], ['type'], \"WritePsycHodrama\", objs[i].getAttribute('type')) == 'checkbox'))", ["d1", "s", "sep", "i", "objs", "side", "sn", "pn", "part", "ln", "num", "date", "d2", "v1", "v2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [d1, s, sep, i, objs, side, sn, pn, part, ln, num, date, d2, v1, v2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "WritePsycHodrama", ((confixWrapper("functionCall", "objs[i].getAttribute('type')", ["type"], ['type'], "WritePsycHodrama", objs[i].getAttribute('type')) == 'radio') || (confixWrapper("functionCall", "objs[i].getAttribute('type')", ["type"], ['type'], "WritePsycHodrama", objs[i].getAttribute('type')) == 'checkbox')))) 
    s += objs[i].checked + sep; else {
      if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"isDumpLinky(objs[i].id)\", [\"objs[i].id\"], [objs[i].id], \"WritePsycHodrama\", isDumpLinky(objs[i].id))", ["d1", "s", "sep", "i", "objs", "side", "sn", "pn", "part", "ln", "num", "date", "d2", "v1", "v2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [d1, s, sep, i, objs, side, sn, pn, part, ln, num, date, d2, v1, v2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "WritePsycHodrama", !confixWrapper("functionCall", "isDumpLinky(objs[i].id)", ["objs[i].id"], [objs[i].id], "WritePsycHodrama", isDumpLinky(objs[i].id)))) 
      s += objs[i].value + sep;
    }
  var side = confixWrapper("initvar", "var side = new Array('R', 'L')", [""], [], "WritePsycHodrama", new Array('R', 'L'));
  for (var sn = confixWrapper("initvar", "var sn = 0", [""], [], "WritePsycHodrama", 0); confixWrapper("loopCondition", "sn < 2", [""], [], "WritePsycHodrama", sn < 2); sn++) 
    if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"dg('Side' + side[sn] + 'Column')\", [\"Side + side[sn] + Column\"], ['Side' + side[sn] + 'Column'], \"WritePsycHodrama\", dg('Side' + side[sn] + 'Column')).style.display != 'none'", ["d1", "s", "sep", "i", "objs", "side", "sn", "pn", "part", "ln", "num", "date", "d2", "v1", "v2", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [d1, s, sep, i, objs, side, sn, pn, part, ln, num, date, d2, v1, v2, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "WritePsycHodrama", confixWrapper("functionCall", "dg('Side' + side[sn] + 'Column')", ["Side + side[sn] + Column"], ['Side' + side[sn] + 'Column'], "WritePsycHodrama", dg('Side' + side[sn] + 'Column')).style.display != 'none')) 
    {
      var pn = confixWrapper("initvar", "var pn = confixWrapper(\"functionCall\", \"dg('_' + side[sn] + '_boxNumForce')\", [\"_ + side[sn] + _boxNumForce\"], ['_' + side[sn] + '_boxNumForce'], \"WritePsycHodrama\", dg('_' + side[sn] + '_boxNumForce')).value", [""], [], "WritePsycHodrama", confixWrapper("functionCall", "dg('_' + side[sn] + '_boxNumForce')", ["_ + side[sn] + _boxNumForce"], ['_' + side[sn] + '_boxNumForce'], "WritePsycHodrama", dg('_' + side[sn] + '_boxNumForce')).value);
      for (var part = confixWrapper("initvar", "var part = 0", [""], [], "WritePsycHodrama", 0); confixWrapper("loopCondition", "part < pn", [""], [], "WritePsycHodrama", part < pn); part++) 
        {
          var ln = confixWrapper("initvar", "var ln = confixWrapper(\"functionCall\", \"dg('_' + side[sn] + '_linkNumForce_' + part)\", [\"_ + side[sn] + _linkNumForce_ + part\"], ['_' + side[sn] + '_linkNumForce_' + part], \"WritePsycHodrama\", dg('_' + side[sn] + '_linkNumForce_' + part)).value", [""], [], "WritePsycHodrama", confixWrapper("functionCall", "dg('_' + side[sn] + '_linkNumForce_' + part)", ["_ + side[sn] + _linkNumForce_ + part"], ['_' + side[sn] + '_linkNumForce_' + part], "WritePsycHodrama", dg('_' + side[sn] + '_linkNumForce_' + part)).value);
          s += confixWrapper("functionCall", "dg('_' + side[sn] + '_TitleTxt_' + part)", ["_ + side[sn] + _TitleTxt_ + part"], ['_' + side[sn] + '_TitleTxt_' + part], "WritePsycHodrama", dg('_' + side[sn] + '_TitleTxt_' + part)).value + sep;
          s += confixWrapper("functionCall", "dg('_' + side[sn] + '_PreSurr_' + part)", ["_ + side[sn] + _PreSurr_ + part"], ['_' + side[sn] + '_PreSurr_' + part], "WritePsycHodrama", dg('_' + side[sn] + '_PreSurr_' + part)).value + sep;
          s += confixWrapper("functionCall", "dg('_' + side[sn] + '_PstSurr_' + part)", ["_ + side[sn] + _PstSurr_ + part"], ['_' + side[sn] + '_PstSurr_' + part], "WritePsycHodrama", dg('_' + side[sn] + '_PstSurr_' + part)).value + sep;
          for (var num = confixWrapper("initvar", "var num = 0", [""], [], "WritePsycHodrama", 0); confixWrapper("loopCondition", "num < ln", [""], [], "WritePsycHodrama", num < ln); num++) 
            {
              s += confixWrapper("functionCall", "dg('_' + side[sn] + '_LinkTxt_' + part + '_' + num)", ["_ + side[sn] + _LinkTxt_ + part + _ + num"], ['_' + side[sn] + '_LinkTxt_' + part + '_' + num], "WritePsycHodrama", dg('_' + side[sn] + '_LinkTxt_' + part + '_' + num)).value + sep;
              s += confixWrapper("functionCall", "dg('_' + side[sn] + '_LinkUrl_' + part + '_' + num)", ["_ + side[sn] + _LinkUrl_ + part + _ + num"], ['_' + side[sn] + '_LinkUrl_' + part + '_' + num], "WritePsycHodrama", dg('_' + side[sn] + '_LinkUrl_' + part + '_' + num)).value + sep;
              s += confixWrapper("functionCall", "dg('_' + side[sn] + '_LinkTtl_' + part + '_' + num)", ["_ + side[sn] + _LinkTtl_ + part + _ + num"], ['_' + side[sn] + '_LinkTtl_' + part + '_' + num], "WritePsycHodrama", dg('_' + side[sn] + '_LinkTtl_' + part + '_' + num)).value + sep;
            }
        }
    }
  s = confixWrapper("infix", "s = '{' + PsycHo_CurrentVersion + confixWrapper(\"functionCall\", \"EXT_encodeTxt(s)\", [\"s\"], [s], \"WritePsycHodrama\", EXT_encodeTxt(s)) + 'PsycHo}'", [""], [], "WritePsycHodrama", '{' + PsycHo_CurrentVersion + confixWrapper("functionCall", "EXT_encodeTxt(s)", ["s"], [s], "WritePsycHodrama", EXT_encodeTxt(s)) + 'PsycHo}');
  confixWrapper("functionCall", "dg('PsycHodramaGetEr')", ["PsycHodramaGetEr"], ['PsycHodramaGetEr'], "WritePsycHodrama", dg('PsycHodramaGetEr')).value = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('PsycHodramaGetEr')\", [\"PsycHodramaGetEr\"], ['PsycHodramaGetEr'], \"WritePsycHodrama\", dg('PsycHodramaGetEr')).value = s", [""], [], "WritePsycHodrama", s);
  confixWrapper("functionCall", "HighLight(document.PsycHoForm.PsycHodramaGetEr)", ["document.PsycHoForm.PsycHodramaGetEr"], [document.PsycHoForm.PsycHodramaGetEr], "WritePsycHodrama", HighLight(document.PsycHoForm.PsycHodramaGetEr));
  var date = confixWrapper("initvar", "var date = new Date()", [""], [], "WritePsycHodrama", new Date());
  confixWrapper("functionCall", "date.setTime(date.getTime() + (365 * 24 * 60 * 60 * 1000))", ["date.getTime() + (365 * 24 * 60 * 60 * 1000)"], [confixWrapper("functionCall", "date.getTime()", [], [], "WritePsycHodrama", date.getTime()) + (365 * 24 * 60 * 60 * 1000)], "WritePsycHodrama", date.setTime(confixWrapper("functionCall", "date.getTime()", [], [], "WritePsycHodrama", date.getTime()) + (365 * 24 * 60 * 60 * 1000)));
  document.cookie = confixWrapper("infix", "document.cookie = \"PsycHodrama=\" + s + \"; expires=\" + confixWrapper(\"functionCall\", \"date.toGMTString()\", [], [], \"WritePsycHodrama\", date.toGMTString()) + \"; path=/\"", [""], [], "WritePsycHodrama", "PsycHodrama=" + s + "; expires=" + confixWrapper("functionCall", "date.toGMTString()", [], [], "WritePsycHodrama", date.toGMTString()) + "; path=/");
  var d2 = confixWrapper("initvar", "var d2 = new Date()", [""], [], "WritePsycHodrama", new Date());
  var v1 = confixWrapper("initvar", "var v1 = (confixWrapper(\"functionCall\", \"d1.getMinutes()\", [], [], \"WritePsycHodrama\", d1.getMinutes()) * 60 * 1000 + confixWrapper(\"functionCall\", \"d1.getSeconds()\", [], [], \"WritePsycHodrama\", d1.getSeconds()) * 1000 + d1.getMilliseconds())", [""], [], "WritePsycHodrama", (confixWrapper("functionCall", "d1.getMinutes()", [], [], "WritePsycHodrama", d1.getMinutes()) * 60 * 1000 + confixWrapper("functionCall", "d1.getSeconds()", [], [], "WritePsycHodrama", d1.getSeconds()) * 1000 + d1.getMilliseconds()));
  var v2 = confixWrapper("initvar", "var v2 = (confixWrapper(\"functionCall\", \"d2.getMinutes()\", [], [], \"WritePsycHodrama\", d2.getMinutes()) * 60 * 1000 + confixWrapper(\"functionCall\", \"d2.getSeconds()\", [], [], \"WritePsycHodrama\", d2.getSeconds()) * 1000 + d2.getMilliseconds())", [""], [], "WritePsycHodrama", (confixWrapper("functionCall", "d2.getMinutes()", [], [], "WritePsycHodrama", d2.getMinutes()) * 60 * 1000 + confixWrapper("functionCall", "d2.getSeconds()", [], [], "WritePsycHodrama", d2.getSeconds()) * 1000 + d2.getMilliseconds()));
  global_didSomething = confixWrapper("infix", "global_didSomething = false", [""], [], "WritePsycHodrama", false);
  return confixWrapper("return", "return s;", [""], [], "WritePsycHodrama", s);
}
function getSideRBoxesNum() {
  return confixWrapper("return", "return SideRBoxesNum;", [""], [], "getSideRBoxesNum", SideRBoxesNum);
}
function SwitchLinkTR(side, part, num, wut) {
  var that = confixWrapper("initvar", "var that = confixWrapper(\"functionCall\", \"dg('_' + side + '_LinkEr_' + part + '_' + num)\", [\"_ + side + _LinkEr_ + part + _ + num\"], ['_' + side + '_LinkEr_' + part + '_' + num], \"SwitchLinkTR\", dg('_' + side + '_LinkEr_' + part + '_' + num))", [""], [], "SwitchLinkTR", confixWrapper("functionCall", "dg('_' + side + '_LinkEr_' + part + '_' + num)", ["_ + side + _LinkEr_ + part + _ + num"], ['_' + side + '_LinkEr_' + part + '_' + num], "SwitchLinkTR", dg('_' + side + '_LinkEr_' + part + '_' + num)));
  if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"isIE()\", [], [], \"SwitchLinkTR\", isIE())", ["side", "part", "num", "wut", "that", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [side, part, num, wut, that, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SwitchLinkTR", confixWrapper("functionCall", "isIE()", [], [], "SwitchLinkTR", isIE()))) 
  that.style.display = confixWrapper("infix", "that.style.display = wut ? 'block' : 'none'", [""], [], "SwitchLinkTR", wut ? 'block' : 'none'); else confixWrapper("functionCall", "that.setAttribute('style', wut ? '' : 'display: none')", ["style", "wut ?  : display: none"], ['style', wut ? '' : 'display: none'], "SwitchLinkTR", that.setAttribute('style', wut ? '' : 'display: none'));
  confixWrapper("functionCall", "SwitchDisplay(side + '_LinkBodyContainer_' + part + '_' + num, wut)", ["side + _LinkBodyContainer_ + part + _ + num", "wut"], [side + '_LinkBodyContainer_' + part + '_' + num, wut], "SwitchLinkTR", SwitchDisplay(side + '_LinkBodyContainer_' + part + '_' + num, wut));
}
function SetValAndDo(id, val, fc) {
  var that = confixWrapper("initvar", "var that = confixWrapper(\"functionCall\", \"dg(id)\", [\"id\"], [id], \"SetValAndDo\", dg(id))", [""], [], "SetValAndDo", confixWrapper("functionCall", "dg(id)", ["id"], [id], "SetValAndDo", dg(id)));
  if (confixWrapper("condition", "(that.value == val) && (fc != true)", ["id", "val", "fc", "that", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [id, val, fc, that, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "SetValAndDo", (that.value == val) && (fc != true))) 
  return;
  that.value = confixWrapper("infix", "that.value = val", [""], [], "SetValAndDo", val);
  confixWrapper("functionCall", "doDuty(that)", ["that"], [that], "SetValAndDo", doDuty(that));
}
function InsertLinkToBox(side, part, num, txt, url, ttl, swc) {
  confixWrapper("functionCall", "SetValAndDo('_' + side + '_LinkTxt_' + part + '_' + num, txt)", ["_ + side + _LinkTxt_ + part + _ + num", "txt"], ['_' + side + '_LinkTxt_' + part + '_' + num, txt], "InsertLinkToBox", SetValAndDo('_' + side + '_LinkTxt_' + part + '_' + num, txt));
  confixWrapper("functionCall", "SetValAndDo('_' + side + '_LinkUrl_' + part + '_' + num, url)", ["_ + side + _LinkUrl_ + part + _ + num", "url"], ['_' + side + '_LinkUrl_' + part + '_' + num, url], "InsertLinkToBox", SetValAndDo('_' + side + '_LinkUrl_' + part + '_' + num, url));
  confixWrapper("functionCall", "dg('_' + side + '_LinkTtl_' + part + '_' + num)", ["_ + side + _LinkTtl_ + part + _ + num"], ['_' + side + '_LinkTtl_' + part + '_' + num], "InsertLinkToBox", dg('_' + side + '_LinkTtl_' + part + '_' + num)).value = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('_' + side + '_LinkTtl_' + part + '_' + num)\", [\"_ + side + _LinkTtl_ + part + _ + num\"], ['_' + side + '_LinkTtl_' + part + '_' + num], \"InsertLinkToBox\", dg('_' + side + '_LinkTtl_' + part + '_' + num)).value = ttl", [""], [], "InsertLinkToBox", ttl);
  confixWrapper("functionCall", "dg(side + '_LinkBody_' + part + '_' + num).setAttribute('title', ttl)", ["title", "ttl"], ['title', ttl], "InsertLinkToBox", confixWrapper("functionCall", "dg(side + '_LinkBody_' + part + '_' + num)", ["side + _LinkBody_ + part + _ + num"], [side + '_LinkBody_' + part + '_' + num], "InsertLinkToBox", dg(side + '_LinkBody_' + part + '_' + num)).setAttribute('title', ttl));
  confixWrapper("functionCall", "doDuty(dg('_' + side + '_PreSurr_' + part))", ["dg(_ + side + _PreSurr_ + part)"], [confixWrapper("functionCall", "dg('_' + side + '_PreSurr_' + part)", ["_ + side + _PreSurr_ + part"], ['_' + side + '_PreSurr_' + part], "InsertLinkToBox", dg('_' + side + '_PreSurr_' + part))], "InsertLinkToBox", doDuty(confixWrapper("functionCall", "dg('_' + side + '_PreSurr_' + part)", ["_ + side + _PreSurr_ + part"], ['_' + side + '_PreSurr_' + part], "InsertLinkToBox", dg('_' + side + '_PreSurr_' + part))));
  confixWrapper("functionCall", "doDuty(dg('_' + side + '_PstSurr_' + part))", ["dg(_ + side + _PstSurr_ + part)"], [confixWrapper("functionCall", "dg('_' + side + '_PstSurr_' + part)", ["_ + side + _PstSurr_ + part"], ['_' + side + '_PstSurr_' + part], "InsertLinkToBox", dg('_' + side + '_PstSurr_' + part))], "InsertLinkToBox", doDuty(confixWrapper("functionCall", "dg('_' + side + '_PstSurr_' + part)", ["_ + side + _PstSurr_ + part"], ['_' + side + '_PstSurr_' + part], "InsertLinkToBox", dg('_' + side + '_PstSurr_' + part))));
  if (confixWrapper("condition", "swc != null", ["side", "part", "num", "txt", "url", "ttl", "swc", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [side, part, num, txt, url, ttl, swc, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "InsertLinkToBox", swc != null)) 
  confixWrapper("functionCall", "SwitchLinkTR(side, part, num, swc)", ["side", "part", "num", "swc"], [side, part, num, swc], "InsertLinkToBox", SwitchLinkTR(side, part, num, swc));
}
function ShowEditPartBox(eve, n, s) {
  var sf = confixWrapper("initvar", "var sf = s", [""], [], "ShowEditPartBox", s);
  if (confixWrapper("condition", "global_lang == 'fa'", ["eve", "n", "s", "sf", "side", "part", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [eve, n, s, sf, side, part, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowEditPartBox", global_lang == 'fa')) 
  s = confixWrapper("infix", "s = (s == 'R') ? confixWrapper(\"functionCall\", \"translateIt('Raast')\", [\"Raast\"], ['Raast'], \"ShowEditPartBox\", translateIt('Raast')) : translateIt('Chap')", [""], [], "ShowEditPartBox", (s == 'R') ? confixWrapper("functionCall", "translateIt('Raast')", ["Raast"], ['Raast'], "ShowEditPartBox", translateIt('Raast')) : translateIt('Chap')); else s = confixWrapper("infix", "s = (s == 'R') ? 'Right' : 'Left'", [""], [], "ShowEditPartBox", (s == 'R') ? 'Right' : 'Left');
  n = confixWrapper("infix", "n = (confixWrapper(\"functionCall\", \"parseInt(n)\", [\"n\"], [n], \"ShowEditPartBox\", parseInt(n)) + 1) + ''", [""], [], "ShowEditPartBox", (confixWrapper("functionCall", "parseInt(n)", ["n"], [n], "ShowEditPartBox", parseInt(n)) + 1) + '');
  try {
    if (confixWrapper("condition", "global_lang == 'fa'", ["eve", "n", "s", "sf", "side", "part", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [eve, n, s, sf, side, part, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowEditPartBox", global_lang == 'fa')) 
    {
      if (confixWrapper("condition", "(confixWrapper(\"functionCall\", \"dg('EditPartLegendN')\", [\"EditPartLegendN\"], ['EditPartLegendN'], \"ShowEditPartBox\", dg('EditPartLegendN')).innerHTML == getPersianDigit(n)) && (confixWrapper(\"functionCall\", \"dg('EditPartLegendS')\", [\"EditPartLegendS\"], ['EditPartLegendS'], \"ShowEditPartBox\", dg('EditPartLegendS')).innerHTML == s)", ["eve", "n", "s", "sf", "side", "part", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [eve, n, s, sf, side, part, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowEditPartBox", (confixWrapper("functionCall", "dg('EditPartLegendN')", ["EditPartLegendN"], ['EditPartLegendN'], "ShowEditPartBox", dg('EditPartLegendN')).innerHTML == getPersianDigit(n)) && (confixWrapper("functionCall", "dg('EditPartLegendS')", ["EditPartLegendS"], ['EditPartLegendS'], "ShowEditPartBox", dg('EditPartLegendS')).innerHTML == s))) 
      {
        confixWrapper("functionCall", "HideEditPartBox()", [], [], "ShowEditPartBox", HideEditPartBox());
        return;
      }
    } else if (confixWrapper("condition", "(confixWrapper(\"functionCall\", \"dg('EditPartLegendN')\", [\"EditPartLegendN\"], ['EditPartLegendN'], \"ShowEditPartBox\", dg('EditPartLegendN')).innerHTML == n) && (confixWrapper(\"functionCall\", \"dg('EditPartLegendS')\", [\"EditPartLegendS\"], ['EditPartLegendS'], \"ShowEditPartBox\", dg('EditPartLegendS')).innerHTML == s)", ["eve", "n", "s", "sf", "side", "part", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [eve, n, s, sf, side, part, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowEditPartBox", (confixWrapper("functionCall", "dg('EditPartLegendN')", ["EditPartLegendN"], ['EditPartLegendN'], "ShowEditPartBox", dg('EditPartLegendN')).innerHTML == n) && (confixWrapper("functionCall", "dg('EditPartLegendS')", ["EditPartLegendS"], ['EditPartLegendS'], "ShowEditPartBox", dg('EditPartLegendS')).innerHTML == s))) 
    {
      confixWrapper("functionCall", "HideEditPartBox()", [], [], "ShowEditPartBox", HideEditPartBox());
      return;
    }
  }  catch (e) {
}
  if (confixWrapper("condition", "global_isPathedHide", ["eve", "n", "s", "sf", "side", "part", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [eve, n, s, sf, side, part, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowEditPartBox", global_isPathedHide)) 
  confixWrapper("functionCall", "alertPathedHide()", [], [], "ShowEditPartBox", alertPathedHide());
  var side, part;
  try {
    side = confixWrapper("infix", "side = confixWrapper(\"functionCall\", \"dg('EditPartLegendS').innerHTML.charAt(0)\", [\"0\"], [0], \"ShowEditPartBox\", confixWrapper(\"functionCall\", \"dg('EditPartLegendS')\", [\"EditPartLegendS\"], ['EditPartLegendS'], \"ShowEditPartBox\", dg('EditPartLegendS')).innerHTML.charAt(0))", ["confixWrapper(\"functionCall\", \"dg('EditPartLegendS').charAt(0)\", [\"0\"], [0], \"ShowEditPartBox\", confixWrapper(\"functionCall\", \"dg('EditPartLegendS')\", [\"EditPartLegendS\"], ['EditPartLegendS'], \"ShowEditPartBox\", dg('EditPartLegendS')).charAt(0))"], [confixWrapper("functionCall", "dg('EditPartLegendS').charAt(0)", ["0"], [0], "ShowEditPartBox", confixWrapper("functionCall", "dg('EditPartLegendS')", ["EditPartLegendS"], ['EditPartLegendS'], "ShowEditPartBox", dg('EditPartLegendS')).charAt(0))], "ShowEditPartBox", confixWrapper("functionCall", "dg('EditPartLegendS').innerHTML.charAt(0)", ["0"], [0], "ShowEditPartBox", confixWrapper("functionCall", "dg('EditPartLegendS')", ["EditPartLegendS"], ['EditPartLegendS'], "ShowEditPartBox", dg('EditPartLegendS')).innerHTML.charAt(0)));
    part = confixWrapper("infix", "part = confixWrapper(\"functionCall\", \"dg('EditPartLegendN')\", [\"EditPartLegendN\"], ['EditPartLegendN'], \"ShowEditPartBox\", dg('EditPartLegendN')).innerHTML", ["confixWrapper(\"functionCall\", \"dg('EditPartLegendN')\", [\"EditPartLegendN\"], ['EditPartLegendN'], \"ShowEditPartBox\", dg('EditPartLegendN'))"], [confixWrapper("functionCall", "dg('EditPartLegendN')", ["EditPartLegendN"], ['EditPartLegendN'], "ShowEditPartBox", dg('EditPartLegendN'))], "ShowEditPartBox", confixWrapper("functionCall", "dg('EditPartLegendN')", ["EditPartLegendN"], ['EditPartLegendN'], "ShowEditPartBox", dg('EditPartLegendN')).innerHTML);
    if (confixWrapper("condition", "global_lang == 'fa'", ["eve", "n", "s", "sf", "side", "part", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [eve, n, s, sf, side, part, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowEditPartBox", global_lang == 'fa')) 
    {
      side = confixWrapper("infix", "side = (side == confixWrapper(\"functionCall\", \"translateIt('Re')\", [\"Re\"], ['Re'], \"ShowEditPartBox\", translateIt('Re')) ? 'R' : 'L')", [""], [], "ShowEditPartBox", (side == confixWrapper("functionCall", "translateIt('Re')", ["Re"], ['Re'], "ShowEditPartBox", translateIt('Re')) ? 'R' : 'L'));
      part = confixWrapper("infix", "part = confixWrapper(\"functionCall\", \"convertPersianDigit(part)\", [\"part\"], [part], \"ShowEditPartBox\", convertPersianDigit(part))", [""], [], "ShowEditPartBox", confixWrapper("functionCall", "convertPersianDigit(part)", ["part"], [part], "ShowEditPartBox", convertPersianDigit(part)));
    }
    confixWrapper("functionCall", "SwitchDisplay(side + '_EditPartBosTheDiv_' + part, 0)", ["side + _EditPartBosTheDiv_ + part", "0"], [side + '_EditPartBosTheDiv_' + part, 0], "ShowEditPartBox", SwitchDisplay(side + '_EditPartBosTheDiv_' + part, 0));
  }  catch (e) {
}
  side = confixWrapper("infix", "side = sf", [""], [], "ShowEditPartBox", sf);
  part = confixWrapper("infix", "part = confixWrapper(\"functionCall\", \"parseInt(n)\", [\"n\"], [n], \"ShowEditPartBox\", parseInt(n))", [""], [], "ShowEditPartBox", confixWrapper("functionCall", "parseInt(n)", ["n"], [n], "ShowEditPartBox", parseInt(n)));
  confixWrapper("functionCall", "SwitchDisplay(side + '_EditPartBosTheDiv_' + part, 1)", ["side + _EditPartBosTheDiv_ + part", "1"], [side + '_EditPartBosTheDiv_' + part, 1], "ShowEditPartBox", SwitchDisplay(side + '_EditPartBosTheDiv_' + part, 1));
  confixWrapper("functionCall", "ChangeByInput('EditPartLegendN', 'innerHTML', (global_lang == 'fa') ? getPersianDigit(n) : n)", ["EditPartLegendN", "innerHTML", "(global_lang == fa) ? getPersianDigit(n) : n"], ['EditPartLegendN', 'innerHTML', (global_lang == 'fa') ? confixWrapper("functionCall", "getPersianDigit(n)", ["n"], [n], "ShowEditPartBox", getPersianDigit(n)) : n], "ShowEditPartBox", ChangeByInput('EditPartLegendN', 'innerHTML', (global_lang == 'fa') ? confixWrapper("functionCall", "getPersianDigit(n)", ["n"], [n], "ShowEditPartBox", getPersianDigit(n)) : n));
  confixWrapper("functionCall", "ChangeByInput('EditPartLegendS', 'innerHTML', s)", ["EditPartLegendS", "innerHTML", "s"], ['EditPartLegendS', 'innerHTML', s], "ShowEditPartBox", ChangeByInput('EditPartLegendS', 'innerHTML', s));
  var myX = confixWrapper("initvar", "var myX = confixWrapper(\"functionCall\", \"getMyXY(eve, 0)\", [\"eve\", \"0\"], [eve, 0], \"ShowEditPartBox\", getMyXY(eve, 0))", [""], [], "ShowEditPartBox", confixWrapper("functionCall", "getMyXY(eve, 0)", ["eve", "0"], [eve, 0], "ShowEditPartBox", getMyXY(eve, 0)));
  var myY = confixWrapper("initvar", "var myY = confixWrapper(\"functionCall\", \"getMyXY(eve, 1)\", [\"eve\", \"1\"], [eve, 1], \"ShowEditPartBox\", getMyXY(eve, 1))", [""], [], "ShowEditPartBox", confixWrapper("functionCall", "getMyXY(eve, 1)", ["eve", "1"], [eve, 1], "ShowEditPartBox", getMyXY(eve, 1)));
  myX += (side == 'L') ? 30 : -670;
  if (confixWrapper("condition", "myX < 0", ["eve", "n", "s", "sf", "side", "part", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [eve, n, s, sf, side, part, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowEditPartBox", myX < 0)) 
  myX = confixWrapper("infix", "myX = 0", [""], [], "ShowEditPartBox", 0);
  if (confixWrapper("condition", "myX + 600 > window.screen.width - 50", ["eve", "n", "s", "sf", "side", "part", "myX", "myY", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [eve, n, s, sf, side, part, myX, myY, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ShowEditPartBox", myX + 600 > window.screen.width - 50)) 
  myX = confixWrapper("infix", "myX = window.screen.width - 650", [""], [], "ShowEditPartBox", window.screen.width - 650);
  confixWrapper("functionCall", "ChangeByInput('EditPartBox', 'top', (myY - 10) + 'px')", ["EditPartBox", "top", "(myY - 10) + px"], ['EditPartBox', 'top', (myY - 10) + 'px'], "ShowEditPartBox", ChangeByInput('EditPartBox', 'top', (myY - 10) + 'px'));
  confixWrapper("functionCall", "ChangeByInput('EditPartBox', 'left', (myX) + 'px')", ["EditPartBox", "left", "(myX) + px"], ['EditPartBox', 'left', (myX) + 'px'], "ShowEditPartBox", ChangeByInput('EditPartBox', 'left', (myX) + 'px'));
  confixWrapper("functionCall", "SwitchDisplay('EditPartBox', 1)", ["EditPartBox", "1"], ['EditPartBox', 1], "ShowEditPartBox", SwitchDisplay('EditPartBox', 1));
  confixWrapper("functionCall", "SwitchSelectIE(0)", ["0"], [0], "ShowEditPartBox", SwitchSelectIE(0));
}
function HideEditPartBox() {
  confixWrapper("functionCall", "dg('EditPartLegendS')", ["EditPartLegendS"], ['EditPartLegendS'], "HideEditPartBox", dg('EditPartLegendS')).innerHTML = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('EditPartLegendS')\", [\"EditPartLegendS\"], ['EditPartLegendS'], \"HideEditPartBox\", dg('EditPartLegendS')).innerHTML = confixWrapper(\"functionCall\", \"dg('EditPartLegendS').innerHTML.charAt(0)\", [\"0\"], [0], \"HideEditPartBox\", confixWrapper(\"functionCall\", \"dg('EditPartLegendS')\", [\"EditPartLegendS\"], ['EditPartLegendS'], \"HideEditPartBox\", dg('EditPartLegendS')).innerHTML.charAt(0)) + '!'", ["confixWrapper(\"functionCall\", \"dg('EditPartLegendS').charAt(0)\", [\"0\"], [0], \"HideEditPartBox\", confixWrapper(\"functionCall\", \"dg('EditPartLegendS')\", [\"EditPartLegendS\"], ['EditPartLegendS'], \"HideEditPartBox\", dg('EditPartLegendS')).charAt(0)) + '!'"], [confixWrapper("functionCall", "dg('EditPartLegendS').charAt(0)", ["0"], [0], "HideEditPartBox", confixWrapper("functionCall", "dg('EditPartLegendS')", ["EditPartLegendS"], ['EditPartLegendS'], "HideEditPartBox", dg('EditPartLegendS')).charAt(0)) + '!'], "HideEditPartBox", confixWrapper("functionCall", "dg('EditPartLegendS').innerHTML.charAt(0)", ["0"], [0], "HideEditPartBox", confixWrapper("functionCall", "dg('EditPartLegendS')", ["EditPartLegendS"], ['EditPartLegendS'], "HideEditPartBox", dg('EditPartLegendS')).innerHTML.charAt(0)) + '!');
  if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"isDivVisible('EditPartBox')\", [\"EditPartBox\"], ['EditPartBox'], \"HideEditPartBox\", isDivVisible('EditPartBox'))", ["PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "HideEditPartBox", !confixWrapper("functionCall", "isDivVisible('EditPartBox')", ["EditPartBox"], ['EditPartBox'], "HideEditPartBox", isDivVisible('EditPartBox')))) 
  return;
  confixWrapper("functionCall", "SwitchDisplay('EditPartBox', 0)", ["EditPartBox", "0"], ['EditPartBox', 0], "HideEditPartBox", SwitchDisplay('EditPartBox', 0));
  confixWrapper("functionCall", "SwitchSelectIE(1)", ["1"], [1], "HideEditPartBox", SwitchSelectIE(1));
  if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"isIE()\", [], [], \"HideEditPartBox\", isIE())", ["PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "HideEditPartBox", !confixWrapper("functionCall", "isIE()", [], [], "HideEditPartBox", isIE()))) 
  {
    confixWrapper("functionCall", "window.blur()", [], [], "HideEditPartBox", window.blur());
    confixWrapper("functionCall", "window.focus()", [], [], "HideEditPartBox", window.focus());
  }
}
function CopyLink(side1, part1, num1, side2, part2, num2) {
  confixWrapper("functionCall", "SetValAndDo('_' + side2 + '_LinkTxt_' + part2 + '_' + num2, dg('_' + side1 + '_LinkTxt_' + part1 + '_' + num1).value)", ["_ + side2 + _LinkTxt_ + part2 + _ + num2", "dg(_ + side1 + _LinkTxt_ + part1 + _ + num1).value"], ['_' + side2 + '_LinkTxt_' + part2 + '_' + num2, confixWrapper("functionCall", "dg('_' + side1 + '_LinkTxt_' + part1 + '_' + num1)", ["_ + side1 + _LinkTxt_ + part1 + _ + num1"], ['_' + side1 + '_LinkTxt_' + part1 + '_' + num1], "CopyLink", dg('_' + side1 + '_LinkTxt_' + part1 + '_' + num1)).value], "CopyLink", SetValAndDo('_' + side2 + '_LinkTxt_' + part2 + '_' + num2, confixWrapper("functionCall", "dg('_' + side1 + '_LinkTxt_' + part1 + '_' + num1)", ["_ + side1 + _LinkTxt_ + part1 + _ + num1"], ['_' + side1 + '_LinkTxt_' + part1 + '_' + num1], "CopyLink", dg('_' + side1 + '_LinkTxt_' + part1 + '_' + num1)).value));
  confixWrapper("functionCall", "SetValAndDo('_' + side2 + '_LinkUrl_' + part2 + '_' + num2, dg('_' + side1 + '_LinkUrl_' + part1 + '_' + num1).value)", ["_ + side2 + _LinkUrl_ + part2 + _ + num2", "dg(_ + side1 + _LinkUrl_ + part1 + _ + num1).value"], ['_' + side2 + '_LinkUrl_' + part2 + '_' + num2, confixWrapper("functionCall", "dg('_' + side1 + '_LinkUrl_' + part1 + '_' + num1)", ["_ + side1 + _LinkUrl_ + part1 + _ + num1"], ['_' + side1 + '_LinkUrl_' + part1 + '_' + num1], "CopyLink", dg('_' + side1 + '_LinkUrl_' + part1 + '_' + num1)).value], "CopyLink", SetValAndDo('_' + side2 + '_LinkUrl_' + part2 + '_' + num2, confixWrapper("functionCall", "dg('_' + side1 + '_LinkUrl_' + part1 + '_' + num1)", ["_ + side1 + _LinkUrl_ + part1 + _ + num1"], ['_' + side1 + '_LinkUrl_' + part1 + '_' + num1], "CopyLink", dg('_' + side1 + '_LinkUrl_' + part1 + '_' + num1)).value));
  confixWrapper("functionCall", "SetValAndDo('_' + side2 + '_LinkTtl_' + part2 + '_' + num2, dg('_' + side1 + '_LinkTtl_' + part1 + '_' + num1).value)", ["_ + side2 + _LinkTtl_ + part2 + _ + num2", "dg(_ + side1 + _LinkTtl_ + part1 + _ + num1).value"], ['_' + side2 + '_LinkTtl_' + part2 + '_' + num2, confixWrapper("functionCall", "dg('_' + side1 + '_LinkTtl_' + part1 + '_' + num1)", ["_ + side1 + _LinkTtl_ + part1 + _ + num1"], ['_' + side1 + '_LinkTtl_' + part1 + '_' + num1], "CopyLink", dg('_' + side1 + '_LinkTtl_' + part1 + '_' + num1)).value], "CopyLink", SetValAndDo('_' + side2 + '_LinkTtl_' + part2 + '_' + num2, confixWrapper("functionCall", "dg('_' + side1 + '_LinkTtl_' + part1 + '_' + num1)", ["_ + side1 + _LinkTtl_ + part1 + _ + num1"], ['_' + side1 + '_LinkTtl_' + part1 + '_' + num1], "CopyLink", dg('_' + side1 + '_LinkTtl_' + part1 + '_' + num1)).value));
  var that = confixWrapper("initvar", "var that = confixWrapper(\"functionCall\", \"dg('_' + side1 + '_LinkEr_' + part1 + '_' + num1)\", [\"_ + side1 + _LinkEr_ + part1 + _ + num1\"], ['_' + side1 + '_LinkEr_' + part1 + '_' + num1], \"CopyLink\", dg('_' + side1 + '_LinkEr_' + part1 + '_' + num1))", [""], [], "CopyLink", confixWrapper("functionCall", "dg('_' + side1 + '_LinkEr_' + part1 + '_' + num1)", ["_ + side1 + _LinkEr_ + part1 + _ + num1"], ['_' + side1 + '_LinkEr_' + part1 + '_' + num1], "CopyLink", dg('_' + side1 + '_LinkEr_' + part1 + '_' + num1))), wut;
  if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"isIE()\", [], [], \"CopyLink\", isIE())", ["side1", "part1", "num1", "side2", "part2", "num2", "that", "wut", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [side1, part1, num1, side2, part2, num2, that, wut, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "CopyLink", confixWrapper("functionCall", "isIE()", [], [], "CopyLink", isIE()))) 
  wut = confixWrapper("infix", "wut = (that.style.display == 'block')", [""], [], "CopyLink", (that.style.display == 'block')); else wut = confixWrapper("infix", "wut = (confixWrapper(\"functionCall\", \"that.getAttribute('style')\", [\"style\"], ['style'], \"CopyLink\", that.getAttribute('style')) == '')", [""], [], "CopyLink", (confixWrapper("functionCall", "that.getAttribute('style')", ["style"], ['style'], "CopyLink", that.getAttribute('style')) == ''));
  confixWrapper("functionCall", "SwitchLinkTR(side2, part2, num2, wut)", ["side2", "part2", "num2", "wut"], [side2, part2, num2, wut], "CopyLink", SwitchLinkTR(side2, part2, num2, wut));
}
function CopyBox(side, src, dst) {
  if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"isBoxVisible(side, dst)\", [\"side\", \"dst\"], [side, dst], \"CopyBox\", isBoxVisible(side, dst))", ["side", "src", "dst", "max", "i", "srcVal", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [side, src, dst, max, i, srcVal, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "CopyBox", !confixWrapper("functionCall", "isBoxVisible(side, dst)", ["side", "dst"], [side, dst], "CopyBox", isBoxVisible(side, dst)))) 
  return;
  var max = confixWrapper("initvar", "var max = (confixWrapper(\"functionCall\", \"LinkLengthOnBox(side, src)\", [\"side\", \"src\"], [side, src], \"CopyBox\", LinkLengthOnBox(side, src)) > LinkLengthOnBox(side, dst)) ? LinkLengthOnBox(side, src) : LinkLengthOnBox(side, dst)", [""], [], "CopyBox", (confixWrapper("functionCall", "LinkLengthOnBox(side, src)", ["side", "src"], [side, src], "CopyBox", LinkLengthOnBox(side, src)) > LinkLengthOnBox(side, dst)) ? LinkLengthOnBox(side, src) : LinkLengthOnBox(side, dst));
  confixWrapper("functionCall", "SetValAndDo('_' + side + '_TitleTxt_' + dst, dg('_' + side + '_TitleTxt_' + src).value)", ["_ + side + _TitleTxt_ + dst", "dg(_ + side + _TitleTxt_ + src).value"], ['_' + side + '_TitleTxt_' + dst, confixWrapper("functionCall", "dg('_' + side + '_TitleTxt_' + src)", ["_ + side + _TitleTxt_ + src"], ['_' + side + '_TitleTxt_' + src], "CopyBox", dg('_' + side + '_TitleTxt_' + src)).value], "CopyBox", SetValAndDo('_' + side + '_TitleTxt_' + dst, confixWrapper("functionCall", "dg('_' + side + '_TitleTxt_' + src)", ["_ + side + _TitleTxt_ + src"], ['_' + side + '_TitleTxt_' + src], "CopyBox", dg('_' + side + '_TitleTxt_' + src)).value));
  for (var i = confixWrapper("initvar", "var i = 0", [""], [], "CopyBox", 0); confixWrapper("loopCondition", "i < max", [""], [], "CopyBox", i < max); i++) 
    confixWrapper("functionCall", "CopyLink(side, src, i, side, dst, i)", ["side", "src", "i", "side", "dst", "i"], [side, src, i, side, dst, i], "CopyBox", CopyLink(side, src, i, side, dst, i));
  var srcVal = confixWrapper("initvar", "var srcVal = confixWrapper(\"functionCall\", \"dg('_' + side + '_linkNumForce_' + src)\", [\"_ + side + _linkNumForce_ + src\"], ['_' + side + '_linkNumForce_' + src], \"CopyBox\", dg('_' + side + '_linkNumForce_' + src)).value", [""], [], "CopyBox", confixWrapper("functionCall", "dg('_' + side + '_linkNumForce_' + src)", ["_ + side + _linkNumForce_ + src"], ['_' + side + '_linkNumForce_' + src], "CopyBox", dg('_' + side + '_linkNumForce_' + src)).value);
  confixWrapper("functionCall", "dg('_' + side + '_linkNumForce_' + dst)", ["_ + side + _linkNumForce_ + dst"], ['_' + side + '_linkNumForce_' + dst], "CopyBox", dg('_' + side + '_linkNumForce_' + dst)).value = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('_' + side + '_linkNumForce_' + dst)\", [\"_ + side + _linkNumForce_ + dst\"], ['_' + side + '_linkNumForce_' + dst], \"CopyBox\", dg('_' + side + '_linkNumForce_' + dst)).value = srcVal", [""], [], "CopyBox", srcVal);
}
function BoxLength(side) {
  return confixWrapper("return", "return confixWrapper(\"functionCall\", \"parseInt(dg('_' + side + '_boxNumForce').value)\", [\"dg(_ + side + _boxNumForce).value\"], [confixWrapper(\"functionCall\", \"dg('_' + side + '_boxNumForce')\", [\"_ + side + _boxNumForce\"], ['_' + side + '_boxNumForce'], \"BoxLength\", dg('_' + side + '_boxNumForce')).value], \"BoxLength\", parseInt(confixWrapper(\"functionCall\", \"dg('_' + side + '_boxNumForce')\", [\"_ + side + _boxNumForce\"], ['_' + side + '_boxNumForce'], \"BoxLength\", dg('_' + side + '_boxNumForce')).value));", [""], [], "BoxLength", confixWrapper("functionCall", "parseInt(dg('_' + side + '_boxNumForce').value)", ["dg(_ + side + _boxNumForce).value"], [confixWrapper("functionCall", "dg('_' + side + '_boxNumForce')", ["_ + side + _boxNumForce"], ['_' + side + '_boxNumForce'], "BoxLength", dg('_' + side + '_boxNumForce')).value], "BoxLength", parseInt(confixWrapper("functionCall", "dg('_' + side + '_boxNumForce')", ["_ + side + _boxNumForce"], ['_' + side + '_boxNumForce'], "BoxLength", dg('_' + side + '_boxNumForce')).value)));
}
function BoxLengthByFor(side) {
  var i;
  for (i = confixWrapper("infix", "i = 0", [""], [], "BoxLengthByFor", 0); confixWrapper("loopCondition", "i < maxBoxNumOnSides", [""], [], "BoxLengthByFor", i < maxBoxNumOnSides); i++) 
    if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"dg(side + '_PartDiv_' + i)\", [\"side + _PartDiv_ + i\"], [side + '_PartDiv_' + i], \"BoxLengthByFor\", dg(side + '_PartDiv_' + i)) || confixWrapper(\"functionCall\", \"dg(side + '_PartDiv_' + i)\", [\"side + _PartDiv_ + i\"], [side + '_PartDiv_' + i], \"BoxLengthByFor\", dg(side + '_PartDiv_' + i)).style.display == 'none'", ["side", "i", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [side, i, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "BoxLengthByFor", !confixWrapper("functionCall", "dg(side + '_PartDiv_' + i)", ["side + _PartDiv_ + i"], [side + '_PartDiv_' + i], "BoxLengthByFor", dg(side + '_PartDiv_' + i)) || confixWrapper("functionCall", "dg(side + '_PartDiv_' + i)", ["side + _PartDiv_ + i"], [side + '_PartDiv_' + i], "BoxLengthByFor", dg(side + '_PartDiv_' + i)).style.display == 'none')) 
    break;
  return confixWrapper("return", "return i;", [""], [], "BoxLengthByFor", i);
}
function LinkLengthOnBox(side, part) {
  return confixWrapper("return", "return confixWrapper(\"functionCall\", \"parseInt(dg('_' + side + '_linkNumForce_' + part).value)\", [\"dg(_ + side + _linkNumForce_ + part).value\"], [confixWrapper(\"functionCall\", \"dg('_' + side + '_linkNumForce_' + part)\", [\"_ + side + _linkNumForce_ + part\"], ['_' + side + '_linkNumForce_' + part], \"LinkLengthOnBox\", dg('_' + side + '_linkNumForce_' + part)).value], \"LinkLengthOnBox\", parseInt(confixWrapper(\"functionCall\", \"dg('_' + side + '_linkNumForce_' + part)\", [\"_ + side + _linkNumForce_ + part\"], ['_' + side + '_linkNumForce_' + part], \"LinkLengthOnBox\", dg('_' + side + '_linkNumForce_' + part)).value));", [""], [], "LinkLengthOnBox", confixWrapper("functionCall", "parseInt(dg('_' + side + '_linkNumForce_' + part).value)", ["dg(_ + side + _linkNumForce_ + part).value"], [confixWrapper("functionCall", "dg('_' + side + '_linkNumForce_' + part)", ["_ + side + _linkNumForce_ + part"], ['_' + side + '_linkNumForce_' + part], "LinkLengthOnBox", dg('_' + side + '_linkNumForce_' + part)).value], "LinkLengthOnBox", parseInt(confixWrapper("functionCall", "dg('_' + side + '_linkNumForce_' + part)", ["_ + side + _linkNumForce_ + part"], ['_' + side + '_linkNumForce_' + part], "LinkLengthOnBox", dg('_' + side + '_linkNumForce_' + part)).value)));
}
function LinkLengthOnBoxByFor(side, part) {
  var i;
  for (i = confixWrapper("infix", "i = 0", [""], [], "LinkLengthOnBoxByFor", 0); confixWrapper("loopCondition", "i < maxLinkNumBoxes", [""], [], "LinkLengthOnBoxByFor", i < maxLinkNumBoxes); i++) 
    if (confixWrapper("condition", "!confixWrapper(\"functionCall\", \"dg(side + '_LinkBodyContainer_' + part + '_' + i)\", [\"side + _LinkBodyContainer_ + part + _ + i\"], [side + '_LinkBodyContainer_' + part + '_' + i], \"LinkLengthOnBoxByFor\", dg(side + '_LinkBodyContainer_' + part + '_' + i)) || confixWrapper(\"functionCall\", \"dg(side + '_LinkBodyContainer_' + part + '_' + i)\", [\"side + _LinkBodyContainer_ + part + _ + i\"], [side + '_LinkBodyContainer_' + part + '_' + i], \"LinkLengthOnBoxByFor\", dg(side + '_LinkBodyContainer_' + part + '_' + i)).style.display == 'none'", ["side", "part", "i", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [side, part, i, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "LinkLengthOnBoxByFor", !confixWrapper("functionCall", "dg(side + '_LinkBodyContainer_' + part + '_' + i)", ["side + _LinkBodyContainer_ + part + _ + i"], [side + '_LinkBodyContainer_' + part + '_' + i], "LinkLengthOnBoxByFor", dg(side + '_LinkBodyContainer_' + part + '_' + i)) || confixWrapper("functionCall", "dg(side + '_LinkBodyContainer_' + part + '_' + i)", ["side + _LinkBodyContainer_ + part + _ + i"], [side + '_LinkBodyContainer_' + part + '_' + i], "LinkLengthOnBoxByFor", dg(side + '_LinkBodyContainer_' + part + '_' + i)).style.display == 'none')) 
    break;
  return confixWrapper("return", "return i;", [""], [], "LinkLengthOnBoxByFor", i);
}
function ClearBox(side, part) {
  confixWrapper("functionCall", "AddTitleToBox(side, part, '')", ["side", "part", ""], [side, part, ''], "ClearBox", AddTitleToBox(side, part, ''));
  confixWrapper("functionCall", "InsertLinkToBox(side, part, 0, 'Sample Link', 'http://psyc.horm.org', 'Good Link!', 1)", ["side", "part", "0", "Sample Link", "http://psyc.horm.org", "Good Link!", "1"], [side, part, 0, 'Sample Link', 'http://psyc.horm.org', 'Good Link!', 1], "ClearBox", InsertLinkToBox(side, part, 0, 'Sample Link', 'http://psyc.horm.org', 'Good Link!', 1));
  var max = confixWrapper("initvar", "var max = confixWrapper(\"functionCall\", \"LinkLengthOnBox(side, part)\", [\"side\", \"part\"], [side, part], \"ClearBox\", LinkLengthOnBox(side, part))", [""], [], "ClearBox", confixWrapper("functionCall", "LinkLengthOnBox(side, part)", ["side", "part"], [side, part], "ClearBox", LinkLengthOnBox(side, part)));
  if (confixWrapper("condition", "confixWrapper(\"functionCall\", \"dg(side + '_PartDiv_' + (part + 1))\", [\"side + _PartDiv_ + (part + 1)\"], [side + '_PartDiv_' + (part + 1)], \"ClearBox\", dg(side + '_PartDiv_' + (part + 1)))", ["side", "part", "max", "tmax", "i", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [side, part, max, tmax, i, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ClearBox", confixWrapper("functionCall", "dg(side + '_PartDiv_' + (part + 1))", ["side + _PartDiv_ + (part + 1)"], [side + '_PartDiv_' + (part + 1)], "ClearBox", dg(side + '_PartDiv_' + (part + 1))))) 
  var tmax = confixWrapper("initvar", "var tmax = confixWrapper(\"functionCall\", \"LinkLengthOnBox(side, part + 1)\", [\"side\", \"part + 1\"], [side, part + 1], \"ClearBox\", LinkLengthOnBox(side, part + 1))", [""], [], "ClearBox", confixWrapper("functionCall", "LinkLengthOnBox(side, part + 1)", ["side", "part + 1"], [side, part + 1], "ClearBox", LinkLengthOnBox(side, part + 1)));
  if (confixWrapper("condition", "max < tmax", ["side", "part", "max", "tmax", "i", "PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [side, part, max, tmax, i, PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "ClearBox", max < tmax)) 
  max = confixWrapper("infix", "max = tmax", [""], [], "ClearBox", tmax);
  for (var i = confixWrapper("initvar", "var i = 1", [""], [], "ClearBox", 1); confixWrapper("loopCondition", "i < max", [""], [], "ClearBox", i < max); i++) 
    confixWrapper("functionCall", "InsertLinkToBox(side, part, i, '', '', '', 0)", ["side", "part", "i", "", "", "", "0"], [side, part, i, '', '', '', 0], "ClearBox", InsertLinkToBox(side, part, i, '', '', '', 0));
  confixWrapper("functionCall", "dg('_' + side + '_linkNumForce_' + part)", ["_ + side + _linkNumForce_ + part"], ['_' + side + '_linkNumForce_' + part], "ClearBox", dg('_' + side + '_linkNumForce_' + part)).value = confixWrapper("infix", "confixWrapper(\"functionCall\", \"dg('_' + side + '_linkNumForce_' + part)\", [\"_ + side + _linkNumForce_ + part\"], ['_' + side + '_linkNumForce_' + part], \"ClearBox\", dg('_' + side + '_linkNumForce_' + part)).value = 1", [""], [], "ClearBox", 1);
}
function AddTitleToBox(side, part, str) {
  confixWrapper("functionCall", "SetValAndDo('_' + side + '_TitleTxt_' + part, str)", ["_ + side + _TitleTxt_ + part", "str"], ['_' + side + '_TitleTxt_' + part, str], "AddTitleToBox", SetValAndDo('_' + side + '_TitleTxt_' + part, str));
}
function ExpirePsycHodramaCookie() {
  var date = confixWrapper("initvar", "var date = new Date()", [""], [], "ExpirePsycHodramaCookie", new Date());
  confixWrapper("functionCall", "date.setTime(date.getTime() - (24 * 60 * 60 * 1000))", ["date.getTime() - (24 * 60 * 60 * 1000)"], [confixWrapper("functionCall", "date.getTime()", [], [], "ExpirePsycHodramaCookie", date.getTime()) - (24 * 60 * 60 * 1000)], "ExpirePsycHodramaCookie", date.setTime(confixWrapper("functionCall", "date.getTime()", [], [], "ExpirePsycHodramaCookie", date.getTime()) - (24 * 60 * 60 * 1000)));
  document.cookie = confixWrapper("infix", "document.cookie = \"PsycHodrama=PsycHo!; expires=\" + confixWrapper(\"functionCall\", \"date.toGMTString()\", [], [], \"ExpirePsycHodramaCookie\", date.toGMTString()) + \"; path=/\"", [""], [], "ExpirePsycHodramaCookie", "PsycHodrama=PsycHo!; expires=" + confixWrapper("functionCall", "date.toGMTString()", [], [], "ExpirePsycHodramaCookie", date.toGMTString()) + "; path=/");
}
function sayGoodbyeToItAll() {
  if (confixWrapper("condition", "global_didSomething", ["PsycHo_CurrentVersion", "global_lang", "global_colorRef", "global_lastColor", "global_yetMove", "global_canWrite", "global_didSomething", "global_gotResult", "global_lastDidDuty", "global_isMinimized", "global_isPathedHide", "global_isTakingEffectAll", "global_prov", "maxBoxNumOnSides", "maxLinkNumBoxes", "global_AINode", "encN", "encArr", "encSym", "drama_splitter", "dont_help", "dont_cp", "dont_addimg", "dont_drama", "dont_kines", "dont_editpart", "global_last_kd_alert", "dont_page_focus", "isKinePrev", "global_isShiftDown"], [PsycHo_CurrentVersion, global_lang, global_colorRef, global_lastColor, global_yetMove, global_canWrite, global_didSomething, global_gotResult, global_lastDidDuty, global_isMinimized, global_isPathedHide, global_isTakingEffectAll, global_prov, maxBoxNumOnSides, maxLinkNumBoxes, global_AINode, encN, encArr, encSym, drama_splitter, dont_help, dont_cp, dont_addimg, dont_drama, dont_kines, dont_editpart, global_last_kd_alert, dont_page_focus, isKinePrev, global_isShiftDown], "sayGoodbyeToItAll", global_didSomething)) 
  {
    return confixWrapper("return", "return \"You have unsaved works in PsycHo.\";", [""], [], "sayGoodbyeToItAll", "You have unsaved works in PsycHo.");
  }
}
